{"version":3,"sources":["components/theme_selectors/GlobalStyles.js","components/theme_selectors/Themes.js","components/set_title.js","components/theme_selectors/ThemeToggler.js","components/CommandInputGrid.js","components/CommandHistory.js","components/LatestCommand.js","components/NestedList.js","components/OnlineUsers.js","components/PluginMetadataForm.js","components/PluginMetadata.js","components/plugins_list.js","components/AudioTrackItem.js","components/AudioCurrentTrack.js","components/AudioTrackList.js","components/SoundBoardItem.js","components/SoundBoardList.js","components/nav_bar.js","App.js","components/theme_selectors/UseDarkMode.js","reportWebVitals.js","index.js"],"names":["GlobalStyles","createGlobalStyle","theme","body","text","lightTheme","accent_primary","accent_secondary","contrast","contrast2","toggleForeground","toggleBackground","black","white","darkTheme","SetTitle","getBotName","fetch","headers","then","res","ok","Promise","reject","json","json_data","document","title","data","name","catch","e","console","trace","this","React","Component","Toggle","toggleTheme","themeText","FormGroup","FormControlLabel","control","Switch","checked","onChange","label","ThemedTextField","styled","TextField","ThemedSubmitButton","Button","ThemedIconButton","IconButton","ThemedPaper","Paper","CommandFormGrid","props","refreshBotDetails","setState","botName","botCommandToken","command_token","log","updateCommandText","evt","commandText","target","value","cmdIsValid","sendCommand","preventDefault","sentCmd","state","method","JSON","stringify","status","length","charAt","cmdInvalid","invalidCmdText","bind","url","Grid","item","xs","elevation","onSubmit","autoComplete","InputLabelProps","className","variant","type","fullWidth","placeholder","error","InputProps","endAdornment","component","disabled","onClick","endIcon","style","width","height","RefreshButton","ThemedTable","Table","ThemedTableCell","TableCell","ThemedAlert","Alert","CustomGrid","CommandHistory","getCommandHistory","useAlert","cmd_history","showAlert","alertMsg","alertSeverity","closeAlert","prev_props","prev_state","socketData","last_cmd_output","alert","onClose","severity","sm","Collapse","in","TableContainer","TableHead","TableRow","Typography","id","size","TableBody","map","index","scope","LatestCommand","last_cmd_type","last_cmd","Object","keys","Parser","ThemedTreeItem","TreeItem","NestedList","handleChannelRemove","channel","removeChannel","muteUser","username","deafenUser","kickUser","banUser","collapseIcon","expandIcon","users","items","nodeId","node_id","item_label","user","user_index","container","alignItems","gutterBottom","noWrap","color","icon","bot_name","Tooltip","aria-label","subitem","subitem_index","subchannels","channel_name","event","OnlineUsers","useStyles","makeStyles","root","flexGrow","maxWidth","refreshBotName","max_expand","Array","from","_","i","list_hash","list_items","classes","server_hierarchy","hierarchy","hash","TreeView","defaultExpanded","PluginMetadataForm","getPluginMetadata","plugin_name","metadata","setPluginMetadata","updateMetaInfo","key","new_meta","updateMetadataFile","inner_key","inner_index","defaultValue","shrink","ThemedPaperInner","PluginMetadata","src","iconStyle","collapsed","displayDataTypes","ThemedTreeView","PluginsList","refreshPlugins","plugins","ThemedDeleteIcon","DeleteRoundedIcon","ThemedSkipIcon","SkipNextRoundedIcon","ThemedMusicIcon","MusicNoteRoundedIcon","ThemedTypography","AudioTrackItem","removeTrack","indexText","skipToTrack","ListItem","useIcon","ListItemIcon","ListItemText","primary","primaryText","secondary","secondaryText","href","rel","useButtons","ListItemSecondaryAction","edge","ThemedCard","Card","DetailsDiv","div","ControlsDiv","ThemedCardMedia","CardMedia","ThemedCardContent","CardContent","LoopIconActive","LoopIcon","LoopIconInactive","AudioCurrentTrack","stopTrack","nextTrack","togglePause","replayTrack","toggleLoop","shuffleQueue","increaseVolume","decreaseVolume","audio_track","img_src","track_hash","volume","looping","duration","progress","progress_string","duration_string","audio_data","track","loop","img_uri_formatted","duration_time","progress_time","arial-label","paddingTop","image","display","Box","minWidth","mr","LinearProgress","ThemedList","List","AudioTrackList","track_list","queue","justifyContent","Divider","track_index","alt_uri","useDividers","ThemedActionArea","CardActionArea","SoundBoardItem","playClip","clipName","SoundBoardList","getSBClips","clips","playRandomClip","lastClipSection","toLowerCase","toUpperCase","ThemedTabs","Tabs","ThemedToolbar","Toolbar","TabPanel","children","other","role","hidden","aria-labelledby","p","TopNavBar","newVal","AppBar","position","handleChange","tabs","Tab","tabProps","themeToggle","spacing","direction","ThemedJSONViewer","ReactJson","ThemedErrorAlert","ThemedIconAlert","App","webSocket","useRef","useState","connectionError","setConnectionError","connectionErrorMsg","setConnectionErrorMsg","setSocketData","setTheme","setMode","mode","window","localStorage","setItem","useEffect","localTheme","getItem","UseDarkMode","themeToggler","lightThemeData","base00","base01","base02","base03","base04","base05","base06","base07","base08","base09","base0A","base0B","base0C","base0D","base0E","base0F","darkThemeData","themeMode","current","WebSocket","format","protocol","location","hostname","port","pathname","slashes","onerror","onmessage","msg","parse","Snackbar","anchorOrigin","vertical","horizontal","open","action","reload","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"wdACO,IAAMA,EAAeC,YAAH,KAEP,qBAAGC,MAAkBC,QAC1B,qBAAGD,MAAkBE,QCJrBC,EAAa,CACtBF,KAAM,OACNC,KAAM,UACNE,eAAgB,UAChBC,iBAAkB,UAClBC,SAAU,OACVC,UAAW,UACXC,iBAAkB,OAClBC,iBAAkB,UAClBC,MAAO,OACPC,MAAO,QAEEC,EAAY,CACrBX,KAAM,UACNC,KAAM,UACNE,eAAgB,UAChBC,iBAAkB,UAClBC,SAAU,UACVC,UAAW,OACXC,iBAAkB,OAClBC,iBAAkB,UAClBC,MAAO,OACPC,MAAO,Q,gCCMIE,E,4MArBXC,WAAa,WACTC,MAAM,oBAAqB,CACvBC,QAAS,CACL,OAAU,mBACV,eAAgB,sBAGvBC,MAAK,SAAAC,GAAG,OAAKA,EAAIC,GAAKD,EAAME,QAAQC,OAAOH,MAC3CD,MAAK,SAAAC,GAAG,OAAIA,EAAII,UAChBL,MAAK,SAAAM,GAAS,OAAIC,SAASC,MAAT,UAAoBF,EAAUG,KAAKC,KAAnC,iBAClBC,OAAM,SAAAC,GACHC,QAAQC,MAAMF,GACdL,SAASC,MAAT,4B,kEAfJO,KAAKlB,e,+BAoBL,OAAO,4B,GAtBQmB,IAAMC,W,2BCqBdC,EAlBA,SAAC,GAAsC,IAArCnC,EAAoC,EAApCA,MAAkBoC,GAAkB,EAA7BC,UAA6B,EAAlBD,aAE/B,OACE,cAACE,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAkBC,QAAS,cAACC,EAAA,EAAD,CACvBC,QAAmB,SAAV1C,EACT2C,SAAUP,EACVT,KAAK,oBACHiB,MAAM,iB,0sBCNpB,IAAMC,EAAkBC,YAAOC,IAAPD,CAAH,KAEJ,qBAAG9C,MAAkBE,QAGrB,qBAAGF,MAAkBE,QAIhC8C,EAAqBF,YAAOG,IAAPH,CAAH,KACA,qBAAG9C,MAAkBM,YAChC,qBAAGN,MAAkBE,QAEN,qBAAGF,MAAkBK,oBAChC,qBAAGL,MAAkBW,SAGhCuC,EAAmBJ,YAAOK,IAAPL,CAAH,KACT,qBAAG9C,MAAkBE,QAEjB,qBAAGF,MAAkBE,QAIhCkD,EAAcN,YAAOO,IAAPP,CAAH,KAGO,qBAAG9C,MAAkBC,QA6H9BqD,E,kDAxHX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAaVC,kBAAoB,WAChBzC,MAAM,eAAgB,CAClBC,QAAS,CACL,OAAU,mBACV,eAAgB,sBAGvBC,MAAK,SAAAC,GAAG,OAAKA,EAAIC,GAAKD,EAAME,QAAQC,OAAOH,MAC3CD,MAAK,SAAAC,GAAG,OAAIA,EAAII,UAChBL,MAAK,SAAAM,GACF,EAAKkC,SAAS,CAACC,QAASnC,EAAUG,KAAKC,OACvC,EAAK8B,SAAS,CAACE,gBAAiBpC,EAAUG,KAAKkC,mBAChDhC,OAAM,SAAAC,GACLC,QAAQ+B,IAAIhC,GACZ,EAAK4B,SAAS,CAACC,QAAS,QACxB,EAAKD,SAAS,CAACE,gBAAiB,UA7BrB,EAiCnBG,kBAAoB,SAACC,GACjB,EAAKN,SAAS,CAACO,YAAaD,EAAIE,OAAOC,QACnC,EAAKC,aACL,EAAKV,SAAS,CAACU,YAAY,IAG3B,EAAKV,SAAS,CAACU,YAAY,KAvChB,EA2CnBC,YAAc,SAACL,GACXA,EAAIM,iBACA,EAAKF,cACL,EAAKV,SAAS,CAACa,QAAS,EAAKC,MAAMP,cAEnCjD,MAAM,eAAgB,CAClByD,OAAQ,OACRvE,KAAMwE,KAAKC,UAAU,CAAC,KAAQ,EAAKH,MAAMP,gBAE5C/C,MAAK,SAAAC,GAAG,OAAKA,EAAIC,GAAKD,EAAME,QAAQC,OAAOH,MAC3CD,MAAK,SAAAC,GAAG,OAAIA,EAAII,UAChBL,MAAK,SAAAM,GACFO,QAAQ+B,IAAItC,EAAUoD,WAEzB/C,OAAM,SAAAC,GAAC,OAAIC,QAAQ+B,IAAIhC,MACxB,EAAK4B,SAAS,CAACO,YAAa,MAG5B,EAAKP,SAAS,CAACO,YAAa,KAEhC,EAAKP,SAAS,CAACU,YAAY,KA/DZ,EAkEnBA,WAAa,WACT,OAAI,EAAKI,MAAMP,YAAYY,OAAS,GAAK,EAAKL,MAAMP,YAAYa,OAAO,KAAO,EAAKN,MAAMZ,iBAjEzF,EAAKY,MAAQ,CACTb,QAAS,GACTC,gBAAiB,GACjBK,YAAa,GACbc,YAAY,EACZC,eAAgB,GAChBT,QAAS,IAEb,EAAKR,kBAAoB,EAAKA,kBAAkBkB,KAAvB,gBACzB,EAAKZ,YAAc,EAAKA,YAAYY,KAAjB,gBAXJ,E,gEA0EfhD,KAAKwB,kBAAkBxB,KAAKuB,MAAM0B,O,+BAIlC,OACI,cAACC,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,SACI,cAAChC,EAAD,CAAaiC,UAAW,EAAxB,SACA,sBAAMC,SAAUtD,KAAKoC,YAAamB,aAAa,MAA/C,SACI,cAAC1C,EAAD,CACI2C,gBAAiB,CAACC,UAAW,eAC7BC,QAAQ,WACRxB,MAAOlC,KAAKuC,MAAMP,YAClB2B,KAAK,OACLC,WAAW,EACXjD,SAAUX,KAAK8B,kBACf+B,YAAW,UAAK7D,KAAKuC,MAAMZ,gBAAhB,eACXf,OAASZ,KAAKmC,cAAgBnC,KAAKuC,MAAMP,YAAYY,OAAS,EAAvD,mCAAwF5C,KAAKuC,MAAMZ,gBAAnG,0CAAsJ3B,KAAKuC,MAAMb,QAAjK,iBACPoC,MAAO9D,KAAKuC,MAAMP,YAAYa,OAAO,KAAO7C,KAAKuC,MAAMZ,iBAAmB3B,KAAKuC,MAAMP,YAAYY,OAAS,EAC1GmB,WACI,CAACC,aACuB,YAApBhE,KAAKuB,MAAMoC,KACX,cAACzC,EAAD,CAAkB+C,UAAU,OAC5BN,KAAK,SACLO,UAAWlE,KAAKmC,WAChBgC,QAASnE,KAAKoC,YAHd,SAII,cAAC,IAAD,MAEJ,cAACpB,EAAD,CAAoBiD,UAAU,OAC1BG,QAAS,cAAC,IAAD,IACTT,KAAK,SACLD,QAAQ,YACRW,MAAO,CAACC,MAAO,QAASC,OAAO,QAC/BL,UAAWlE,KAAKmC,WAChBgC,QAASnE,KAAKoC,YANlB,+B,GAtGFnC,IAAMC,W,8xBC9BpC,IAAMsE,GAAgB1D,YAAOK,IAAPL,CAAH,MAEN,qBAAG9C,MAAkBE,QAEN,qBAAGF,MAAkBK,oBAChC,qBAAGL,MAAkBW,SAGhC8F,GAAc3D,YAAO4D,IAAP5D,CAAH,MAEK,qBAAG9C,MAAkBO,aAGrCoG,GAAkB7D,YAAO8D,IAAP9D,CAAH,MACG,qBAAG9C,MAAkBM,YAChC,qBAAGN,MAAkBE,QAE5B2G,GAAc/D,YAAOgE,IAAPhE,CAAH,KACO,qBAAG9C,MAAkBC,QAChC,qBAAGD,MAAkBE,QAG5B6G,GAAajE,YAAOoC,IAAPpC,CAAH,KAiGDkE,G,kDA1FX,WAAYzD,GAAQ,IAAD,8BACf,cAAMA,IASV0D,kBAAoB,SAACC,GACjBnG,MAAM,kBAAmB,CACrBC,QAAS,CACL,OAAU,mBACV,eAAgB,sBAGvBC,MAAK,SAAAC,GAAG,OAAKA,EAAIC,GAAKD,EAAME,QAAQC,OAAOH,MAC3CD,MAAK,SAAAC,GAAG,OAAIA,EAAII,UAChBL,MAAK,SAAAM,GACF,EAAKkC,SAAS,CAAC0D,YAAa5F,EAAUG,KAAKyF,cACvCD,GACA,EAAKzD,SAAS,CAAC2D,WAAW,EAAMC,SAAU,mDAAoDC,cAAe,eAElH1F,OAAM,SAAAC,GACLC,QAAQ+B,IAAIhC,GACZ,EAAK4B,SAAS,CAAC0D,YAAa,KAC5B,EAAK1D,SAAS,CAAC2D,WAAW,EAAMC,SAAU,6CAA8CC,cAAe,cA3B5F,EAyCnBC,WAAa,WACT,EAAK9D,SAAS,CAAC2D,WAAW,EAAOC,SAAU,GAAIC,cAAe,MAxC9D,EAAK/C,MAAQ,CACT6C,WAAW,EACXC,SAAU,GACVC,cAAe,GACfH,YAAa,IANF,E,gEAgCfnF,KAAKiF,mBAAkB,K,yCAGRO,EAAYC,GACvBD,EAAWE,WAAWC,kBAAoB3F,KAAKuB,MAAMmE,WAAWC,iBAChE3F,KAAKiF,mBAAkB,K,+BAQrB,IAAD,OACDW,EAAQ5F,KAAKuC,MAAM6C,UAAY,cAACP,GAAD,CAAagB,QAAS7F,KAAKuF,WAAYO,SAAU9F,KAAKuC,MAAM+C,cAA5D,SAA4EtF,KAAKuC,MAAM8C,WAA0B,GACpJ,OACI,eAACN,GAAD,CAAY5B,MAAI,EAACC,GAAI,GAAI2C,GAAI,EAA7B,UACI,cAACC,EAAA,EAAD,CAAUC,GAAIjG,KAAKuC,MAAM6C,UAAzB,SACKQ,IAEL,cAACM,EAAA,EAAD,CAAgBjC,UAAU,OAA1B,SACI,cAAC5C,EAAA,EAAD,CAAOgC,UAAW,EAAlB,SACA,eAACoB,GAAD,CAAahB,UAAU,WAAvB,UACI,cAAC0C,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,UACI,cAACzB,GAAD,CAAiBlB,UAAU,YAA3B,SACI,eAAC4C,EAAA,EAAD,CAAY3C,QAAQ,QAApB,UAA4B,gDAC5B,cAACc,GAAD,CACA8B,GAAG,0BACHnC,QAAS,kBAAM,EAAKc,mBAAkB,IACtCsB,KAAK,QAHL,SAKI,cAAC,IAAD,eAMhB,cAACC,EAAA,EAAD,CAAW/C,UAAU,YAArB,SAEQzD,KAAKuC,MAAM4C,YAAYsB,KAAI,SAACtD,EAAMuD,GAAP,OAEvB,cAACN,EAAA,EAAD,UACI,cAACzB,GAAD,CAAiBV,UAAU,KAAK0C,MAAM,MAAMlD,UAAU,oBAAtD,SACCN,KAFUA,EAAKuD,sB,GA3E3BzG,IAAMC,W,meC9BnC,IAAMuE,GAAc3D,YAAO4D,IAAP5D,CAAH,MAEK,qBAAG9C,MAAkBO,aAOrCoG,GAAkB7D,YAAO8D,IAAP9D,CAAH,MACG,qBAAG9C,MAAkBM,YAChC,qBAAGN,MAAkBE,QAG5B6G,GAAajE,YAAOoC,IAAPpC,CAAH,MA6DD8F,G,kDAtDX,WAAYrF,GAAQ,IAAD,8BACf,cAAMA,IACDgB,MAAQ,CACTsE,cAAe,GACfC,SAAU,IAJC,E,gEASmC,IAA9CC,OAAOC,KAAKhH,KAAKuB,MAAMmE,YAAY9C,QACnC5C,KAAKyB,SAAS,CACVqF,SAAU9G,KAAKuB,MAAMmE,WAAWC,gBAChCkB,cAAe7G,KAAKuB,MAAMmE,WAAWmB,kB,yCAK9BrB,EAAYC,GACvBD,EAAWE,WAAWC,kBAAoB3F,KAAKuB,MAAMmE,WAAWC,iBAChE3F,KAAKyB,SAAS,CACVqF,SAAU9G,KAAKuB,MAAMmE,WAAWC,gBAChCkB,cAAe7G,KAAKuB,MAAMmE,WAAWmB,kB,+BAM7C,OACI,cAAC,GAAD,CAAY1D,MAAI,EAACC,GAAI,GAAI2C,GAAI,EAA7B,SACI,cAACG,EAAA,EAAD,CAAgBjC,UAAU,OAA1B,SACI,cAAC5C,EAAA,EAAD,CAAOgC,UAAW,EAAlB,SACA,eAAC,GAAD,CAAaI,UAAU,WAAvB,UACI,cAAC0C,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,UACI,cAAC,GAAD,CAAiB3C,UAAU,YAA3B,SACI,cAAC4C,EAAA,EAAD,CAAY3C,QAAQ,QAApB,SAA4B,uDAA0B1D,KAAKuC,MAAMsE,yBAI7E,cAACL,EAAA,EAAD,CAAW/C,UAAU,YAArB,SACI,cAAC2C,EAAA,EAAD,UACI,cAAC,GAAD,CAAiB3C,UAAU,gBAA3B,SACKwD,KAAOjH,KAAKuC,MAAMuE,6B,GA3C3B7G,IAAMC,W,+mBCRlC,IAAMgH,GAAiBpG,YAAOqG,KAAPrG,CAAH,MACI,qBAAG9C,MAAkBM,YAChC,qBAAGN,MAAkBE,QAI5BgD,GAAmBJ,YAAOK,IAAPL,CAAH,MAET,qBAAG9C,MAAkBE,QAEN,qBAAGF,MAAkBK,oBAChC,qBAAGL,MAAkBW,SAIjByI,G,4MAEjBC,oBAAsB,SAACxH,EAAGyH,GACtBzH,EAAEwC,iBACF,EAAKkF,cAAcD,I,EAGvBC,cAAgB,SAACD,GACbvI,MAAM,6BAA8B,CAChCyD,OAAQ,OACRvE,KAAMwE,KAAKC,UAAU,CAAC,KAAO,GAAP,OAAW4E,OAEpCrI,MAAK,SAAAC,GAAG,OAAKA,EAAIC,GAAKD,EAAME,QAAQC,OAAOH,MAC3CD,MAAK,SAAAC,GAAG,OAAIA,EAAII,UAChBL,MAAK,SAAAM,GACFO,QAAQ+B,IAAItC,EAAUoD,WAEzB/C,OAAM,SAAAC,GAAC,OAAIC,QAAQ+B,IAAIhC,O,EAG5B2H,SAAW,SAACC,GACR1I,MAAM,wBAAyB,CAC3ByD,OAAQ,OACRvE,KAAMwE,KAAKC,UAAU,CAAC,KAAO,GAAP,OAAW+E,OAEpCxI,MAAK,SAAAC,GAAG,OAAKA,EAAIC,GAAKD,EAAME,QAAQC,OAAOH,MAC3CD,MAAK,SAAAC,GAAG,OAAIA,EAAII,UAChBL,MAAK,SAAAM,GACFO,QAAQ+B,IAAItC,EAAUoD,WAEzB/C,OAAM,SAAAC,GAAC,OAAIC,QAAQ+B,IAAIhC,O,EAG5B6H,WAAa,SAACD,GACV1I,MAAM,0BAA2B,CAC7ByD,OAAQ,OACRvE,KAAMwE,KAAKC,UAAU,CAAC,KAAO,GAAP,OAAW+E,OAEpCxI,MAAK,SAAAC,GAAG,OAAKA,EAAIC,GAAKD,EAAME,QAAQC,OAAOH,MAC3CD,MAAK,SAAAC,GAAG,OAAIA,EAAII,UAChBL,MAAK,SAAAM,GACFO,QAAQ+B,IAAItC,EAAUoD,WAEzB/C,OAAM,SAAAC,GAAC,OAAIC,QAAQ+B,IAAIhC,O,EAG5B8H,SAAW,SAACF,GACR1I,MAAM,wBAAyB,CAC3ByD,OAAQ,OACRvE,KAAMwE,KAAKC,UAAU,CAAC,KAAO,GAAP,OAAW+E,OAEpCxI,MAAK,SAAAC,GAAG,OAAKA,EAAIC,GAAKD,EAAME,QAAQC,OAAOH,MAC3CD,MAAK,SAAAC,GAAG,OAAIA,EAAII,UAChBL,MAAK,SAAAM,GACFO,QAAQ+B,IAAItC,EAAUoD,WAEzB/C,OAAM,SAAAC,GAAC,OAAIC,QAAQ+B,IAAIhC,O,EAG5B+H,QAAU,SAACH,GACP1I,MAAM,uBAAwB,CAC1ByD,OAAQ,OACRvE,KAAMwE,KAAKC,UAAU,CAAC,KAAO,GAAP,OAAW+E,OAEpCxI,MAAK,SAAAC,GAAG,OAAKA,EAAIC,GAAKD,EAAME,QAAQC,OAAOH,MAC3CD,MAAK,SAAAC,GAAG,OAAIA,EAAII,UAChBL,MAAK,SAAAM,GACFO,QAAQ+B,IAAItC,EAAUoD,WAEzB/C,OAAM,SAAAC,GAAC,OAAIC,QAAQ+B,IAAIhC,O,uDAGlB,IAAD,OACDgI,EAAe,cAAC,KAAD,IACfC,EAAa,cAAC,KAAD,IAKjB,OAJI9H,KAAKuB,MAAMwG,OAAS/H,KAAKuB,MAAMyG,QAC/BF,EAAa9H,KAAKuB,MAAMwG,MAAMnF,OAAS,GAAK5C,KAAKuB,MAAMyG,MAAMpF,OAAS,EAAI,cAAC,KAAD,IAAuB,cAAC,KAAD,IACjGiF,EAAe7H,KAAKuB,MAAMwG,MAAMnF,OAAS,GAAK5C,KAAKuB,MAAMyG,MAAMpF,OAAS,EAAI,cAAC,KAAD,IAA4B,cAAC,KAAD,KAGpG,eAACsE,GAAD,CAAkDe,OAAQjI,KAAKuB,MAAM2G,QAAQ,GAC7EtH,MAAOZ,KAAKuB,MAAM4G,WAAYL,WAAYA,EAAYD,aAAcA,EADpE,UAGQ7H,KAAKuB,MAAMwG,MACX/H,KAAKuB,MAAMwG,MAAMtB,KAAI,SAAC2B,EAAMC,GAAP,OACjB,cAACnB,GAAD,CAEAe,OAAQ,EAAK1G,MAAM2G,QAAQG,EAAW,GACtCzH,MACI,eAACsC,EAAA,EAAD,CAAMoF,WAAS,EAAClF,GAAI,GAAgCmF,WAAW,SAA/D,UACI,cAACrF,EAAA,EAAD,CAAMC,MAAI,EAAC4C,GAAI,EAAf,SACI,cAACM,EAAA,EAAD,CAAY3C,QAAQ,YAAY8E,cAAc,EAAMC,QAAM,EAA1D,SAA4DL,EAAI,SAEpE,eAAC,WAAD,WAC8B,SAAtBA,EAAI,UACJ,cAAClF,EAAA,EAAD,CAAMC,MAAI,EAAC4C,GAAI,EAAGwC,WAAW,QAA7B,SACI,cAAC,KAAD,CAAYG,MAAM,YAAYrE,MAAO,CAACC,MAAM,OAAQC,OAAO,YACrD,GAEc,SAAxB6D,EAAI,YACJ,cAAClF,EAAA,EAAD,CAAMC,MAAI,EAAC4C,GAAI,EAAGwC,WAAW,QAA7B,SACI,cAAC,KAAD,CAAYG,MAAM,UAAUrE,MAAO,CAACC,MAAM,OAAQC,OAAO,YACnD,GAEY,SAAtB6D,EAAI,UACJ,cAAClF,EAAA,EAAD,CAAMC,MAAI,EAAC4C,GAAI,EAAGwC,WAAW,QAA7B,SACI,cAAC,KAAD,CAAeG,MAAM,YAAYrE,MAAO,CAACC,MAAM,OAAQC,OAAO,YACxD,GAEc,SAAxB6D,EAAI,YACJ,cAAClF,EAAA,EAAD,CAAMC,MAAI,EAAC4C,GAAI,EAAGwC,WAAW,QAA7B,SACI,cAAC,KAAD,CAAeG,MAAM,UAAUrE,MAAO,CAACC,MAAM,OAAQC,OAAO,YACtD,QAvBtB,UAAgC6D,EAAI,KAApC,SA4BJO,KAAM,EAAKpH,MAAMqH,WAAaR,EAAI,KAAW,cAAC,KAAD,IAA+B,GAC5EN,WAAY,EAAKvG,MAAMqH,WAAaR,EAAI,KAAW,cAAC,KAAD,IAAuB,GAC1EP,aAAc,EAAKtG,MAAMqH,WAAaR,EAAI,KAAW,cAAC,KAAD,IAA8B,GAlCnF,SAqCQ,EAAK7G,MAAMqH,WAAaR,EAAI,KAC5B,eAAClF,EAAA,EAAD,CAAMoF,WAAS,EAAClF,GAAI,GAApB,UACI,cAACF,EAAA,EAAD,CAAMC,MAAI,EAAV,SACI,cAAC0F,GAAA,EAAD,CAASpJ,MAAK,eAAU2I,EAAI,MAAYU,aAAA,oBAAyBV,EAAI,MAArE,SACA,cAAC,GAAD,CAAkB7B,KAAK,QAAQpC,QAAS,kBAAM,EAAKqD,SAASY,EAAI,OAAhE,SAA2E,cAAC,KAAD,CAAY/D,MAAO,CAACC,MAAM,OAAQC,OAAO,gBAGxH,cAACrB,EAAA,EAAD,CAAMC,MAAI,EAAV,SACI,cAAC0F,GAAA,EAAD,CAASpJ,MAAK,iBAAY2I,EAAI,MAAYU,aAAA,sBAA2BV,EAAI,MAAzE,SACA,cAAC,GAAD,CAAkB7B,KAAK,QAAQpC,QAAS,kBAAM,EAAKuD,WAAWU,EAAI,OAAlE,SAA6E,cAAC,KAAD,CAAe/D,MAAO,CAACC,MAAM,OAAQC,OAAO,gBAG7H,cAACrB,EAAA,EAAD,CAAMC,MAAI,EAAV,SACI,cAAC0F,GAAA,EAAD,CAASpJ,MAAK,eAAU2I,EAAI,MAAYU,aAAA,oBAAyBV,EAAI,MAArE,SACA,cAAC,GAAD,CAAkB7B,KAAK,QAAQpC,QAAS,kBAAM,EAAKwD,SAASS,EAAI,OAAhE,SAA2E,cAAC,KAAD,CAAsB/D,MAAO,CAACC,MAAM,OAAQC,OAAO,gBAGlI,cAACrB,EAAA,EAAD,CAAMC,MAAI,EAAV,SACI,cAAC0F,GAAA,EAAD,CAASpJ,MAAK,cAAS2I,EAAI,MAAYU,aAAA,mBAAwBV,EAAI,MAAnE,SACA,cAAC,GAAD,CAAkB7B,KAAK,QAAQpC,QAAS,kBAAM,EAAKyD,QAAQQ,EAAI,OAA/D,SAA0E,cAAC,KAAD,CAAkB/D,MAAO,CAACC,MAAM,OAAQC,OAAO,mBAGvH,IA3DlB,UACQ,EAAKhD,MAAM2G,QAAQG,EAD3B,YA8DC,GAGLrI,KAAKuB,MAAMyG,MAAMvB,KAAI,SAACsC,EAASC,GAAV,OACjB,cAAC5B,EAAD,CAEIc,QAAUc,EAAc,EAAKzH,MAAM2G,QAAQ,EAAK,GAChDF,MAAOe,EAAQE,YACflB,MAAOgB,EAAQhB,MACfa,SAAU,EAAKrH,MAAMqH,SACrBT,WACA,eAACjF,EAAA,EAAD,CAAMoF,WAAS,EAAClF,GAAI,GAAImF,WAAW,SAAnC,UACI,cAACrF,EAAA,EAAD,CAAMC,MAAI,EAAC4C,GAAI,GAAf,SACI,cAACM,EAAA,EAAD,CAAY3C,QAAQ,QAAQ8E,cAAc,EAAMC,QAAM,EAAtD,SAAwDM,EAAQG,iBAEpE,cAAChG,EAAA,EAAD,CAAMC,MAAI,EAAC4C,GAAI,EAAf,SAEI,EAAKxE,MAAM4G,aAAe,EAAK5G,MAAMwG,MAAQ,GAC7C,cAACc,GAAA,EAAD,CAASpJ,MAAK,0BAAqBsJ,EAAQG,cAAgBJ,aAAA,yBAA8BC,EAAQG,cAAjG,SACI,cAAC,GAAD,CAAkB3C,KAAK,QAAQpC,QAAS,SAACgF,GAAD,OAAW,EAAK9B,oBAAoB8B,EAAOJ,EAAQG,eAA3F,SAA0G,cAAC,KAAD,CAAmB7E,MAAO,CAACC,MAAO,OAAQC,OAAQ,oBAf5K,UACayE,EAAc,EAAKzH,MAAM2G,QAAQ,EAD9C,cAvEZ,UAAwBlI,KAAKuB,MAAM2G,QAAnC,a,GAhFwBjI,IAAMC,W,obCxB9C,IAAMuE,GAAc3D,YAAO4D,IAAP5D,CAAH,MACC,qBAAG9C,MAAkBM,YAGjB,qBAAGN,MAAkBO,aAGrCoG,GAAkB7D,YAAO8D,IAAP9D,CAAH,MACG,qBAAG9C,MAAkBM,YAChC,qBAAGN,MAAkBE,QAE5B6G,GAAajE,YAAOoC,IAAPpC,CAAH,MAkGDsI,G,kDA3FX,WAAY7H,GAAQ,IAAD,8BACf,cAAMA,IAUV8H,UAAY,kBAAMC,aAAW,CACzBC,KAAM,CACJhF,OAAQ,IACRiF,SAAU,EACVC,SAAU,QAfG,EAmBnBC,eAAiB,WACb3K,MAAM,oBAAqB,CACvBC,QAAS,CACL,OAAU,mBACV,eAAgB,sBAGvBC,MAAK,SAAAC,GAAG,OAAKA,EAAIC,GAAKD,EAAME,QAAQC,OAAOH,MAC3CD,MAAK,SAAAC,GAAG,OAAIA,EAAII,UAChBL,MAAK,SAAAM,GACF,EAAKkC,SAAS,CAACC,QAASnC,EAAUG,KAAKC,UACxCC,OAAM,SAAAC,GACLC,QAAQ+B,IAAIhC,GACZ,EAAK4B,SAAS,CAACC,QAAS,YA9B5B,EAAKiI,WAAaC,MAAMC,KAAK,CAACjH,OAAQ,MAAM,SAACkH,EAAGC,GAAJ,OAAUA,EAAE,EAAE,MAC1D,EAAKxH,MAAQ,CACTb,QAAS,GACTsI,UAAW,GACXC,WAAY,IAEhB,EAAKC,QAAU,EAAKb,YARL,E,gEAqCXtC,OAAOC,KAAKhH,KAAKuB,MAAMmE,YAAY9C,OAAS,GAC5C5C,KAAKyB,SAAS,CACVwI,WAAYjK,KAAKuB,MAAMmE,WAAWyE,iBAAiBC,UACnDJ,UAAWhK,KAAKuB,MAAMmE,WAAWyE,iBAAiBE,OAG1DrK,KAAK0J,mB,yCAGUlE,EAAYC,GACvBsB,OAAOC,KAAKhH,KAAKuB,MAAMmE,YAAY9C,OAAS,GACxC4C,EAAWE,WAAWyE,kBAClBnK,KAAKuC,MAAMyH,YAAchK,KAAKuB,MAAMmE,WAAWyE,iBAAiBE,MAChErK,KAAKyB,SAAS,CACVwI,WAAYjK,KAAKuB,MAAMmE,WAAWyE,iBAAiBC,UACnDJ,UAAWhK,KAAKuB,MAAMmE,WAAWyE,iBAAiBE,S,+BAQlE,OACI,cAAC,GAAD,CAAYlH,MAAI,EAACC,GAAI,GAAI2C,GAAI,EAA7B,SACI,cAACG,EAAA,EAAD,CAAgBjC,UAAU,OAA1B,SACI,cAAC5C,EAAA,EAAD,CAAOgC,UAAW,EAAlB,SACA,eAAC,GAAD,CAAaI,UAAU,WAAvB,UACI,cAAC0C,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,UACI,cAAC,GAAD,CAAiB3C,UAAU,YAA3B,SACI,eAAC4C,EAAA,EAAD,CAAY3C,QAAQ,QAApB,UAA4B,yCAA5B,IAA4C,cAAC,KAAD,aAIxD,cAAC8C,EAAA,EAAD,CAAW/C,UAAU,YAArB,SACI,cAAC6G,GAAA,EAAD,CACIC,gBAAiBvK,KAAK2J,WAD1B,SAEQ,cAAC,GAAD,CAEAf,SAAU5I,KAAKuC,MAAMb,QACrBsG,MAAOhI,KAAKuC,MAAM0H,WAClB9B,WAAY,cAAC9B,EAAA,EAAD,CAAY3C,QAAQ,QAAQ8E,cAAc,EAAMC,QAAM,EAAtD,0BACZP,QAAS,GAJL,+C,GA7EdjI,IAAMC,W,0eCpBhC,IAAMW,GAAkBC,YAAOC,IAAPD,CAAH,MAEJ,qBAAG9C,MAAkBE,QAGrB,qBAAGF,MAAkBE,QAGhC2G,GAAc/D,YAAOgE,IAAPhE,CAAH,MACO,qBAAG9C,MAAkBC,QAChC,qBAAGD,MAAkBE,QAE5B8C,GAAqBF,YAAOG,IAAPH,CAAH,MACA,qBAAG9C,MAAkBO,aAChC,qBAAGP,MAAkBE,QAEN,qBAAGF,MAAkBK,oBAChC,qBAAGL,MAAkBW,SAIjB6L,G,kDACjB,WAAYjJ,GAAQ,IAAD,8BACf,cAAMA,IAYVkJ,kBAAoB,SAACC,GACjB3L,MAAM,kCAAmC,CACrCyD,OAAQ,OACRvE,KAAMwE,KAAKC,UAAU,CAAC,KAAO,GAAP,OAAWgI,OAEpCzL,MAAK,SAAAC,GAAG,OAAKA,EAAIC,GAAKD,EAAME,QAAQC,OAAOH,MAC3CD,MAAK,SAAAC,GAAG,OAAIA,EAAII,UAChBL,MAAK,SAAAM,GACFO,QAAQ+B,IAAItC,EAAUoD,QACtB,EAAKlB,SAAS,CAACkJ,SAAUpL,EAAUG,KAAKiL,cAE3C/K,OAAM,SAAAC,GAAC,OAAIC,QAAQ+B,IAAIhC,OAxBT,EA2BnB+K,kBAAoB,SAACF,EAAaC,GAC9B5L,MAAM,kCAAmC,CACrCyD,OAAQ,OACRvE,KAAMwE,KAAKC,UAAU,CAAC,KAAQgI,EAAa,KAAQ,EAAKnI,MAAMoI,aAEjE1L,MAAK,SAAAC,GAAG,OAAKA,EAAIC,GAAKD,EAAME,QAAQC,OAAOH,MAC3CD,MAAK,SAAAC,GAAG,OAAIA,EAAII,UAChBL,MAAK,SAAAM,GACFO,QAAQ+B,IAAItC,EAAUoD,QACG,MAArBpD,EAAUoD,OACV,EAAKlB,SAAS,CAAC2D,WAAW,EAAMC,SAAU,6CAA8CC,cAAe,YAGvG,EAAK7D,SAAS,CAAC2D,WAAW,EAAMC,SAAU,wDAAyDC,cAAe,aAGzH1F,OAAM,SAAAC,GACHC,QAAQ+B,IAAIhC,GACZ,EAAK4B,SAAS,CAAC2D,WAAW,EAAMC,SAAU,qCAAsCC,cAAe,cA7CpF,EAiDnBC,WAAa,WACT,EAAK9D,SAAS,CAAC2D,WAAW,EAAOC,SAAU,GAAIC,cAAe,MAlD/C,EAqDnBuF,eAAiB,SAAChL,EAAGiL,GACjB,IAAMC,EAAW,EAAKxI,MAAMoI,SAC5BI,EAAS,mBAAmBD,GAAOjL,EAAEoC,OAAOC,MAC5C,EAAKT,SAAS,CAACkJ,SAAUI,KAxDV,EA2DnBC,mBAAqB,SAAC7B,GAClBA,EAAM9G,iBACN,EAAKkD,aACL,EAAKqF,kBAAkB,EAAKrJ,MAAMmJ,aAClC,EAAKD,kBAAkB,EAAKlJ,MAAMmJ,cA7DlC,EAAKnI,MAAQ,CACToI,SAAU,GACVtF,SAAU,GACVC,cAAe,IALJ,E,gEAUftF,KAAKyK,kBAAkBzK,KAAKuB,MAAMmJ,aAAa,K,+BAwDzC,IAAD,OACD9E,EAAQ5F,KAAKuC,MAAM6C,UAAY,cAAC,GAAD,CAAaS,QAAS7F,KAAKuF,WAAYO,SAAU9F,KAAKuC,MAAM+C,cAA5D,SAA4EtF,KAAKuC,MAAM8C,WAA0B,GACpJ,OACI,uBAA6D/B,SAAUtD,KAAKgL,mBAAoBzH,aAAa,MAA7G,UACI,cAACyC,EAAA,EAAD,CAAUC,GAAIjG,KAAKuC,MAAM6C,UAAzB,SACKQ,IAEL,cAACS,EAAA,EAAD,8CACA,uBAEIU,OAAOC,KAAKhH,KAAKuC,MAAMoI,UAAU/H,OAAS,GAAK,oBAAqB5C,KAAKuC,MAAMoI,SAC/E5D,OAAOC,KAAKhH,KAAKuC,MAAMoI,SAAS,oBAAoBlE,KAAI,SAACwE,EAAWC,GAAZ,OACpD,8BACI,cAAC,GAAD,CACI5E,GAAE,oBAAe2E,EAAf,YAA4BC,GAC9BvK,SAAU,SAACd,GAAD,OAAO,EAAKgL,eAAehL,EAAGoL,IACxCpH,YAAY,MACZsH,aAAc,EAAK5I,MAAMoI,SAAS,mBAAmBM,GACrDtH,KAAK,OACL/C,MAAO,cAACyF,EAAA,EAAD,UAAa4E,IACpB1E,KAAK,QACL3C,WAAW,EACXJ,gBAAiB,CACb4H,QAAQ,UAIpB,GAER,uBACA,cAAC,GAAD,CAAoBzH,KAAK,SAAzB,SAAkC,cAAC0C,EAAA,EAAD,CAAY3C,QAAQ,YAApB,iCA3BtC,+BAAmC1D,KAAKuB,MAAMmJ,kB,GAtEVzK,IAAMC,W,wQCpBtD,IAAMkB,GAAcN,YAAOO,IAAPP,CAAH,MACK,qBAAG9C,MAAkBM,YAChC,qBAAGN,MAAkBE,QAG1BmN,GAAmBvK,YAAOO,IAAPP,CAAH,MACA,qBAAG9C,MAAkBC,QAChC,qBAAGD,MAAkBE,QAIXoN,G,kDACjB,WAAY/J,GAAQ,IAAD,8BACf,cAAMA,IAMVkJ,kBAAoB,SAACC,GACjB3L,MAAM,kCAAmC,CACrCyD,OAAQ,OACRvE,KAAMwE,KAAKC,UAAU,CAAC,KAAO,GAAP,OAAWgI,OAEpCzL,MAAK,SAAAC,GAAG,OAAKA,EAAIC,GAAKD,EAAME,QAAQC,OAAOH,MAC3CD,MAAK,SAAAC,GAAG,OAAIA,EAAII,UAChBL,MAAK,SAAAM,GACFO,QAAQ+B,IAAItC,EAAUoD,QACtB,EAAKlB,SAAS,CAACkJ,SAAUpL,EAAUG,KAAKiL,cAE3C/K,OAAM,SAAAC,GAAC,OAAIC,QAAQ+B,IAAIhC,OAhBxB,EAAK0C,MAAQ,CACToI,SAAU,IAHC,E,gEAsBf3K,KAAKyK,kBAAkBzK,KAAKuB,MAAMmJ,e,+BAIlC,OACI,eAAC,GAAD,WACI,cAACW,GAAD,CAAkBhI,UAAW,EAA7B,SACI,cAAC,GAAD,CAAoBqH,YAAa1K,KAAKuB,MAAMmJ,gBAEhD,uBACA,eAACW,GAAD,CAAkBhI,UAAW,EAA7B,UACI,cAACgD,EAAA,EAAD,oCAA8C,uBAC9C,cAAC,KAAD,CAAyDkF,IAAKvL,KAAKuC,MAAMoI,SAAUa,UAAU,SAASC,UAAW,EAAGC,kBAAkB,EAClI1N,MAAOgC,KAAKuB,MAAMvD,OADtB,sBAA+BgC,KAAKuB,MAAMmJ,mBAPlD,0BAAqC1K,KAAKuB,MAAMmJ,kB,GA5BhBzK,IAAMC,W,qqBCLlD,IAAMsE,GAAgB1D,YAAOK,IAAPL,CAAH,MAEN,qBAAG9C,MAAkBE,QAEN,qBAAGF,MAAkBK,oBAChC,qBAAGL,MAAkBW,SAGhCyC,GAAcN,YAAOO,IAAPP,CAAH,MACK,qBAAG9C,MAAkBO,aAChC,qBAAGP,MAAkBE,QAG1B2G,GAAc/D,YAAOgE,IAAPhE,CAAH,MACO,qBAAG9C,MAAkBC,QAChC,qBAAGD,MAAkBE,QAG5ByN,GAAiB7K,YAAOwJ,KAAPxJ,CAAH,MACI,qBAAG9C,MAAkBO,aAChC,qBAAGP,MAAkBE,QAE5BgJ,GAAiBpG,YAAOqG,KAAPrG,CAAH,MACP,qBAAG9C,MAAkBE,QA8EnB0N,G,kDAzEX,WAAYrK,GAAQ,IAAD,8BACf,cAAMA,IASVsK,eAAiB,SAAC3G,GACdnG,MAAM,eAAgB,CAClBC,QAAS,CACL,OAAU,mBACV,eAAgB,sBAGvBC,MAAK,SAAAC,GAAG,OAAKA,EAAIC,GAAKD,EAAME,QAAQC,OAAOH,MAC3CD,MAAK,SAAAC,GAAG,OAAIA,EAAII,UAChBL,MAAK,SAAAM,GACF,EAAKkC,SAAS,CAACuG,MAAOzI,EAAUG,KAAKoM,UACjC5G,GACA,EAAKzD,SAAS,CAAC2D,WAAW,EAAMC,SAAU,2CAA4CC,cAAe,eAE1G1F,OAAM,SAAAC,GACLC,QAAQ+B,IAAIhC,GACZ,EAAK4B,SAAS,CAAC2D,WAAW,EAAMC,SAAU,qCAAsCC,cAAe,cA1BpF,EA8BnBC,WAAa,WACT,EAAK9D,SAAS,CAAC2D,WAAW,EAAOC,SAAU,GAAIC,cAAe,MA7B9D,EAAK/C,MAAQ,CACT6C,WAAW,EACXC,SAAU,GACVC,cAAe,GACf0C,MAAO,IANI,E,gEAmCfhI,KAAK6L,gBAAe,K,+BAGd,IAAD,OACDjG,EAAQ5F,KAAKuC,MAAM6C,UAAY,cAAC,GAAD,CAAaS,QAAS7F,KAAKuF,WAAYO,SAAU9F,KAAKuC,MAAM+C,cAA5D,SAA4EtF,KAAKuC,MAAM8C,WAA0B,GACpJ,OACI,eAACnC,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,UACI,cAAC4C,EAAA,EAAD,CAAUC,GAAIjG,KAAKuC,MAAM6C,UAAzB,SACKQ,IAEL,gCACI,gDACA,cAAC,GAAD,CACAU,GAAG,gBACHnC,QAAS,kBAAM,EAAK0H,gBAAe,IACnCtF,KAAK,QAHL,SAKA,cAAC,IAAD,SAGJ,cAAC,GAAD,UACI,cAACoF,GAAD,UAEQ3L,KAAKuC,MAAMyF,MAAMvB,KAAI,SAACtD,EAAMuD,GAAP,OAEjB,cAAC,GAAD,CAAiD9F,MAAO,cAACyF,EAAA,EAAD,UAAalD,IAAoB2E,WAAY,cAAC,KAAD,IAAqBD,aAAc,cAAC,KAAD,IAA0BI,OAAQvB,EAA1K,SACI,cAAC,GAAD,CAA4CgE,YAAavH,EAAMnF,MAAO,EAAKuD,MAAMvD,OAAjF,sBAAoCmF,KADxC,2BAAyCA,kB,GA7D/ClD,IAAMC,W,8cC1BhC,IAAM6L,GAAmBjL,YAAOkL,KAAPlL,CAAH,MACT,qBAAG9C,MAAkBK,oBAE5B4N,GAAiBnL,YAAOoL,KAAPpL,CAAH,MACP,qBAAG9C,MAAkBE,QAE5BiO,GAAkBrL,YAAOsL,KAAPtL,CAAH,MACR,qBAAG9C,MAAkBE,QAE5BmO,GAAmBvL,YAAOuF,IAAPvF,CAAH,MACT,qBAAG9C,MAAkBE,QAGboO,G,4MACjBC,YAAc,WACVxN,MAAM,yBAA0B,CAC5ByD,OAAQ,OACRvE,KAAMwE,KAAKC,UAAU,CAAC,KAAO,GAAP,OAAW,EAAKnB,MAAMiL,eAE/CvN,MAAK,SAAAC,GAAG,OAAKA,EAAIC,GAAKD,EAAME,QAAQC,OAAOH,MAC3CD,MAAK,SAAAC,GAAG,OAAIA,EAAII,UAChBL,MAAK,SAAAM,GACFO,QAAQ+B,IAAItC,EAAUoD,WAEzB/C,OAAM,SAAAC,GAAC,OAAIC,QAAQ+B,IAAIhC,O,EAG5B4M,YAAc,WACV1N,MAAM,oBAAqB,CACvByD,OAAQ,OACRvE,KAAMwE,KAAKC,UAAU,CAAC,KAAO,GAAP,OAAW,EAAKnB,MAAMiL,eAE/CvN,MAAK,SAAAC,GAAG,OAAKA,EAAIC,GAAKD,EAAME,QAAQC,OAAOH,MAC3CD,MAAK,SAAAC,GAAG,OAAIA,EAAII,UAChBL,MAAK,SAAAM,GACFO,QAAQ+B,IAAItC,EAAUoD,WAEzB/C,OAAM,SAAAC,GAAC,OAAIC,QAAQ+B,IAAIhC,O,uDAIxB,OACI,eAAC6M,GAAA,EAAD,WAEQ1M,KAAKuB,MAAMoL,QACX,eAACC,GAAA,EAAD,WACI,cAACT,GAAD,IACCnM,KAAKuB,MAAMiL,UAAY,cAACH,GAAD,CAAkB5D,QAAQ,EAA1B,SAAgC,4BAAIzI,KAAKuB,MAAMiL,cAAoC,MAC7F,GAEtB,cAACK,GAAA,EAAD,CACIC,QAAS9M,KAAKuB,MAAMwL,YAAc,cAACV,GAAD,CAAkB3I,QAAQ,QAAQ+E,QAAQ,EAA1C,SAAiDzI,KAAKuB,MAAMwL,cAAkC,MAChIC,UAAWhN,KAAKuB,MAAM0L,cAAgB,cAACZ,GAAD,CAAkB3I,QAAQ,UAAU+E,QAAQ,EAA5C,SAAkD,mBAAGyE,KAAI,UAAKlN,KAAKuB,MAAM0L,eAAiBhL,OAAO,SAASkL,IAAI,sBAA5D,SAAmFnN,KAAKuB,MAAM0L,kBAAwC,OAG9NjN,KAAKuB,MAAM6L,WACX,eAACC,GAAA,EAAD,WACI,cAACxE,GAAA,EAAD,CAASpJ,MAAM,eAAeqJ,aAAW,uBAAzC,SACI,cAAC3H,EAAA,EAAD,CAAYmM,KAAK,MAAMxE,aAAW,eAAe3E,QAASnE,KAAKuM,YAA/D,SACI,cAACR,GAAD,QAGR,cAAClD,GAAA,EAAD,CAASpJ,MAAM,gBAAgBqJ,aAAW,qBAA1C,SACI,cAAC3H,EAAA,EAAD,CAAYmM,KAAK,MAAMxE,aAAW,aAAa3E,QAASnE,KAAKyM,YAA7D,SACI,cAACR,GAAD,WAGiB,U,GAtDLhM,IAAMC,W,qlCCNlD,IAAMqN,GAAazM,YAAO0M,KAAP1M,CAAH,MACQ,qBAAG9C,MAAkBM,YAChC,qBAAGN,MAAkBE,QAI5BgD,GAAmBJ,YAAOK,IAAPL,CAAH,MACT,qBAAG9C,MAAkBE,QAE5BuP,GAAa3M,IAAO4M,IAAV,MAIVC,GAAc7M,IAAO4M,IAAV,MAMXE,GAAkB9M,YAAO+M,KAAP/M,CAAH,MAGfgN,GAAoBhN,YAAOiN,KAAPjN,CAAH,MAGjBkN,GAAiBlN,YAAOmN,IAAPnN,CAAH,MACP,qBAAG9C,MAAkBK,oBAE5B6P,GAAmBpN,YAAOmN,IAAPnN,CAAH,MACT,qBAAG9C,MAAkBE,QAGbiQ,G,kDACjB,WAAY5M,GAAQ,IAAD,8BACf,cAAMA,IAkCV6M,UAAY,WACRrP,MAAM,kBAAmB,CACrByD,OAAQ,SAEXvD,MAAK,SAAAC,GAAG,OAAKA,EAAIC,GAAKD,EAAME,QAAQC,OAAOH,MAC3CD,MAAK,SAAAC,GAAG,OAAIA,EAAII,UAChBL,MAAK,SAAAM,GACFO,QAAQ+B,IAAItC,EAAUoD,WAEzB/C,OAAM,SAAAC,GAAC,OAAIC,QAAQ+B,IAAIhC,OA5CT,EA+CnBwO,UAAY,WACRtP,MAAM,uBAAwB,CAC1ByD,OAAQ,SAEXvD,MAAK,SAAAC,GAAG,OAAKA,EAAIC,GAAKD,EAAME,QAAQC,OAAOH,MAC3CD,MAAK,SAAAC,GAAG,OAAIA,EAAII,UAChBL,MAAK,SAAAM,GACFO,QAAQ+B,IAAItC,EAAUoD,WAEzB/C,OAAM,SAAAC,GAAC,OAAIC,QAAQ+B,IAAIhC,OAxDT,EA2DnByO,YAAc,WACgB,WAAtB,EAAK/L,MAAMI,OACX5D,MAAM,oBAAqB,CACvByD,OAAQ,SAEXvD,MAAK,SAAAC,GAAG,OAAKA,EAAIC,GAAKD,EAAME,QAAQC,OAAOH,MAC3CD,MAAK,SAAAC,GAAG,OAAIA,EAAII,UAChBL,MAAK,SAAAM,GACFO,QAAQ+B,IAAItC,EAAUoD,WAEzB/C,OAAM,SAAAC,GAAC,OAAIC,QAAQ+B,IAAIhC,MAEG,YAAtB,EAAK0C,MAAMI,QAChB5D,MAAM,mBAAoB,CACtByD,OAAQ,SAEXvD,MAAK,SAAAC,GAAG,OAAKA,EAAIC,GAAKD,EAAME,QAAQC,OAAOH,MAC3CD,MAAK,SAAAC,GAAG,OAAIA,EAAII,UAChBL,MAAK,SAAAM,GACFO,QAAQ+B,IAAItC,EAAUoD,WAEzB/C,OAAM,SAAAC,GAAC,OAAIC,QAAQ+B,IAAIhC,OAhFb,EAoFnB0O,YAAc,WACVxP,MAAM,oBAAqB,CACvByD,OAAQ,SAEXvD,MAAK,SAAAC,GAAG,OAAKA,EAAIC,GAAKD,EAAME,QAAQC,OAAOH,MAC3CD,MAAK,SAAAC,GAAG,OAAIA,EAAII,UAChBL,MAAK,SAAAM,GACFO,QAAQ+B,IAAItC,EAAUoD,WAEzB/C,OAAM,SAAAC,GAAC,OAAIC,QAAQ+B,IAAIhC,OA7FT,EAgGnB2O,WAAa,WACTzP,MAAM,kBAAmB,CACrByD,OAAQ,SAEXvD,MAAK,SAAAC,GAAG,OAAKA,EAAIC,GAAKD,EAAME,QAAQC,OAAOH,MAC3CD,MAAK,SAAAC,GAAG,OAAIA,EAAII,UAChBL,MAAK,SAAAM,GACFO,QAAQ+B,IAAItC,EAAUoD,WAEzB/C,OAAM,SAAAC,GAAC,OAAIC,QAAQ+B,IAAIhC,OAzGT,EA4GnB4O,aAAe,WACX1P,MAAM,qBAAsB,CACxByD,OAAQ,SAEXvD,MAAK,SAAAC,GAAG,OAAKA,EAAIC,GAAKD,EAAME,QAAQC,OAAOH,MAC3CD,MAAK,SAAAC,GAAG,OAAIA,EAAII,UAChBL,MAAK,SAAAM,GACFO,QAAQ+B,IAAItC,EAAUoD,WAEzB/C,OAAM,SAAAC,GAAC,OAAIC,QAAQ+B,IAAIhC,OArHT,EAwHnB6O,eAAiB,WACb3P,MAAM,4BAA6B,CAC/ByD,OAAQ,SAEXvD,MAAK,SAAAC,GAAG,OAAKA,EAAIC,GAAKD,EAAME,QAAQC,OAAOH,MAC3CD,MAAK,SAAAC,GAAG,OAAIA,EAAII,UAChBL,MAAK,SAAAM,GACFO,QAAQ+B,IAAItC,EAAUoD,WAEzB/C,OAAM,SAAAC,GAAC,OAAIC,QAAQ+B,IAAIhC,OAjIT,EAoInB8O,eAAiB,WACb5P,MAAM,4BAA6B,CAC/ByD,OAAQ,SAEXvD,MAAK,SAAAC,GAAG,OAAKA,EAAIC,GAAKD,EAAME,QAAQC,OAAOH,MAC3CD,MAAK,SAAAC,GAAG,OAAIA,EAAII,UAChBL,MAAK,SAAAM,GACFO,QAAQ+B,IAAItC,EAAUoD,WAEzB/C,OAAM,SAAAC,GAAC,OAAIC,QAAQ+B,IAAIhC,OA3IxB,EAAK0C,MAAQ,CACTqM,YAAa,GACbC,QAAS,GACTC,WAAY,GACZnM,OAAQ,GACRoM,OAAQ,EACRC,SAAS,EACTC,SAAU,EACVC,SAAU,EACVC,gBAAkB,GAClBC,gBAAkB,IAZP,E,gEAiBXrI,OAAOC,KAAKhH,KAAKuB,MAAMmE,YAAY9C,OAAS,GACxC5C,KAAKuB,MAAMmE,WAAW2J,YACtBrP,KAAKyB,SAAS,CACVmN,YAAa5O,KAAKuB,MAAMmE,WAAW2J,WAAWC,MAC9CP,OAAQ/O,KAAKuB,MAAMmE,WAAW2J,WAAWN,OACzCpM,OAAQ3C,KAAKuB,MAAMmE,WAAW2J,WAAW1M,OACzCqM,QAAShP,KAAKuB,MAAMmE,WAAW2J,WAAWE,KAC1CV,QAAS7O,KAAKuB,MAAMmE,WAAW2J,WAAWG,kBAC1CV,WAAY9O,KAAKuB,MAAMmE,WAAW2J,WAAWhF,KAC7C4E,SAAUjP,KAAKuB,MAAMmE,WAAW2J,WAAWI,cAC3CP,SAAUlP,KAAKuB,MAAMmE,WAAW2J,WAAWK,cAC3CP,gBAAiBnP,KAAKuB,MAAMmE,WAAW2J,WAAWF,gBAClDC,gBAAiBpP,KAAKuB,MAAMmE,WAAW2J,WAAWD,oB,yCAmH/C5J,EAAYC,GACvBsB,OAAOC,KAAKhH,KAAKuB,MAAMmE,YAAY9C,OAAS,GACxC4C,EAAWE,WAAW2J,WAAWC,OAC7BtP,KAAKuC,MAAMuM,aAAe9O,KAAKuB,MAAMmE,WAAW2J,WAAWhF,MAC3DrK,KAAKyB,SAAS,CACVmN,YAAa5O,KAAKuB,MAAMmE,WAAW2J,WAAWC,MAC9C3M,OAAQ3C,KAAKuB,MAAMmE,WAAW2J,WAAW1M,OACzCqM,QAAShP,KAAKuB,MAAMmE,WAAW2J,WAAWE,KAC1CR,OAAQ/O,KAAKuB,MAAMmE,WAAW2J,WAAWN,OACzCF,QAAS7O,KAAKuB,MAAMmE,WAAW2J,WAAWG,kBAC1CV,WAAY9O,KAAKuB,MAAMmE,WAAW2J,WAAWhF,KAC7C4E,SAAUjP,KAAKuB,MAAMmE,WAAW2J,WAAWI,cAC3CP,SAAUlP,KAAKuB,MAAMmE,WAAW2J,WAAWK,cAC3CP,gBAAiBnP,KAAKuB,MAAMmE,WAAW2J,WAAWF,gBAClDC,gBAAiBpP,KAAKuB,MAAMmE,WAAW2J,WAAWD,oB,+BAQlE,OACA,eAAC7B,GAAD,WACI,eAACE,GAAD,WACQ,eAACK,GAAD,WACI,cAACzH,EAAA,EAAD,CAAYpC,UAAU,KAAKP,QAAQ,KAAK+E,QAAQ,EAAhD,SACKzI,KAAKuC,MAAMqM,YAAYjP,MAAQ,uBAEpC,cAAC0G,EAAA,EAAD,CAAYpC,UAAU,KAAKP,QAAQ,YAAY+E,QAAQ,EAAvD,SAC2B,WAAtBzI,KAAKuC,MAAMI,OAAsB,WAAa,QAGvD,eAACgL,GAAD,WACI,cAAC9E,GAAA,EAAD,CAASpJ,MAAM,uBAAuBqJ,aAAW,eAAjD,SACI,cAAC,GAAD,CAAkBA,aAAW,OAAO3E,QAASnE,KAAKoO,UAAlD,SACI,cAAC,KAAD,QAGR,cAACvF,GAAA,EAAD,CAASpJ,MAAK,UAA2B,WAAtBO,KAAKuC,MAAMI,OAAsB,OAAS,SAAWmG,aAAW,eAAnF,SACI,cAAC,GAAD,CAAkBA,aAAW,aAAa3E,QAASnE,KAAKsO,YAAxD,SAE8B,WAAtBtO,KAAKuC,MAAMI,OAAsB,cAAC,KAAD,IAAmB,cAAC,KAAD,QAIhE,cAACkG,GAAA,EAAD,CAASpJ,MAAM,aAAaqJ,aAAW,eAAvC,SACI,cAAC,GAAD,CAAkBA,aAAW,OAAO3E,QAASnE,KAAKqO,UAAlD,SACI,cAAC,KAAD,QAGR,cAACxF,GAAA,EAAD,CAASpJ,MAAK,UAAKO,KAAKuC,MAAMyM,QAAU,UAAY,SAAtC,YAA0DW,cAAY,eAApF,SACI,cAAC,GAAD,CAAkB7G,aAAW,OAAO3E,QAASnE,KAAKwO,WAAlD,SAEQxO,KAAKuC,MAAMyM,QACX,cAAChB,GAAD,IAAoB,cAACE,GAAD,QAIhC,cAACrF,GAAA,EAAD,CAASpJ,MAAM,eAAeqJ,aAAW,iBAAzC,SACI,cAAC,GAAD,CAAkBA,aAAW,SAAS3E,QAASnE,KAAKuO,YAApD,SACI,cAAC,KAAD,QAGR,cAAC1F,GAAA,EAAD,CAASpJ,MAAM,gBAAgBqJ,aAAW,kBAA1C,SACI,cAAC,GAAD,CAAkBA,aAAW,UAAU3E,QAASnE,KAAKyO,aAArD,SACI,cAAC,KAAD,WAIZ,eAAChB,GAAD,WACI,eAACpH,EAAA,EAAD,CAAY3C,QAAQ,YAApB,qBAAyC1D,KAAKuC,MAAMwM,UACpD,eAACpB,GAAD,WACA,cAAC9E,GAAA,EAAD,CAASpJ,MAAM,kBAAkBqJ,aAAW,sBAA5C,SACI,cAAC,GAAD,CAAkBA,aAAW,cAAc3E,QAASnE,KAAK2O,eAAzD,SACI,cAAC,KAAD,QAGR,cAAC9F,GAAA,EAAD,CAASpJ,MAAM,kBAAkBqJ,aAAW,oBAA5C,SACI,cAAC,GAAD,CAAkBA,aAAW,YAAY3E,QAASnE,KAAK0O,eAAvD,SACI,cAAC,KAAD,iBAMpB,cAACd,GAAD,CACIvJ,MAAS,CAACE,OAAQ,EAAGqL,WAAY,OACjCC,MAAO7P,KAAKuC,MAAMsM,SAAW,QAEjC,eAACpB,GAAD,CAAYqC,QAAQ,OAAOvH,WAAW,SAAtC,UACI,cAACwH,GAAA,EAAD,CAAKC,SAAU,GAAf,SACI,cAAC3J,EAAA,EAAD,CAAY3C,QAAQ,QAApB,SAA6B1D,KAAKuC,MAAM0M,UAAY,EAAvB,UAA8BjP,KAAKuC,MAAM4M,gBAAzC,cAA8DnP,KAAKuC,MAAM6M,iBAAoB,OAE9H,cAACvG,GAAA,EAAD,CAASpJ,MAAOO,KAAKuC,MAAM0M,UAAY,EAAvB,UAA8BjP,KAAKuC,MAAM4M,gBAAzC,cAA8DnP,KAAKuC,MAAM6M,iBAAoB,eAAgBtG,aAAW,uBAAxI,SACI,cAACiH,GAAA,EAAD,CAAKzL,MAAM,OAAO2L,GAAI,EAAtB,SACI,cAACC,GAAA,EAAD,CAAgBxM,QAAQ,cAAcgF,MAAM,YAAYxG,MAAOlC,KAAKuC,MAAM0M,UAAY,EAAvB,UAA8BjP,KAAKuC,MAAM2M,SAASlP,KAAKuC,MAAM0M,SAAW,KAAQ,kB,GAjPxHhP,IAAMC,W,gNC/CrD,IAAMiQ,GAAarP,YAAOsP,KAAPtP,CAAH,MACQ,qBAAG9C,MAAkBM,YAChC,qBAAGN,MAAkBE,QAE5BmO,GAAmBvL,YAAOuF,IAAPvF,CAAH,MACT,qBAAG9C,MAAkBE,QAGbmS,G,kDACjB,WAAY9O,GAAQ,IAAD,8BACf,cAAMA,IACDgB,MAAQ,CACTyH,UAAW,GACXsG,WAAY,IAJD,E,gEASXvJ,OAAOC,KAAKhH,KAAKuB,MAAMmE,YAAY9C,OAAS,GACxC5C,KAAKuB,MAAMmE,WAAW2J,WAAWkB,OACjCvQ,KAAKyB,SAAS,CACV6O,WAAYtQ,KAAKuB,MAAMmE,WAAW2J,WAAWkB,MAC7CvG,UAAWhK,KAAKuB,MAAMmE,WAAW2J,WAAWhF,S,yCAMzC7E,EAAYC,GACvBsB,OAAOC,KAAKhH,KAAKuB,MAAMmE,YAAY9C,OAAS,GACxC4C,EAAWE,WAAW2J,YAClBrP,KAAKuC,MAAMyH,YAAchK,KAAKuB,MAAMmE,WAAW2J,WAAWhF,MAC1DrK,KAAKyB,SAAS,CACV6O,WAAYtQ,KAAKuB,MAAMmE,WAAW2J,WAAWkB,MAC7CvG,UAAWhK,KAAKuB,MAAMmE,WAAW2J,WAAWhF,S,+BAOtD,IAAD,OACL,OACI,cAACnH,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,SACI,eAAC+M,GAAD,CAAYlM,UAAW5C,IAAvB,UACI,cAACqL,GAAA,EAAD,CAAUrI,MAAO,CAACyL,QAAS,OAAQU,eAAgB,UAAnD,SACI,cAAC,GAAD,CAAmB9K,WAAY1F,KAAKuB,MAAMmE,eAE9C,eAACgH,GAAA,EAAD,WACI,cAACE,GAAA,EAAD,UACI,cAAC,GAAD,CAAkBnE,QAAQ,EAA1B,SAAgC,sCAEpC,cAACoE,GAAA,EAAD,CACIC,QAAS,cAAC,GAAD,CAAkBpJ,QAAQ,QAA1B,SAAkC,6CAC3CsJ,UAAW,cAAC,GAAD,CAAkBtJ,QAAQ,UAA1B,SAAoC,8CAEnD,cAAC2J,GAAA,EAAD,UACI,cAAC,GAAD,UAAkB,+CAG1B,cAACoD,GAAA,EAAD,IAEIzQ,KAAKuC,MAAM+N,WAAW7J,KAAI,SAAC6I,EAAOoB,GAAR,OACtB,eAAC,WAAD,WACI,cAAC,GAAD,CAAgBlE,UAAWkE,EAAY,GAAI3D,YAAauC,EAAM3P,KAAMsN,cAAeqC,EAAMqB,QAASvD,YAAY,EAAMT,SAAS,IAC5H,EAAKpL,MAAMqP,YAAc,cAACH,GAAA,EAAD,IAAc,kB,GAzD5BxQ,IAAMC,W,yUCLlD,IAAMqN,GAAazM,YAAO0M,KAAP1M,CAAH,MACQ,qBAAG9C,MAAkBM,YAChC,qBAAGN,MAAkBE,QAO5B2S,GAAmB/P,YAAOgQ,KAAPhQ,CAAH,MAKDiQ,G,4MAEjBC,SAAW,WACPjS,MAAM,wBAAyB,CAC3ByD,OAAQ,OACRvE,KAAMwE,KAAKC,UAAU,CAAC,KAAO,GAAP,OAAW,EAAKnB,MAAM0P,cAE/ChS,MAAK,SAAAC,GAAG,OAAKA,EAAIC,GAAKD,EAAME,QAAQC,OAAOH,MAC3CD,MAAK,SAAAC,GAAG,OAAIA,EAAII,UAChBL,MAAK,SAAAM,GACFO,QAAQ+B,IAAItC,EAAUoD,WAEzB/C,OAAM,SAAAC,GAAC,OAAIC,QAAQ+B,IAAIhC,O,uDAIxB,OACI,cAAC,GAAD,CAAYoE,UAAW5C,IAAvB,SACI,cAACwH,GAAA,EAAD,CAASpJ,MAAOO,KAAKuB,MAAM0P,SAA3B,SACI,cAACJ,GAAD,CAAkB1M,QAASnE,KAAKgR,SAAhC,SACI,cAAC3K,EAAA,EAAD,CAAY3C,QAAQ,QAAQ+E,QAAQ,EAApC,SAA2CzI,KAAKuB,MAAM0P,qB,GApBlChR,IAAMC,W,yZCblD,IAAMmM,GAAmBvL,YAAOuF,IAAPvF,CAAH,MACT,qBAAG9C,MAAkBE,QAE5BqP,GAAazM,YAAO0M,KAAP1M,CAAH,MACQ,qBAAG9C,MAAkBM,YAChC,qBAAGN,MAAkBE,QAM5B2S,GAAmB/P,YAAOgQ,KAAPhQ,CAAH,MAKDoQ,G,kDACjB,WAAY3P,GAAQ,IAAD,8BACf,cAAMA,IAMV4P,WAAa,WACTpS,MAAM,yBAA0B,CAC5ByD,OAAQ,QAEXvD,MAAK,SAAAC,GAAG,OAAKA,EAAIC,GAAKD,EAAME,QAAQC,OAAOH,MAC3CD,MAAK,SAAAC,GAAG,OAAIA,EAAII,UAChBL,MAAK,SAAAM,GACF,EAAKkC,SAAS,CAAC2P,MAAO7R,EAAUG,KAAK0R,WAExCxR,OAAM,SAAAC,GAAC,OAAIC,QAAQ+B,IAAIhC,OAhBT,EAmBnBwR,eAAiB,WACbtS,MAAM,0BAA2B,CAC7ByD,OAAQ,SAEXvD,MAAK,SAAAC,GAAG,OAAKA,EAAIC,GAAKD,EAAME,QAAQC,OAAOH,MAC3CD,MAAK,SAAAC,GAAG,OAAIA,EAAII,UAChBL,MAAK,SAAAM,GACFO,QAAQ+B,IAAItC,EAAUoD,WAEzB/C,OAAM,SAAAC,GAAC,OAAIC,QAAQ+B,IAAIhC,OA1BxB,EAAK0C,MAAQ,CACT6O,MAAO,IAHI,E,gEAgCfpR,KAAKmR,e,+BAIL,IAAIG,EAAkB,OACtB,OACI,8BAEQ,eAAC,WAAD,WACI,cAAC,GAAD,CAAYrN,UAAW5C,IAAvB,SACI,cAACwH,GAAA,EAAD,CAASpJ,MAAO,mBAAhB,SACI,cAAC,GAAD,CAAkB0E,QAASnE,KAAKqR,eAAhC,SACI,cAAChL,EAAA,EAAD,CAAY3C,QAAQ,QAAQ+E,QAAQ,EAApC,SAA2C,sBAKnDzI,KAAKuC,MAAM6O,MAAM3K,KAAI,SAACtD,EAAMuD,GAAP,OACrB,eAAC,WAAD,WAEQvD,EAAKN,OAAO,GAAG0O,gBAAkBD,EAAgBzO,OAAO,GAAG0O,cAAgB,gCACvE,uBAEI,cAAC,GAAD,CAAkB7N,QAAQ,KAA1B,SAAgC4N,EAAkBnO,EAAKN,OAAO,GAAG0O,gBAAkBpO,EAAKN,OAAO,GAAG2O,cAAgBrO,EAAKN,OAAO,GAAG2O,cAAgB,SAErJ,0BACI,GAGZ,cAAC,GAAD,CAAgBP,SAAU9N,GAA1B,UAAwCA,EAAxC,YAAgDuD,MAXpD,eAAuBvD,EAAvB,YAA+BuD,gB,GAnDfzG,IAAMC,W,sZCrBlD,IAAMuR,GAAa3Q,YAAO4Q,KAAP5Q,CAAH,MACQ,qBAAG9C,MAAkBC,QAChC,qBAAGD,MAAkBE,QAG5ByT,GAAgB7Q,YAAO8Q,KAAP9Q,CAAH,MACK,qBAAG9C,MAAkBC,QAChC,qBAAGD,MAAkBE,QAQ5B2T,GAAW,SAACtQ,GAAW,IACjBuQ,EAAqCvQ,EAArCuQ,SAAU5P,EAA2BX,EAA3BW,MAAOwE,EAAoBnF,EAApBmF,MAAUqL,EADX,aACqBxQ,EADrB,8BAExB,OACI,+CACAyQ,KAAK,WACLC,OAAQ/P,IAAUwE,EAClBJ,GAAE,0BAAqBI,GACvBwL,kBAAA,qBAA+BxL,IAC3BqL,GALJ,aAOC7P,IAAUwE,GACP,cAACqJ,GAAA,EAAD,CAAKoC,EAAG,EAAR,SACA,cAAC9L,EAAA,EAAD,CAAYpC,UAAW,OAAvB,SAAgC6N,UA+E7BM,G,kDAhEX,WAAY7Q,GAAQ,IAAD,8BACf,cAAMA,IAWVzC,WAAa,WACTC,MAAM,oBAAqB,CACvBC,QAAS,CACL,OAAU,mBACV,eAAgB,sBAGvBC,MAAK,SAAAC,GAAG,OAAKA,EAAIC,GAAKD,EAAME,QAAQC,OAAOH,MAC3CD,MAAK,SAAAC,GAAG,OAAIA,EAAII,UAChBL,MAAK,SAAAM,GAAS,OAAI,EAAKkC,SAAS,CAAChC,MAAM,GAAD,OAAKF,EAAUG,KAAKC,KAApB,mBACtCC,OAAM,SAAAC,GACHC,QAAQC,MAAMF,GACd,EAAK4B,SAAS,CAAChC,MAAO,8BAtB1B,EAAK8C,MAAQ,CACTL,MAAO,EACPzC,MAAO,yBAJI,E,gEASfO,KAAKlB,e,mCAmBIiD,EAAKsQ,GACdrS,KAAKyB,SAAS,CAACS,MAAOmQ,M,+BAGhB,IAAD,OACL,OACI,sBAAK5O,UAAU,cAAf,UACI,cAAC6O,GAAA,EAAD,CAAQC,SAAS,SAAjB,SACI,eAACZ,GAAD,WACI,cAACtL,EAAA,EAAD,CAAmC3C,QAAQ,KAA3C,SAAiD1D,KAAKuC,MAAM9C,OAA5C,oBAChB,cAACgS,GAAD,CAAmCvP,MAAOlC,KAAKuC,MAAML,MAAOvB,SAAUX,KAAKwS,aAAaxP,KAAKhD,MAA7F,SAEQA,KAAKuB,MAAMkR,KAAKhM,KAAI,SAACtD,EAAMuD,GAAP,OAChB,cAACgM,GAAA,EAAD,cAAuC9R,MAAK,UAAKuC,EAAKxD,OAjDzE,SAAC+G,GACd,MAAO,CACHJ,GAAG,cAAD,OAAgBI,GAClB,gBAAgB,mBAAhB,OAAoCA,IA8C0DiM,CAASjM,IAA3E,cAAiBvD,EAAKxD,KAAtB,YAA8B+G,QAH1B,oBAOf1G,KAAKuB,MAAMqR,cATG,iBADO,eAc1B5S,KAAKuB,MAAMkR,KAAKhM,KAAI,SAACtD,EAAMuD,GAAP,OAChB,cAAC,GAAD,CAAUxE,MAAO,EAAKK,MAAML,MAAOwE,MAAOA,EAA8BuL,OAAQ,EAAK1P,MAAML,QAAUwE,EAArG,SACI,cAACxD,EAAA,EAAD,CAAMoF,WAAS,EAACuK,QAAS,EACrBC,UAAU,MACVvK,WAAW,aAFf,SAGCpF,EAAK6E,MAAMvB,KAAI,SAAAsC,GAAO,OAAIA,MAH3B,UAEoCrC,EAFpC,WADJ,UAAyDA,EAAzD,gBAhBqB,uB,GAnCrBzG,IAAMC,W,yXCnB9B,IAAM6S,GAAmBjS,YAAOkS,KAAPlS,CAAH,MACA,qBAAG9C,MAAkBC,QAChC,qBAAGD,MAAkBE,QAE1B+U,GAAmBnS,YAAOgE,IAAPhE,CAAH,MACA,qBAAG9C,MAAkBU,SAChC,qBAAGV,MAAkBW,SAE1BuU,GAAkBpS,YAAOK,IAAPL,CAAH,MACV,qBAAG9C,MAAkBW,SA0IjBwU,OAvIf,WACE,IAAMC,EAAYC,iBAAO,MADZ,EAEiCC,oBAAS,GAF1C,mBAENC,EAFM,KAEWC,EAFX,OAGuCF,mBAAS,IAHhD,mBAGNG,EAHM,KAGcC,EAHd,OAIuBJ,mBAAS,IAJhC,mBAIN5N,EAJM,KAIMiO,EAJN,OCtCY,WAAO,IAAD,EACHL,mBAAS,SADN,mBACtBtV,EADsB,KACf4V,EADe,KAGvBC,EAAU,SAAAC,GACZC,OAAOC,aAAaC,QAAQ,QAASH,GACrCF,EAASE,IAWb,OAJAI,qBAAU,WACN,IAAMC,EAAaJ,OAAOC,aAAaI,QAAQ,SAC/CD,GAAcP,EAASO,KACxB,IACI,CAACnW,EARa,WACG6V,EAAV,UAAV7V,EAA4B,OAAkB,WDmCtBqW,GANjB,mBAMNrW,EANM,KAMCsW,EAND,KAOPC,EAAiB,CACrBC,OAAQ,mBACRC,OAAQ,qBACRC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,qBACRC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,WAEJC,EAAgB,CACpBhB,OAAQ,oBACRC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,WAEJE,EAAsB,UAAVzX,EAAoBG,EAAaS,EAC7CyB,EAAsB,UAAVrC,EAAoB,aAAe,YAC/C4U,EAAc,cAAC,EAAD,CAAQ5U,MAAOA,EAAOqC,UAAWA,EAAWD,YAAakU,IAgC7E,OAxBAJ,qBAAU,WACRd,EAAUsC,QAAU,IAAIC,UACtB1S,KAAI2S,OAAO,CACTC,SAAuC,WAA7B9B,OAAO+B,SAASD,SAAwB,MAAQ,KAC1DE,SAAUhC,OAAO+B,SAASC,SAC1BC,KAAMjC,OAAO+B,SAASE,MAAQ,IAC9BC,SAAU,MACVC,SAAS,KAGb9C,EAAUsC,QAAQS,QAAU,WAC1B3C,GAAmB,GACnBE,EAAsB,gEAEvB,IAEHQ,qBAAU,WArBRd,EAAUsC,QAAQU,UAAY,SAACC,GAC7B1C,EAAclR,KAAK6T,MAAMD,EAAI3W,UAsB9B,CAACgG,IAOF,eAAC,IAAD,CAAe1H,MAAOyX,EAAtB,UACE,cAAC,EAAD,IACA,cAAC3X,EAAD,IACA,cAACyY,GAAA,EAAD,CACEC,aAAc,CAACC,SAAU,MAAOC,WAAY,UAC5CC,KAAMpD,EAFR,SAGI,cAACN,GAAD,CACEnN,SAAS,QACT8Q,OACE,cAAC1D,GAAD,CAAiBjP,UAAU,OAAOsC,KAAK,QAAQpC,QAdxC,WACjB4P,OAAO+B,SAASe,QAAO,IAab,SACE,cAAC,KAAD,MAJN,SAOGpD,MAIP,cAAC,GAAD,CACEb,YAAaA,EACfH,KACE,CACE,CACE,KAAQ,WACR,MAAS,CACP,cAAC,EAAD,GAAqB,qBACrB,cAAC,GAAD,CAAe/M,WAAYA,GAAgB,kBAC3C,cAAC,GAAD,CAAgBA,WAAYA,GAAgB,mBAC5C,cAAC,GAAD,CAAaA,WAAYA,GAAgB,oBACzC,cAAC,GAAD,CAAoC1H,MAAiB,UAAVA,EAAoBuW,EAAiBiB,GAA/D,sBAGrB,CACE,KAAQ,QACR,MAAS,CACP,cAAC,GAAD,CAAgB9P,WAAYA,EAAYkL,aAAa,GAAU,0BAGnE,CACE,KAAQ,cACR,MAAS,CACP,cAAC,GAAD,GAAoB,0BAGxB,CACE,KAAQ,QACR,MAAS,CACP,cAACmC,GAAD,CAAoCxH,IAAK7F,EAAY8F,UAAU,SAASC,UAAW,EAAGC,kBAAkB,EACtG1N,MAAiB,UAAVA,EAAoBuW,EAAiBiB,GADxB,wBEvJrBsB,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB/X,MAAK,YAAkD,IAA/CgY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFhY,SAASiY,eAAe,SAM1BX,O","file":"static/js/main.372c0e4c.chunk.js","sourcesContent":["import { createGlobalStyle} from \"styled-components\"\r\nexport const GlobalStyles = createGlobalStyle`\r\n  body {\r\n    background: ${({ theme }) => theme.body};\r\n    color: ${({ theme }) => theme.text};\r\n    font-family: Tahoma, Helvetica, Arial, Roboto, sans-serif;\r\n    transition: all 0.25s ease;\r\n  }\r\n  `","export const lightTheme = {\r\n    body: '#FFF',\r\n    text: '#363537',\r\n    accent_primary: '#00c9bc',\r\n    accent_secondary: '#c9005e',\r\n    contrast: \"#fff\",\r\n    contrast2: \"#9F9F9F\",\r\n    toggleForeground: '#fff',\r\n    toggleBackground: '#363537',\r\n    black: \"#000\",\r\n    white: \"#fff\"\r\n}\r\nexport const darkTheme = {\r\n    body: '#363537',\r\n    text: '#FAFAFA',\r\n    accent_primary: '#00c9bc',\r\n    accent_secondary: '#c9005e',\r\n    contrast: \"#202021\",\r\n    contrast2: \"#000\",\r\n    toggleForeground: '#fff',\r\n    toggleBackground: '#363537',\r\n    black: \"#000\",\r\n    white: \"#fff\"\r\n}\r\n","import React from 'react';\r\n\r\nclass SetTitle extends React.Component {\r\n    componentDidMount() {\r\n        this.getBotName();\r\n    }\r\n\r\n    getBotName = () => {\r\n        fetch('/api/general/name', {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n              }\r\n        })\r\n        .then(res => (res.ok ? res : Promise.reject(res)))\r\n        .then(res => res.json())\r\n        .then(json_data => document.title = `${json_data.data.name} Dashboard`)\r\n        .catch(e => {\r\n            console.trace(e);\r\n            document.title = `JJMumbleBot Dashboard`;\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return(<div/>);\r\n    }\r\n}\r\n\r\nexport default SetTitle;","import React from 'react';\r\nimport { func, string } from 'prop-types';\r\nimport {Switch, FormGroup, FormControlLabel} from '@material-ui/core';\r\n\r\n\r\nconst Toggle = ({theme, themeText, toggleTheme }) => {\r\n\r\n    return (\r\n      <FormGroup>\r\n        <FormControlLabel control={<Switch\r\n            checked={theme === 'dark' ? true : false}\r\n            onChange={toggleTheme} \r\n            name=\"darkModeChecked\" \r\n          />} label=\"Dark Mode\">\r\n        </FormControlLabel>\r\n      </FormGroup>\r\n    );\r\n};\r\nToggle.propTypes = {\r\n    theme: string.isRequired,\r\n    themeText: string.isRequired,\r\n    toggleTheme: func.isRequired,\r\n}\r\nexport default Toggle;","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport KeyboardReturnIcon from '@material-ui/icons/KeyboardReturn'; \r\nimport {TextField, IconButton, Grid, Paper} from '@material-ui/core';\r\nimport styled from \"styled-components\"\r\n\r\n\r\nconst ThemedTextField = styled(TextField)`\r\n    & label {\r\n        color: ${({ theme }) => theme.text};\r\n    }\r\n    & input {\r\n        color: ${({ theme }) => theme.text};\r\n        width: 100%;\r\n    }\r\n`;\r\nconst ThemedSubmitButton = styled(Button)`\r\n    background-color: ${({ theme }) => theme.contrast};\r\n    color: ${({ theme }) => theme.text};\r\n    &:hover {\r\n        background-color: ${({ theme }) => theme.accent_secondary};\r\n        color: ${({ theme }) => theme.white};\r\n    }\r\n`;\r\nconst ThemedIconButton = styled(IconButton)`\r\n    color: ${({ theme }) => theme.text};\r\n    &:hover {\r\n        color: ${({ theme }) => theme.text};\r\n    }\r\n`;\r\n\r\nconst ThemedPaper = styled(Paper)`\r\n    display: 'block';\r\n    padding: 0.2em;\r\n    background-color: ${({ theme }) => theme.body};\r\n`;\r\n\r\n\r\nclass CommandFormGrid extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            botName: '',\r\n            botCommandToken: '',\r\n            commandText: '',\r\n            cmdInvalid: true,\r\n            invalidCmdText: '',\r\n            sentCmd: ''\r\n        }\r\n        this.updateCommandText = this.updateCommandText.bind(this);\r\n        this.sendCommand = this.sendCommand.bind(this);\r\n    }\r\n\r\n    refreshBotDetails = () => {\r\n        fetch('/api/general', {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n              }\r\n        })\r\n        .then(res => (res.ok ? res : Promise.reject(res)))\r\n        .then(res => res.json())\r\n        .then(json_data => {\r\n            this.setState({botName: json_data.data.name});\r\n            this.setState({botCommandToken: json_data.data.command_token});\r\n        }).catch(e => {\r\n            console.log(e);\r\n            this.setState({botName: 'N/A'});\r\n            this.setState({botCommandToken: '!'});\r\n        });\r\n    };\r\n\r\n    updateCommandText = (evt) => {\r\n        this.setState({commandText: evt.target.value})\r\n        if (this.cmdIsValid()) {\r\n            this.setState({cmdIsValid: true});\r\n        }\r\n        else {\r\n            this.setState({cmdIsValid: false});\r\n        }\r\n    }\r\n\r\n    sendCommand = (evt) => {\r\n        evt.preventDefault();\r\n        if (this.cmdIsValid()) {\r\n            this.setState({sentCmd: this.state.commandText});\r\n\r\n            fetch(`/api/command`, {\r\n                method: 'POST',\r\n                body: JSON.stringify({\"text\": this.state.commandText})\r\n            })\r\n            .then(res => (res.ok ? res : Promise.reject(res)))\r\n            .then(res => res.json())\r\n            .then(json_data => {\r\n                console.log(json_data.status);\r\n            })\r\n            .catch(e => console.log(e));\r\n            this.setState({commandText: ''});\r\n        }\r\n        else {\r\n            this.setState({commandText: ''});\r\n        }\r\n        this.setState({cmdIsValid: false});\r\n    }\r\n\r\n    cmdIsValid = () => {\r\n        if (this.state.commandText.length > 0 && this.state.commandText.charAt(0) === this.state.botCommandToken) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshBotDetails(this.props.url);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Grid item xs={12}>\r\n                <ThemedPaper elevation={3}>\r\n                <form onSubmit={this.sendCommand} autoComplete=\"off\">\r\n                    <ThemedTextField\r\n                        InputLabelProps={{className: \"label-field\"}}\r\n                        variant=\"outlined\"\r\n                        value={this.state.commandText}\r\n                        type=\"text\"\r\n                        fullWidth={true}\r\n                        onChange={this.updateCommandText}\r\n                        placeholder={`${this.state.botCommandToken}command ...`}\r\n                        label={(!this.cmdIsValid() && this.state.commandText.length > 0) ? `Invalid command! Format: ${this.state.botCommandToken}command ...` : `Send commands to ${this.state.botName} from here...`}\r\n                        error={this.state.commandText.charAt(0) !== this.state.botCommandToken && this.state.commandText.length > 0}\r\n                        InputProps={\r\n                            {endAdornment: \r\n                                this.props.type === 'compact' ? \r\n                                <ThemedIconButton component=\"span\"\r\n                                type=\"submit\"\r\n                                disabled={!this.cmdIsValid}\r\n                                onClick={this.sendCommand}>\r\n                                    <KeyboardReturnIcon/>\r\n                                </ThemedIconButton> :\r\n                                <ThemedSubmitButton component=\"span\"\r\n                                    endIcon={<KeyboardReturnIcon />}\r\n                                    type=\"submit\" \r\n                                    variant=\"contained\" \r\n                                    style={{width: '150px', height:'40px'}}\r\n                                    disabled={!this.cmdIsValid}\r\n                                    onClick={this.sendCommand}>\r\n                                    Send\r\n                                </ThemedSubmitButton>\r\n                            }\r\n                        }\r\n                    />                        \r\n                </form>\r\n                </ThemedPaper>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CommandFormGrid;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Collapse, Grid, Typography} from '@material-ui/core';\r\nimport LoopIcon from '@material-ui/icons/Loop';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport {Alert} from '@material-ui/lab';\r\n\r\n\r\nconst RefreshButton = styled(IconButton)`\r\n    background-color: rgb(0,0,0,0);\r\n    color: ${({ theme }) => theme.text};\r\n    &:hover {\r\n        background-color: ${({ theme }) => theme.accent_secondary};\r\n        color: ${({ theme }) => theme.white};\r\n    }\r\n`;\r\nconst ThemedTable = styled(Table)`\r\n    .tableHead {\r\n        background: ${({ theme }) => theme.contrast2};\r\n    }\r\n`;\r\nconst ThemedTableCell = styled(TableCell)`\r\n    background-color: ${({ theme }) => theme.contrast};\r\n    color: ${({ theme }) => theme.text};   \r\n`;\r\nconst ThemedAlert = styled(Alert)`\r\n    background-color: ${({ theme }) => theme.body};\r\n    color: ${({ theme }) => theme.text};\r\n`;\r\n\r\nconst CustomGrid = styled(Grid)`\r\n    height:300px;\r\n    maxHeight: 500px;\r\n    overflow-y: scroll;\r\n`;\r\n\r\nclass CommandHistory extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showAlert: false,\r\n            alertMsg: \"\",\r\n            alertSeverity: \"\",\r\n            cmd_history: []\r\n        };\r\n    }\r\n\r\n    getCommandHistory = (useAlert) => {\r\n        fetch('/api/cmdhistory', {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        .then(res => (res.ok ? res : Promise.reject(res)))\r\n        .then(res => res.json())\r\n        .then(json_data => {\r\n            this.setState({cmd_history: json_data.data.cmd_history});\r\n            if (useAlert) {\r\n                this.setState({showAlert: true, alertMsg: \"Successfully refreshed the command history list!\", alertSeverity: \"success\"});\r\n            }\r\n        }).catch(e => {\r\n            console.log(e);\r\n            this.setState({cmd_history: []});\r\n            this.setState({showAlert: true, alertMsg: \"Error retrieving the command history list!\", alertSeverity: \"error\"});\r\n        });\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.getCommandHistory(false);\r\n    }\r\n\r\n    componentDidUpdate(prev_props, prev_state) {\r\n        if (prev_props.socketData.last_cmd_output !== this.props.socketData.last_cmd_output) {\r\n            this.getCommandHistory(false);\r\n        }\r\n    }\r\n\r\n    closeAlert = () => {\r\n        this.setState({showAlert: false, alertMsg: \"\", alertSeverity: \"\"});\r\n    }\r\n\r\n    render() {\r\n        let alert = this.state.showAlert ? <ThemedAlert onClose={this.closeAlert} severity={this.state.alertSeverity}>{this.state.alertMsg}</ThemedAlert> : \"\";\r\n        return (\r\n            <CustomGrid item xs={12} sm={4}>\r\n                <Collapse in={this.state.showAlert}>\r\n                    {alert}\r\n                </Collapse>\r\n                <TableContainer component=\"span\">\r\n                    <Paper elevation={3}>\r\n                    <ThemedTable className=\"cmdTable\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <ThemedTableCell className=\"tableHead\">\r\n                                    <Typography variant=\"body2\"><b>Command History</b>\r\n                                    <RefreshButton \r\n                                    id=\"refreshCmdHistoryButton\" \r\n                                    onClick={() => this.getCommandHistory(true)}\r\n                                    size=\"small\"\r\n                                    >\r\n                                        <LoopIcon />\r\n                                    </RefreshButton>\r\n                                    </Typography>\r\n                                </ThemedTableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody className=\"tableBody\">\r\n                            {\r\n                                this.state.cmd_history.map((item, index) => \r\n                                (\r\n                                    <TableRow key={item+index}>\r\n                                        <ThemedTableCell component=\"td\" scope=\"row\" className=\"cmdHistoryCmdCell\">\r\n                                        {item}\r\n                                        </ThemedTableCell>\r\n                                    </TableRow>\r\n                                ))\r\n                            }\r\n                        </TableBody>\r\n                    </ThemedTable>\r\n                    </Paper>\r\n                </TableContainer>\r\n            </CustomGrid>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CommandHistory;","import React from 'react';\r\nimport {Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Grid, Typography} from '@material-ui/core';\r\nimport styled from 'styled-components';\r\nimport Parser from 'html-react-parser';\r\n\r\n\r\nconst ThemedTable = styled(Table)`\r\n    .tableHead {\r\n        background: ${({ theme }) => theme.contrast2};\r\n    }\r\n    .outTableBody {\r\n        height: 100px;\r\n        overflow: hide;\r\n    }\r\n`;\r\nconst ThemedTableCell = styled(TableCell)`\r\n    background-color: ${({ theme }) => theme.contrast};\r\n    color: ${({ theme }) => theme.text};   \r\n`;\r\n\r\nconst CustomGrid = styled(Grid)`\r\n    height:300px;\r\n    maxHeight: 500px;\r\n    overflow-y: scroll;\r\n`;\r\n\r\nclass LatestCommand extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            last_cmd_type: \"\",\r\n            last_cmd: \"\"\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (Object.keys(this.props.socketData).length !== 0) {\r\n            this.setState({\r\n                last_cmd: this.props.socketData.last_cmd_output,\r\n                last_cmd_type: this.props.socketData.last_cmd_type,\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prev_props, prev_state) {\r\n        if (prev_props.socketData.last_cmd_output !== this.props.socketData.last_cmd_output) {\r\n            this.setState({\r\n                last_cmd: this.props.socketData.last_cmd_output,\r\n                last_cmd_type: this.props.socketData.last_cmd_type,\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <CustomGrid item xs={12} sm={4}>\r\n                <TableContainer component=\"span\">\r\n                    <Paper elevation={3}>\r\n                    <ThemedTable className=\"cmdTable\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <ThemedTableCell className=\"tableHead\">\r\n                                    <Typography variant=\"body2\"><b>Latest Command Output {this.state.last_cmd_type}</b></Typography>\r\n                                </ThemedTableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody className=\"tableBody\">\r\n                            <TableRow>\r\n                                <ThemedTableCell className=\"recentCmdCell\">\r\n                                    {Parser(this.state.last_cmd)}\r\n                                </ThemedTableCell>\r\n                            </TableRow>\r\n                        </TableBody>\r\n                    </ThemedTable>\r\n                    </Paper>\r\n                </TableContainer>\r\n            </CustomGrid>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LatestCommand;","import React, {Fragment} from 'react';\r\nimport PersonRoundedIcon from '@material-ui/icons/PersonRounded';\r\nimport PersonOutlineRoundedIcon from '@material-ui/icons/PersonOutlineRounded';\r\nimport MicOffIcon from '@material-ui/icons/MicOff';\r\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\r\nimport ExitToAppRoundedIcon from '@material-ui/icons/ExitToAppRounded';\r\nimport ExpandMoreRoundedIcon from '@material-ui/icons/ExpandMoreRounded';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport TreeItem from '@material-ui/lab/TreeItem';\r\nimport {Typography, Grid, IconButton} from '@material-ui/core';\r\nimport BlockRoundedIcon from '@material-ui/icons/BlockRounded';\r\nimport DesktopWindowsRoundedIcon from '@material-ui/icons/DesktopWindowsRounded';\r\nimport RemoveRoundedIcon from '@material-ui/icons/RemoveRounded';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport DeleteRoundedIcon from '@material-ui/icons/DeleteRounded';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst ThemedTreeItem = styled(TreeItem)`\r\n    background-color: ${({ theme }) => theme.contrast};\r\n    color: ${({ theme }) => theme.text};\r\n    user-select: none;\r\n`;\r\n\r\nconst ThemedIconButton = styled(IconButton)`\r\n    background-color: rgb(0, 0, 0, 0);\r\n    color: ${({ theme }) => theme.text};\r\n    &:hover {\r\n        background-color: ${({ theme }) => theme.accent_secondary};\r\n        color: ${({ theme }) => theme.white};\r\n    }\r\n`;\r\n\r\nexport default class NestedList extends React.Component {\r\n\r\n    handleChannelRemove = (e, channel) => {\r\n        e.preventDefault();\r\n        this.removeChannel(channel);\r\n    }\r\n\r\n    removeChannel = (channel) => {\r\n        fetch(`/api/admin/channels/remove`, {\r\n            method: 'POST',\r\n            body: JSON.stringify({\"text\": `${channel}`})\r\n        })\r\n        .then(res => (res.ok ? res : Promise.reject(res)))\r\n        .then(res => res.json())\r\n        .then(json_data => {\r\n            console.log(json_data.status);\r\n        })\r\n        .catch(e => console.log(e));\r\n    }\r\n\r\n    muteUser = (username) => {\r\n        fetch(`/api/admin/users/mute`, {\r\n            method: 'POST',\r\n            body: JSON.stringify({\"text\": `${username}`})\r\n        })\r\n        .then(res => (res.ok ? res : Promise.reject(res)))\r\n        .then(res => res.json())\r\n        .then(json_data => {\r\n            console.log(json_data.status);\r\n        })\r\n        .catch(e => console.log(e));\r\n    }\r\n\r\n    deafenUser = (username) => {\r\n        fetch(`/api/admin/users/deafen`, {\r\n            method: 'POST',\r\n            body: JSON.stringify({\"text\": `${username}`})\r\n        })\r\n        .then(res => (res.ok ? res : Promise.reject(res)))\r\n        .then(res => res.json())\r\n        .then(json_data => {\r\n            console.log(json_data.status);\r\n        })\r\n        .catch(e => console.log(e));\r\n    }\r\n\r\n    kickUser = (username) => {\r\n        fetch(`/api/admin/users/kick`, {\r\n            method: 'POST',\r\n            body: JSON.stringify({\"text\": `${username}`})\r\n        })\r\n        .then(res => (res.ok ? res : Promise.reject(res)))\r\n        .then(res => res.json())\r\n        .then(json_data => {\r\n            console.log(json_data.status);\r\n        })\r\n        .catch(e => console.log(e));\r\n    }\r\n\r\n    banUser = (username) => {\r\n        fetch(`/api/admin/users/ban`, {\r\n            method: 'POST',\r\n            body: JSON.stringify({\"text\": `${username}`})\r\n        })\r\n        .then(res => (res.ok ? res : Promise.reject(res)))\r\n        .then(res => res.json())\r\n        .then(json_data => {\r\n            console.log(json_data.status);\r\n        })\r\n        .catch(e => console.log(e));\r\n    }\r\n\r\n    render() {\r\n        let collapseIcon = <ExpandMoreRoundedIcon />;\r\n        let expandIcon = <ChevronRightIcon/>;\r\n        if (this.props.users && this.props.items) {\r\n            expandIcon = this.props.users.length > 0 || this.props.items.length > 0 ? <ChevronRightIcon /> : <RemoveRoundedIcon/>;\r\n            collapseIcon = this.props.users.length > 0 || this.props.items.length > 0 ? <ExpandMoreRoundedIcon /> : <RemoveRoundedIcon/>;\r\n        }\r\n        return (\r\n                <ThemedTreeItem key={`${this.props.node_id}-key`} nodeId={this.props.node_id+\"\"} \r\n                label={this.props.item_label} expandIcon={expandIcon} collapseIcon={collapseIcon}>\r\n                    {\r\n                        this.props.users ?\r\n                        this.props.users.map((user, user_index) => (\r\n                            <ThemedTreeItem \r\n                            key={`${this.props.node_id+user_index}-key`} \r\n                            nodeId={this.props.node_id+user_index+\"\"} \r\n                            label={\r\n                                <Grid container xs={12} key={`${user[\"name\"]}-key`} alignItems=\"center\">\r\n                                    <Grid item sm={8}>\r\n                                        <Typography variant=\"subtitle2\" gutterBottom={true} noWrap>{user[\"name\"]}</Typography>\r\n                                    </Grid>\r\n                                    <Fragment>\r\n                                        {   user[\"self_mute\"] === \"True\" ?\r\n                                            <Grid item sm={1} alignItems=\"right\">\r\n                                                <MicOffIcon color=\"secondary\" style={{width:\"15px\", height:\"15px\"}}/>\r\n                                            </Grid> : \"\"\r\n                                        }\r\n                                        {   user[\"server_mute\"] === \"True\" ?\r\n                                            <Grid item sm={1} alignItems=\"right\">\r\n                                                <MicOffIcon color=\"primary\" style={{width:\"15px\", height:\"15px\"}}/>\r\n                                            </Grid> : \"\"\r\n                                        }\r\n                                        {   user[\"self_deaf\"] === \"True\" ?\r\n                                            <Grid item sm={1} alignItems=\"right\">\r\n                                                <VolumeOffIcon color=\"secondary\" style={{width:\"15px\", height:\"15px\"}}/>\r\n                                            </Grid> : \"\"\r\n                                        }\r\n                                        {   user[\"server_deaf\"] === \"True\" ?\r\n                                            <Grid item sm={1} alignItems=\"right\">\r\n                                                <VolumeOffIcon color=\"primary\" style={{width:\"15px\", height:\"15px\"}}/>\r\n                                            </Grid> : \"\"\r\n                                        }\r\n                                    </Fragment>\r\n                                </Grid>\r\n                            } \r\n                            icon={this.props.bot_name === user[\"name\"] ? <DesktopWindowsRoundedIcon/> : \"\"}\r\n                            expandIcon={this.props.bot_name !== user[\"name\"] ? <PersonRoundedIcon/> : \"\"}\r\n                            collapseIcon={this.props.bot_name !== user[\"name\"] ? <PersonOutlineRoundedIcon/> : \"\"}\r\n                            >\r\n                                {\r\n                                    this.props.bot_name !== user[\"name\"] ?\r\n                                    <Grid container xs={12}>\r\n                                        <Grid item>\r\n                                            <Tooltip title={`Mute ${user[\"name\"]}`} aria-label={`mute-user-${user[\"name\"]}`}>\r\n                                            <ThemedIconButton size=\"small\" onClick={() => this.muteUser(user[\"name\"])}><MicOffIcon style={{width:\"15px\", height:\"15px\"}}/></ThemedIconButton>\r\n                                            </Tooltip>\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <Tooltip title={`Deafen ${user[\"name\"]}`} aria-label={`deafen-user-${user[\"name\"]}`}>\r\n                                            <ThemedIconButton size=\"small\" onClick={() => this.deafenUser(user[\"name\"])}><VolumeOffIcon style={{width:\"15px\", height:\"15px\"}}/></ThemedIconButton>\r\n                                            </Tooltip>\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <Tooltip title={`Kick ${user[\"name\"]}`} aria-label={`kick-user-${user[\"name\"]}`}>\r\n                                            <ThemedIconButton size=\"small\" onClick={() => this.kickUser(user[\"name\"])}><ExitToAppRoundedIcon style={{width:\"15px\", height:\"15px\"}}/></ThemedIconButton>\r\n                                            </Tooltip>\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <Tooltip title={`Ban ${user[\"name\"]}`} aria-label={`ban-user-${user[\"name\"]}`}>\r\n                                            <ThemedIconButton size=\"small\" onClick={() => this.banUser(user[\"name\"])}><BlockRoundedIcon style={{width:\"15px\", height:\"15px\"}}/></ThemedIconButton>\r\n                                            </Tooltip>\r\n                                        </Grid>\r\n                                    </Grid> : \"\"\r\n                                }\r\n                            </ThemedTreeItem>\r\n                        )) : \"\"\r\n                    }\r\n                    { \r\n                        this.props.items.map((subitem, subitem_index) => (\r\n                            <NestedList \r\n                                key={`${(subitem_index+this.props.node_id+1)}-key`}\r\n                                node_id={(subitem_index+this.props.node_id+1) + \"\"} \r\n                                items={subitem.subchannels}\r\n                                users={subitem.users}\r\n                                bot_name={this.props.bot_name}\r\n                                item_label={\r\n                                <Grid container xs={12} alignItems=\"center\">\r\n                                    <Grid item sm={11}>\r\n                                        <Typography variant=\"body2\" gutterBottom={true} noWrap>{subitem.channel_name}</Typography>\r\n                                    </Grid>\r\n                                    <Grid item sm={1}>\r\n                                    {\r\n                                        this.props.item_label && !this.props.users ? \"\" :\r\n                                        <Tooltip title={`Remove Channel: ${subitem.channel_name}`} aria-label={`remove-channel-${subitem.channel_name}`}>\r\n                                            <ThemedIconButton size=\"small\" onClick={(event) => this.handleChannelRemove(event, subitem.channel_name)}><DeleteRoundedIcon style={{width: \"20px\", height: \"20px\"}}/></ThemedIconButton>\r\n                                        </Tooltip>\r\n                                    }\r\n                                    </Grid>\r\n                                </Grid>\r\n                                }>\r\n                            </NestedList>\r\n                        ))\r\n                    }\r\n                </ThemedTreeItem>\r\n        );\r\n    }\r\n\r\n}","import React from 'react';\r\nimport {Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Grid, Typography, Paper} from '@material-ui/core';\r\nimport AccountTreeRoundedIcon from '@material-ui/icons/AccountTreeRounded';\r\nimport TreeView from '@material-ui/lab/TreeView';\r\nimport styled from 'styled-components';\r\nimport NestedList from './NestedList.js';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst ThemedTable = styled(Table)`\r\n    background: ${({ theme }) => theme.contrast};\r\n    padding: 5em;\r\n    .tableHead {\r\n        background: ${({ theme }) => theme.contrast2};\r\n    }\r\n`;\r\nconst ThemedTableCell = styled(TableCell)`\r\n    background-color: ${({ theme }) => theme.contrast};\r\n    color: ${({ theme }) => theme.text};   \r\n`;\r\nconst CustomGrid = styled(Grid)`\r\n    height:300px;\r\n    maxHeight: 500px;\r\n    overflow-y: scroll;\r\n`;\r\n\r\nclass OnlineUsers extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.max_expand = Array.from({length: 256}, (_, i) => i+1+\"\")\r\n        this.state = {\r\n            botName: \"\",\r\n            list_hash: \"\",\r\n            list_items: []\r\n        };\r\n        this.classes = this.useStyles()\r\n    }\r\n\r\n    useStyles = () => makeStyles({\r\n        root: {\r\n          height: 500,\r\n          flexGrow: 1,\r\n          maxWidth: 400,\r\n        },\r\n      });\r\n\r\n    refreshBotName = () => {\r\n        fetch('/api/general/name', {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n              }\r\n        })\r\n        .then(res => (res.ok ? res : Promise.reject(res)))\r\n        .then(res => res.json())\r\n        .then(json_data => {\r\n            this.setState({botName: json_data.data.name});\r\n        }).catch(e => {\r\n            console.log(e);\r\n            this.setState({botName: 'N/A'});\r\n        });\r\n    };\r\n\r\n    componentDidMount() {\r\n        if (Object.keys(this.props.socketData).length > 0) {\r\n            this.setState({\r\n                list_items: this.props.socketData.server_hierarchy.hierarchy,\r\n                list_hash: this.props.socketData.server_hierarchy.hash\r\n            })\r\n        }\r\n        this.refreshBotName();\r\n    }\r\n\r\n    componentDidUpdate(prev_props, prev_state) {\r\n        if (Object.keys(this.props.socketData).length > 0) {\r\n            if (prev_props.socketData.server_hierarchy) {\r\n                if (this.state.list_hash !== this.props.socketData.server_hierarchy.hash) {\r\n                    this.setState({\r\n                        list_items: this.props.socketData.server_hierarchy.hierarchy,\r\n                        list_hash: this.props.socketData.server_hierarchy.hash\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <CustomGrid item xs={12} sm={4}>\r\n                <TableContainer component=\"span\">\r\n                    <Paper elevation={3}>\r\n                    <ThemedTable className=\"cmdTable\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <ThemedTableCell className=\"tableHead\">\r\n                                    <Typography variant=\"body2\"><b>Channels</b> <AccountTreeRoundedIcon/></Typography>\r\n                                </ThemedTableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody className=\"tableBody\">\r\n                            <TreeView\r\n                                defaultExpanded={this.max_expand}>\r\n                                    <NestedList\r\n                                    key=\"online-users-hierarchy-key\"\r\n                                    bot_name={this.state.botName}\r\n                                    items={this.state.list_items} \r\n                                    item_label={<Typography variant=\"body2\" gutterBottom={true} noWrap>All Channels</Typography>}\r\n                                    node_id={1}/>\r\n                            </TreeView>\r\n                        </TableBody>\r\n                    </ThemedTable>\r\n                    </Paper>\r\n                </TableContainer>\r\n            </CustomGrid>\r\n        )\r\n    }\r\n}\r\n\r\nexport default OnlineUsers;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {TextField, Button, Typography, Collapse} from '@material-ui/core';\r\nimport {Alert} from '@material-ui/lab';\r\n\r\n\r\nconst ThemedTextField = styled(TextField)`\r\n    & label {\r\n        color: ${({ theme }) => theme.text};\r\n    }\r\n    & input {\r\n        color: ${({ theme }) => theme.text};\r\n    }\r\n`;\r\nconst ThemedAlert = styled(Alert)`\r\n    background-color: ${({ theme }) => theme.body};\r\n    color: ${({ theme }) => theme.text};\r\n`;\r\nconst ThemedSubmitButton = styled(Button)`\r\n    background-color: ${({ theme }) => theme.contrast2};\r\n    color: ${({ theme }) => theme.text};\r\n    &:hover {\r\n        background-color: ${({ theme }) => theme.accent_secondary};\r\n        color: ${({ theme }) => theme.white};\r\n    }\r\n`;\r\n\r\nexport default class PluginMetadataForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            metadata: {},\r\n            alertMsg: \"\",\r\n            alertSeverity: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getPluginMetadata(this.props.plugin_name, false);\r\n    }\r\n\r\n    getPluginMetadata = (plugin_name) => {\r\n        fetch(`/api/admin/plugins/metadata/get`, {\r\n            method: 'POST',\r\n            body: JSON.stringify({\"text\": `${plugin_name}`})\r\n        })\r\n        .then(res => (res.ok ? res : Promise.reject(res)))\r\n        .then(res => res.json())\r\n        .then(json_data => {\r\n            console.log(json_data.status);\r\n            this.setState({metadata: json_data.data.metadata});\r\n        })\r\n        .catch(e => console.log(e));\r\n    }\r\n\r\n    setPluginMetadata = (plugin_name, metadata) => {\r\n        fetch(`/api/admin/plugins/metadata/set`, {\r\n            method: 'POST',\r\n            body: JSON.stringify({\"name\": plugin_name, \"text\": this.state.metadata})\r\n        })\r\n        .then(res => (res.ok ? res : Promise.reject(res)))\r\n        .then(res => res.json())\r\n        .then(json_data => {\r\n            console.log(json_data.status);\r\n            if (json_data.status === 200) {\r\n                this.setState({showAlert: true, alertMsg: \"Successfully updated plugin metadata file!\", alertSeverity: \"success\"});\r\n            }\r\n            else {\r\n                this.setState({showAlert: true, alertMsg: \"Encounted an error updating the plugin metadata file!\", alertSeverity: \"error\"});\r\n            }\r\n        })\r\n        .catch(e => {\r\n            console.log(e);\r\n            this.setState({showAlert: true, alertMsg: \"Error retrieving the plugins list!\", alertSeverity: \"error\"});\r\n        });\r\n    }\r\n\r\n    closeAlert = () => {\r\n        this.setState({showAlert: false, alertMsg: \"\", alertSeverity: \"\"});\r\n    }\r\n\r\n    updateMetaInfo = (e, key) => {\r\n        const new_meta = this.state.metadata;\r\n        new_meta[\"Plugin Settings\"][key] = e.target.value;\r\n        this.setState({metadata: new_meta});\r\n    }\r\n\r\n    updateMetadataFile = (event) => {\r\n        event.preventDefault();\r\n        this.closeAlert();\r\n        this.setPluginMetadata(this.props.plugin_name);\r\n        this.getPluginMetadata(this.props.plugin_name);\r\n    }\r\n\r\n    render() {\r\n        let alert = this.state.showAlert ? <ThemedAlert onClose={this.closeAlert} severity={this.state.alertSeverity}>{this.state.alertMsg}</ThemedAlert> : \"\";\r\n        return(\r\n            <form key={`plugin-metadata-form-${this.props.plugin_name}`} onSubmit={this.updateMetadataFile} autoComplete=\"off\">\r\n                <Collapse in={this.state.showAlert}>\r\n                    {alert}\r\n                </Collapse>\r\n                <Typography>Plugin Settings - Metadata File</Typography>\r\n                <br/>\r\n                {\r\n                    Object.keys(this.state.metadata).length > 0 && \"Plugin Settings\" in this.state.metadata ?\r\n                    Object.keys(this.state.metadata[\"Plugin Settings\"]).map((inner_key, inner_index) =>\r\n                        <div>\r\n                            <ThemedTextField \r\n                                id={`form-item-${inner_key}-${inner_index}`} \r\n                                onChange={(e) => this.updateMetaInfo(e, inner_key)}\r\n                                placeholder=\"...\"\r\n                                defaultValue={this.state.metadata[\"Plugin Settings\"][inner_key]}\r\n                                type=\"text\"\r\n                                label={<Typography>{inner_key}</Typography>}\r\n                                size=\"small\"\r\n                                fullWidth={true}\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }} \r\n                            />\r\n                        </div>\r\n                    ) : \"\"\r\n                }\r\n                <br/>\r\n                <ThemedSubmitButton type=\"submit\"><Typography variant=\"subtitle2\">Update Settings</Typography></ThemedSubmitButton>\r\n            </form>\r\n        );\r\n    }\r\n\r\n}","import React from 'react';\r\nimport ReactJson from 'react-json-view';\r\nimport styled from 'styled-components';\r\nimport PluginMetadataForm from './PluginMetadataForm';\r\nimport {Paper, Typography} from '@material-ui/core';\r\n\r\n\r\nconst ThemedPaper = styled(Paper)`\r\n  background-color: ${({ theme }) => theme.contrast};\r\n  color: ${({ theme }) => theme.text};\r\n  padding: 15px;\r\n`;\r\nconst ThemedPaperInner = styled(Paper)`\r\n  background-color: ${({ theme }) => theme.body};\r\n  color: ${({ theme }) => theme.text};\r\n  padding: 15px;\r\n`;\r\n\r\nexport default class PluginMetadata extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            metadata: {}\r\n        }\r\n    }\r\n\r\n    getPluginMetadata = (plugin_name) => {\r\n        fetch(`/api/admin/plugins/metadata/get`, {\r\n            method: 'POST',\r\n            body: JSON.stringify({\"text\": `${plugin_name}`})\r\n        })\r\n        .then(res => (res.ok ? res : Promise.reject(res)))\r\n        .then(res => res.json())\r\n        .then(json_data => {\r\n            console.log(json_data.status);\r\n            this.setState({metadata: json_data.data.metadata});\r\n        })\r\n        .catch(e => console.log(e));\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getPluginMetadata(this.props.plugin_name);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <ThemedPaper key={`plugin-metadata-${this.props.plugin_name}`}>\r\n                <ThemedPaperInner elevation={5}>\r\n                    <PluginMetadataForm plugin_name={this.props.plugin_name}/>\r\n                </ThemedPaperInner>\r\n                <br/>\r\n                <ThemedPaperInner elevation={5}>\r\n                    <Typography>Metadata File Preview</Typography><br/>\r\n                    <ReactJson key={`json-viewer-${this.props.plugin_name}`} src={this.state.metadata} iconStyle=\"square\" collapsed={1} displayDataTypes={false}\r\n                        theme={this.props.theme}/>\r\n                </ThemedPaperInner>\r\n            </ThemedPaper>\r\n        );\r\n    }\r\n\r\n}","import React from 'react';\r\nimport styled from \"styled-components\"\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport LoopIcon from '@material-ui/icons/Loop';\r\nimport {Alert} from '@material-ui/lab';\r\nimport {Typography, Paper, Collapse, Grid} from '@material-ui/core';\r\nimport TreeView from '@material-ui/lab/TreeView';\r\nimport TreeItem from '@material-ui/lab/TreeItem';\r\nimport PluginMetadata from './PluginMetadata';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ExpandMoreRoundedIcon from '@material-ui/icons/ExpandMoreRounded';\r\n\r\n\r\nconst RefreshButton = styled(IconButton)`\r\n    background-color: rgb(0,0,0,0);\r\n    color: ${({ theme }) => theme.text};\r\n    &:hover {\r\n        background-color: ${({ theme }) => theme.accent_secondary};\r\n        color: ${({ theme }) => theme.white};\r\n    }\r\n`;\r\nconst ThemedPaper = styled(Paper)`\r\n  background-color: ${({ theme }) => theme.contrast2};\r\n  color: ${({ theme }) => theme.text};\r\n  padding:5px;\r\n`;\r\nconst ThemedAlert = styled(Alert)`\r\n    background-color: ${({ theme }) => theme.body};\r\n    color: ${({ theme }) => theme.text};\r\n`;\r\n\r\nconst ThemedTreeView = styled(TreeView)`\r\n    background-color: ${({ theme }) => theme.contrast2};\r\n    color: ${({ theme }) => theme.text};\r\n`;\r\nconst ThemedTreeItem = styled(TreeItem)`\r\n    color: ${({ theme }) => theme.text};\r\n    padding: 5px;\r\n`;\r\n\r\nclass PluginsList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showAlert: false,\r\n            alertMsg: \"\",\r\n            alertSeverity: \"\",\r\n            items: []\r\n        }\r\n    }\r\n\r\n    refreshPlugins = (useAlert) => {\r\n        fetch('/api/plugins', {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n              }\r\n        })\r\n        .then(res => (res.ok ? res : Promise.reject(res)))\r\n        .then(res => res.json())\r\n        .then(json_data => {\r\n            this.setState({items: json_data.data.plugins});\r\n            if (useAlert) {\r\n                this.setState({showAlert: true, alertMsg: \"Successfully refreshed the plugins list!\", alertSeverity: \"success\"});\r\n            }\r\n        }).catch(e => {\r\n            console.log(e);\r\n            this.setState({showAlert: true, alertMsg: \"Error retrieving the plugins list!\", alertSeverity: \"error\"});\r\n        });\r\n    };\r\n\r\n    closeAlert = () => {\r\n        this.setState({showAlert: false, alertMsg: \"\", alertSeverity: \"\"});\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshPlugins(false);\r\n    }\r\n\r\n    render() {\r\n        let alert = this.state.showAlert ? <ThemedAlert onClose={this.closeAlert} severity={this.state.alertSeverity}>{this.state.alertMsg}</ThemedAlert> : \"\";\r\n        return (\r\n            <Grid item xs={12}>\r\n                <Collapse in={this.state.showAlert}>\r\n                    {alert}\r\n                </Collapse>\r\n                <div>\r\n                    <b>Active Plugins:</b>\r\n                    <RefreshButton \r\n                    id=\"refreshButton\" \r\n                    onClick={() => this.refreshPlugins(true)}\r\n                    size=\"small\"\r\n                    >\r\n                    <LoopIcon />\r\n                    </RefreshButton>\r\n                </div>\r\n                <ThemedPaper>\r\n                    <ThemedTreeView>\r\n                        {\r\n                            this.state.items.map((item, index) => \r\n                            (\r\n                                <ThemedTreeItem key={`plugin-tree-item-${item}`} label={<Typography>{item}</Typography>} expandIcon={<ChevronRightIcon/>} collapseIcon={<ExpandMoreRoundedIcon/>} nodeId={index}>\r\n                                    <PluginMetadata key={`plugin-item-${item}`} plugin_name={item} theme={this.props.theme}/>\r\n                                </ThemedTreeItem>\r\n                            ))\r\n                        }\r\n                    </ThemedTreeView>\r\n                </ThemedPaper>\r\n            </Grid>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nexport default PluginsList;","import React from 'react';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport MusicNoteRoundedIcon from '@material-ui/icons/MusicNoteRounded';\r\nimport DeleteRoundedIcon from '@material-ui/icons/DeleteRounded';\r\nimport SkipNextRoundedIcon from '@material-ui/icons/SkipNextRounded';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst ThemedDeleteIcon = styled(DeleteRoundedIcon)`\r\n    color: ${({ theme }) => theme.accent_secondary};\r\n`;\r\nconst ThemedSkipIcon = styled(SkipNextRoundedIcon)`\r\n    color: ${({ theme }) => theme.text};\r\n`;\r\nconst ThemedMusicIcon = styled(MusicNoteRoundedIcon)`\r\n    color: ${({ theme }) => theme.text};\r\n`;\r\nconst ThemedTypography = styled(Typography)`\r\n    color: ${({ theme }) => theme.text};\r\n`;\r\n\r\nexport default class AudioTrackItem extends React.Component {\r\n    removeTrack = () => {\r\n        fetch(`/api/audio/removetrack`, {\r\n            method: 'POST',\r\n            body: JSON.stringify({\"text\": `${this.props.indexText}`})\r\n        })\r\n        .then(res => (res.ok ? res : Promise.reject(res)))\r\n        .then(res => res.json())\r\n        .then(json_data => {\r\n            console.log(json_data.status);\r\n        })\r\n        .catch(e => console.log(e));\r\n    }\r\n\r\n    skipToTrack = () => {\r\n        fetch(`/api/audio/skipto`, {\r\n            method: 'POST',\r\n            body: JSON.stringify({\"text\": `${this.props.indexText}`})\r\n        })\r\n        .then(res => (res.ok ? res : Promise.reject(res)))\r\n        .then(res => res.json())\r\n        .then(json_data => {\r\n            console.log(json_data.status);\r\n        })\r\n        .catch(e => console.log(e));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ListItem>\r\n                {\r\n                    this.props.useIcon ? \r\n                    <ListItemIcon>\r\n                        <ThemedMusicIcon/>\r\n                        {this.props.indexText ? <ThemedTypography noWrap={true}><b>{this.props.indexText}</b></ThemedTypography> : \"\"}\r\n                    </ListItemIcon> : \"\"\r\n                }\r\n                <ListItemText\r\n                    primary={this.props.primaryText ? <ThemedTypography variant=\"body1\" noWrap={true}>{this.props.primaryText}</ThemedTypography> : 'N/A'}\r\n                    secondary={this.props.secondaryText ? <ThemedTypography variant=\"caption\" noWrap={true}><a href={`${this.props.secondaryText}`} target=\"_blank\" rel=\"noopener noreferrer\">{this.props.secondaryText}</a></ThemedTypography> : null}\r\n                />                \r\n                {\r\n                    this.props.useButtons ?\r\n                    <ListItemSecondaryAction>\r\n                        <Tooltip title=\"Remove Track\" aria-label=\"delete-track-tooltip\">\r\n                            <IconButton edge=\"end\" aria-label=\"delete-track\" onClick={this.removeTrack}>\r\n                                <ThemedDeleteIcon />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        <Tooltip title=\"Skip To Track\" aria-label=\"skip-track-tooltip\">\r\n                            <IconButton edge=\"end\" aria-label=\"skip-track\" onClick={this.skipToTrack}>\r\n                                <ThemedSkipIcon />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </ListItemSecondaryAction> : \"\"            \r\n                }\r\n            </ListItem>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport StopIcon from '@material-ui/icons/Stop';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\r\nimport LoopIcon from '@material-ui/icons/Loop';\r\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\r\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\r\nimport Box from '@material-ui/core/Box';\r\nimport ReplayIcon from '@material-ui/icons/Replay';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst ThemedCard = styled(Card)`\r\n    background-color: ${({ theme }) => theme.contrast};\r\n    color: ${({ theme }) => theme.text};\r\n    display: block;\r\n    width: 500px;\r\n`;\r\nconst ThemedIconButton = styled(IconButton)`\r\n    color: ${({ theme }) => theme.text};\r\n`;\r\nconst DetailsDiv = styled.div`\r\n    display: block;\r\n    text-align: center;\r\n`;\r\nconst ControlsDiv = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    paddingLeft: 1em;\r\n    paddingBottom: 1em;\r\n`;\r\nconst ThemedCardMedia = styled(CardMedia)`\r\n    \r\n`;\r\nconst ThemedCardContent = styled(CardContent)`\r\n    flex: 1 0 auto;\r\n`;\r\nconst LoopIconActive = styled(LoopIcon)`\r\n    color: ${({ theme }) => theme.accent_secondary};\r\n`;\r\nconst LoopIconInactive = styled(LoopIcon)`\r\n    color: ${({ theme }) => theme.text};\r\n`;\r\n\r\nexport default class AudioCurrentTrack extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            audio_track: {},\r\n            img_src: \"\",\r\n            track_hash: \"\",\r\n            status: \"\",\r\n            volume: 0,\r\n            looping: false,\r\n            duration: 0,\r\n            progress: 0,\r\n            progress_string : \"\",\r\n            duration_string : \"\"\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (Object.keys(this.props.socketData).length > 0) {\r\n            if (this.props.socketData.audio_data) {\r\n                this.setState({\r\n                    audio_track: this.props.socketData.audio_data.track,\r\n                    volume: this.props.socketData.audio_data.volume,\r\n                    status: this.props.socketData.audio_data.status,\r\n                    looping: this.props.socketData.audio_data.loop,\r\n                    img_src: this.props.socketData.audio_data.img_uri_formatted,\r\n                    track_hash: this.props.socketData.audio_data.hash,\r\n                    duration: this.props.socketData.audio_data.duration_time,\r\n                    progress: this.props.socketData.audio_data.progress_time,\r\n                    progress_string: this.props.socketData.audio_data.progress_string,\r\n                    duration_string: this.props.socketData.audio_data.duration_string\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    stopTrack = () => {\r\n        fetch(`/api/audio/stop`, {\r\n            method: 'POST'\r\n        })\r\n        .then(res => (res.ok ? res : Promise.reject(res)))\r\n        .then(res => res.json())\r\n        .then(json_data => {\r\n            console.log(json_data.status);\r\n        })\r\n        .catch(e => console.log(e));\r\n    }\r\n\r\n    nextTrack = () => {\r\n        fetch(`/api/audio/nexttrack`, {\r\n            method: 'POST'\r\n        })\r\n        .then(res => (res.ok ? res : Promise.reject(res)))\r\n        .then(res => res.json())\r\n        .then(json_data => {\r\n            console.log(json_data.status);\r\n        })\r\n        .catch(e => console.log(e));\r\n    }\r\n\r\n    togglePause = () => {\r\n        if (this.state.status === \"Paused\") { \r\n            fetch(`/api/audio/resume`, {\r\n                method: 'POST'\r\n            })\r\n            .then(res => (res.ok ? res : Promise.reject(res)))\r\n            .then(res => res.json())\r\n            .then(json_data => {\r\n                console.log(json_data.status);\r\n            })\r\n            .catch(e => console.log(e));\r\n        }\r\n        else if (this.state.status === \"Playing\") {\r\n            fetch(`/api/audio/pause`, {\r\n                method: 'POST'\r\n            })\r\n            .then(res => (res.ok ? res : Promise.reject(res)))\r\n            .then(res => res.json())\r\n            .then(json_data => {\r\n                console.log(json_data.status);\r\n            })\r\n            .catch(e => console.log(e));\r\n        }\r\n    }\r\n\r\n    replayTrack = () => {\r\n        fetch(`/api/audio/replay`, {\r\n            method: 'POST'\r\n        })\r\n        .then(res => (res.ok ? res : Promise.reject(res)))\r\n        .then(res => res.json())\r\n        .then(json_data => {\r\n            console.log(json_data.status);\r\n        })\r\n        .catch(e => console.log(e));\r\n    }\r\n\r\n    toggleLoop = () => {\r\n        fetch(`/api/audio/loop`, {\r\n            method: 'POST'\r\n        })\r\n        .then(res => (res.ok ? res : Promise.reject(res)))\r\n        .then(res => res.json())\r\n        .then(json_data => {\r\n            console.log(json_data.status);\r\n        })\r\n        .catch(e => console.log(e));\r\n    }\r\n\r\n    shuffleQueue = () => {\r\n        fetch(`/api/audio/shuffle`, {\r\n            method: 'POST'\r\n        })\r\n        .then(res => (res.ok ? res : Promise.reject(res)))\r\n        .then(res => res.json())\r\n        .then(json_data => {\r\n            console.log(json_data.status);\r\n        })\r\n        .catch(e => console.log(e));\r\n    }\r\n\r\n    increaseVolume = () => {\r\n        fetch(`/api/audio/increasevolume`, {\r\n            method: 'POST'\r\n        })\r\n        .then(res => (res.ok ? res : Promise.reject(res)))\r\n        .then(res => res.json())\r\n        .then(json_data => {\r\n            console.log(json_data.status);\r\n        })\r\n        .catch(e => console.log(e));\r\n    }\r\n\r\n    decreaseVolume = () => {\r\n        fetch(`/api/audio/decreasevolume`, {\r\n            method: 'POST'\r\n        })\r\n        .then(res => (res.ok ? res : Promise.reject(res)))\r\n        .then(res => res.json())\r\n        .then(json_data => {\r\n            console.log(json_data.status);\r\n        })\r\n        .catch(e => console.log(e));\r\n    }\r\n\r\n    componentDidUpdate(prev_props, prev_state) {\r\n        if (Object.keys(this.props.socketData).length > 0) {\r\n            if (prev_props.socketData.audio_data.track) {\r\n                if (this.state.track_hash !== this.props.socketData.audio_data.hash) {\r\n                    this.setState({\r\n                        audio_track: this.props.socketData.audio_data.track,\r\n                        status: this.props.socketData.audio_data.status,\r\n                        looping: this.props.socketData.audio_data.loop,\r\n                        volume: this.props.socketData.audio_data.volume,\r\n                        img_src: this.props.socketData.audio_data.img_uri_formatted,\r\n                        track_hash: this.props.socketData.audio_data.hash,\r\n                        duration: this.props.socketData.audio_data.duration_time,\r\n                        progress: this.props.socketData.audio_data.progress_time,\r\n                        progress_string: this.props.socketData.audio_data.progress_string,\r\n                        duration_string: this.props.socketData.audio_data.duration_string\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <ThemedCard>\r\n            <DetailsDiv>\r\n                    <ThemedCardContent>\r\n                        <Typography component=\"h5\" variant=\"h5\" noWrap={true}>\r\n                            {this.state.audio_track.name || \"No Track Available\"}\r\n                        </Typography>\r\n                        <Typography component=\"h5\" variant=\"subtitle1\" noWrap={true}>\r\n                            {this.state.status === \"Paused\" ? \"[PAUSED]\" : \"\"}\r\n                        </Typography>\r\n                    </ThemedCardContent>\r\n                    <ControlsDiv>\r\n                        <Tooltip title=\"Stop and Clear Queue\" aria-label=\"stop-tooltip\">\r\n                            <ThemedIconButton aria-label=\"stop\" onClick={this.stopTrack}>\r\n                                <StopIcon/>\r\n                            </ThemedIconButton>\r\n                        </Tooltip>\r\n                        <Tooltip title={`${this.state.status === \"Paused\" ? \"Play\" : \"Pause\"}`} aria-label=\"play-tooltip\">\r\n                            <ThemedIconButton aria-label=\"play/pause\" onClick={this.togglePause}>\r\n                                {\r\n                                    this.state.status === \"Paused\" ? <PlayArrowIcon/> : <PauseIcon/>\r\n                                }\r\n                            </ThemedIconButton>\r\n                        </Tooltip>\r\n                        <Tooltip title=\"Next Track\" aria-label=\"next-tooltip\">\r\n                            <ThemedIconButton aria-label=\"next\" onClick={this.nextTrack}>\r\n                                <SkipNextIcon />\r\n                            </ThemedIconButton>\r\n                        </Tooltip>\r\n                        <Tooltip title={`${this.state.looping ? \"Disable\" : \"Enable\"} Looping`} arial-label=\"loop-tooltip\">\r\n                            <ThemedIconButton aria-label=\"loop\" onClick={this.toggleLoop}>\r\n                                {\r\n                                    this.state.looping ?\r\n                                    <LoopIconActive/> : <LoopIconInactive/>\r\n                                }\r\n                            </ThemedIconButton>\r\n                        </Tooltip>    \r\n                        <Tooltip title=\"Replay Track\" aria-label=\"replay-tooltip\">\r\n                            <ThemedIconButton aria-label=\"replay\" onClick={this.replayTrack}>\r\n                                <ReplayIcon/>\r\n                            </ThemedIconButton>\r\n                        </Tooltip>\r\n                        <Tooltip title=\"Shuffle Queue\" aria-label=\"shuffle-tooltip\">\r\n                            <ThemedIconButton aria-label=\"shuffle\" onClick={this.shuffleQueue}>\r\n                                <ShuffleIcon/>\r\n                            </ThemedIconButton>\r\n                        </Tooltip>\r\n                    </ControlsDiv>\r\n                    <DetailsDiv>\r\n                        <Typography variant=\"subtitle2\">Volume: {this.state.volume}</Typography>\r\n                        <ControlsDiv>\r\n                        <Tooltip title=\"Decrease Volume\" aria-label=\"volume-down-tooltip\">\r\n                            <ThemedIconButton aria-label=\"volume-down\" onClick={this.decreaseVolume}>\r\n                                <VolumeDownIcon/>\r\n                            </ThemedIconButton>\r\n                        </Tooltip>\r\n                        <Tooltip title=\"Increase Volume\" aria-label=\"volume-up-tooltip\">\r\n                            <ThemedIconButton aria-label=\"volume-up\" onClick={this.increaseVolume}>\r\n                                <VolumeUpIcon/>\r\n                            </ThemedIconButton>\r\n                        </Tooltip>\r\n                        </ControlsDiv>\r\n                    </DetailsDiv>\r\n            </DetailsDiv>\r\n            <ThemedCardMedia\r\n                style = {{height: 0, paddingTop: '56%'}}\r\n                image={this.state.img_src || \"...\"}\r\n            />\r\n            <DetailsDiv display=\"flex\" alignItems=\"center\">\r\n                <Box minWidth={35}>\r\n                    <Typography variant=\"body2\">{this.state.duration >= 0 ? `${this.state.progress_string} - ${this.state.duration_string}` : ''}</Typography>\r\n                </Box>\r\n                <Tooltip title={this.state.duration >= 0 ? `${this.state.progress_string} - ${this.state.duration_string}` : \"Progress Bar\"} aria-label=\"progress-bar-tooltip\">\r\n                    <Box width=\"100%\" mr={1}>\r\n                        <LinearProgress variant=\"determinate\" color=\"secondary\" value={this.state.duration >= 0 ? `${this.state.progress/this.state.duration * 100}` : 0}/>\r\n                    </Box>\r\n                </Tooltip>\r\n            </DetailsDiv>\r\n        </ThemedCard>\r\n        );\r\n    }\r\n}","import React, {Fragment} from 'react';\r\nimport {List, ListItem, ListItemIcon, Paper, ListItemText, ListItemSecondaryAction, Typography, Grid, Divider} from '@material-ui/core';\r\nimport AudioTrackItem from './AudioTrackItem';\r\nimport styled from 'styled-components';\r\nimport AudioCurrentTrack from './AudioCurrentTrack';\r\n\r\nconst ThemedList = styled(List)`\r\n    background-color: ${({ theme }) => theme.contrast};\r\n    color: ${({ theme }) => theme.text};\r\n`;\r\nconst ThemedTypography = styled(Typography)`\r\n    color: ${({ theme }) => theme.text};\r\n`;\r\n\r\nexport default class AudioTrackList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            list_hash: \"\",\r\n            track_list: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (Object.keys(this.props.socketData).length > 0) {\r\n            if (this.props.socketData.audio_data.queue) {\r\n                this.setState({\r\n                    track_list: this.props.socketData.audio_data.queue,\r\n                    list_hash: this.props.socketData.audio_data.hash,\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prev_props, prev_state) {\r\n        if (Object.keys(this.props.socketData).length > 0) {\r\n            if (prev_props.socketData.audio_data) {\r\n                if (this.state.list_hash !== this.props.socketData.audio_data.hash) {\r\n                    this.setState({\r\n                        track_list: this.props.socketData.audio_data.queue,\r\n                        list_hash: this.props.socketData.audio_data.hash,\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Grid item xs={12}>\r\n                <ThemedList component={Paper}>\r\n                    <ListItem style={{display: 'flex', justifyContent: 'center'}}>\r\n                        <AudioCurrentTrack socketData={this.props.socketData}/>\r\n                    </ListItem>\r\n                    <ListItem>\r\n                        <ListItemIcon>\r\n                            <ThemedTypography noWrap={true}><b>#</b></ThemedTypography>\r\n                        </ListItemIcon>      \r\n                        <ListItemText\r\n                            primary={<ThemedTypography variant=\"body1\"><b>Track Name</b></ThemedTypography>}\r\n                            secondary={<ThemedTypography variant=\"caption\"><b>Track URL</b></ThemedTypography>}\r\n                        />\r\n                        <ListItemSecondaryAction>\r\n                            <ThemedTypography><b>Actions</b></ThemedTypography>\r\n                        </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                    <Divider/>\r\n                    {\r\n                        this.state.track_list.map((track, track_index) => (\r\n                            <Fragment>\r\n                                <AudioTrackItem indexText={track_index+\"\"} primaryText={track.name} secondaryText={track.alt_uri} useButtons={true} useIcon={true}/>\r\n                                {this.props.useDividers ? <Divider /> : \"\"}\r\n                            </Fragment>\r\n                        ))\r\n                    }\r\n                </ThemedList>\r\n            </Grid>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport styled from 'styled-components';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n\r\nconst ThemedCard = styled(Card)`\r\n    background-color: ${({ theme }) => theme.contrast};\r\n    color: ${({ theme }) => theme.text};\r\n    display: inline-block;\r\n    text-align: center;\r\n    width: 200px;\r\n    height: 50px;\r\n`;\r\n\r\nconst ThemedActionArea = styled(CardActionArea)`\r\n    height: 100%;\r\n    width: 100%;\r\n`;\r\n\r\nexport default class SoundBoardItem extends React.Component {\r\n\r\n    playClip = () => {\r\n        fetch(`/api/sound_board/play`, {\r\n            method: 'POST',\r\n            body: JSON.stringify({\"text\": `${this.props.clipName}`})\r\n        })\r\n        .then(res => (res.ok ? res : Promise.reject(res)))\r\n        .then(res => res.json())\r\n        .then(json_data => {\r\n            console.log(json_data.status);\r\n        })\r\n        .catch(e => console.log(e));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ThemedCard component={Paper}>\r\n                <Tooltip title={this.props.clipName}>\r\n                    <ThemedActionArea onClick={this.playClip}>\r\n                        <Typography variant=\"body1\" noWrap={true}>{this.props.clipName}</Typography>\r\n                    </ThemedActionArea>\r\n                </Tooltip>\r\n            </ThemedCard>\r\n        );\r\n    }\r\n}\r\n\r\n","import React, { Fragment } from 'react';\r\nimport SoundBoardItem from './SoundBoardItem';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport styled from 'styled-components';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Card from '@material-ui/core/Card';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n\r\nconst ThemedTypography = styled(Typography)`\r\n    color: ${({ theme }) => theme.text};\r\n`;\r\nconst ThemedCard = styled(Card)`\r\n    background-color: ${({ theme }) => theme.contrast};\r\n    color: ${({ theme }) => theme.text};\r\n    display: inline-block;\r\n    text-align: center;\r\n    width: 200px;\r\n    height: 50px;\r\n`;\r\nconst ThemedActionArea = styled(CardActionArea)`\r\n    height: 100%;\r\n    width: 100%;\r\n`;\r\n\r\nexport default class SoundBoardList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            clips: []\r\n        }\r\n    }\r\n\r\n    getSBClips = () => {\r\n        fetch(`/api/sound_board/clips`, {\r\n            method: 'GET'\r\n        })\r\n        .then(res => (res.ok ? res : Promise.reject(res)))\r\n        .then(res => res.json())\r\n        .then(json_data => {\r\n            this.setState({clips: json_data.data.clips})\r\n        })\r\n        .catch(e => console.log(e));\r\n    }\r\n\r\n    playRandomClip = () => {\r\n        fetch(`/api/sound_board/random`, {\r\n            method: 'POST'\r\n        })\r\n        .then(res => (res.ok ? res : Promise.reject(res)))\r\n        .then(res => res.json())\r\n        .then(json_data => {\r\n            console.log(json_data.status);\r\n        })\r\n        .catch(e => console.log(e));\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getSBClips();\r\n    }\r\n\r\n    render() {\r\n        let lastClipSection = \"Misc\";\r\n        return (\r\n            <div>\r\n                {\r\n                    <Fragment>\r\n                        <ThemedCard component={Paper}>\r\n                            <Tooltip title={\"Play Random Clip\"}>\r\n                                <ThemedActionArea onClick={this.playRandomClip}>\r\n                                    <Typography variant=\"body1\" noWrap={true}>{\"Random Clip\"}</Typography>\r\n                                </ThemedActionArea>\r\n                            </Tooltip>\r\n                        </ThemedCard>\r\n                        {\r\n                            this.state.clips.map((item, index) => (\r\n                            <Fragment key={`frag-${item}-${index}`}>\r\n                                {\r\n                                    item.charAt(0).toLowerCase() !== lastClipSection.charAt(0).toLowerCase() ? <div>\r\n                                        <br/>\r\n                                        {\r\n                                            <ThemedTypography variant=\"h5\">{lastClipSection = item.charAt(0).toLowerCase() !== item.charAt(0).toUpperCase() ? item.charAt(0).toUpperCase() : \"Misc\"}</ThemedTypography>\r\n                                        }\r\n                                        <hr/>\r\n                                    </div>: \"\"\r\n                                }\r\n                            \r\n                                <SoundBoardItem clipName={item} key={`${item}-${index}`}/>\r\n                            </Fragment>\r\n                            ))\r\n                        }\r\n                    </Fragment>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n}","import React from 'react';\r\nimport {AppBar, Tabs, Tab, Box, Typography, Toolbar, Grid} from '@material-ui/core';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst ThemedTabs = styled(Tabs)`\r\n    background-color: ${({ theme }) => theme.body};\r\n    color: ${({ theme }) => theme.text};\r\n`;\r\n\r\nconst ThemedToolbar = styled(Toolbar)`\r\n    background-color: ${({ theme }) => theme.body};\r\n    color: ${({ theme }) => theme.text};\r\n    display: flex;\r\n    justify-content: space-between;\r\n    *:focus {\r\n        outline: 0 !important;\r\n    }\r\n`;\r\n\r\nconst TabPanel = (props) => {\r\n    const { children, value, index, ...other } = props;\r\n    return (\r\n        <div\r\n        role=\"tabpanel\"\r\n        hidden={value !== index}\r\n        id={`simple-tabpanel-${index}`}\r\n        aria-labelledby={`simple-tab-${index}`}\r\n        {...other}\r\n        >\r\n        {value === index && (\r\n            <Box p={3}>\r\n            <Typography component={'span'}>{children}</Typography>\r\n            </Box>\r\n        )}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst tabProps = (index) => {\r\n    return {\r\n        id: `simple-tab-${index}`,\r\n        'aria-controls': `simple-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nclass TopNavBar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: 0,\r\n            title: \"JJMumbleBot Dashboard\"\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getBotName();\r\n    }\r\n\r\n    getBotName = () => {\r\n        fetch('/api/general/name', {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n              }\r\n        })\r\n        .then(res => (res.ok ? res : Promise.reject(res)))\r\n        .then(res => res.json())\r\n        .then(json_data => this.setState({title: `${json_data.data.name} Dashboard`}))\r\n        .catch(e => {\r\n            console.trace(e);\r\n            this.setState({title: 'JJMumbleBot Dashboard'});\r\n        });\r\n    };\r\n\r\n    handleChange(evt, newVal) {\r\n        this.setState({value: newVal});\r\n    }\r\n    //<img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n    render() {\r\n        return (\r\n            <div className=\"top-nav-bar\" key=\"top-nav-bar-key\">\r\n                <AppBar position=\"static\" key=\"app-bar-key\">\r\n                    <ThemedToolbar key=\"tool-bar-key\">\r\n                        <Typography key=\"app-bar-text-key\" variant=\"h6\">{this.state.title}</Typography>\r\n                        <ThemedTabs key=\"app-bar-tabs-key\" value={this.state.value} onChange={this.handleChange.bind(this)}>\r\n                            {\r\n                                this.props.tabs.map((item, index) => \r\n                                    <Tab key={`tab-${item.name}-${index}`} label={`${item.name}`} {...tabProps(index)} />\r\n                                )\r\n                            }\r\n                        </ThemedTabs>\r\n                        {this.props.themeToggle} \r\n                    </ThemedToolbar>\r\n                </AppBar>\r\n                {\r\n                    this.props.tabs.map((item, index) => (\r\n                        <TabPanel value={this.state.value} index={index} key={`${index}-panel`} hidden={this.state.value !== index}>\r\n                            <Grid container spacing={3}\r\n                                direction=\"row\"\r\n                                alignItems=\"flex-start\" key={`${index}-grid`}>\r\n                            {item.items.map(subitem => subitem)}\r\n                            </Grid>\r\n                        </TabPanel>\r\n                    ))\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TopNavBar;","import React, {useEffect, useState, useRef} from \"react\";\nimport { ThemeProvider } from \"styled-components\";\nimport { GlobalStyles } from \"./components/theme_selectors/GlobalStyles\";\nimport { lightTheme, darkTheme } from \"./components/theme_selectors/Themes\";\nimport { UseDarkMode } from \"./components/theme_selectors/UseDarkMode\";\nimport SetTitle from \"./components/set_title\";\nimport Toggle from \"./components/theme_selectors/ThemeToggler\";\nimport CommandFormGrid from './components/CommandInputGrid';\nimport CommandHistory from './components/CommandHistory';\nimport LatestCommand from './components/LatestCommand';\nimport OnlineUsers from './components/OnlineUsers';\nimport ReactJson from 'react-json-view';\nimport PluginsList from './components/plugins_list';\nimport AudioTrackList from './components/AudioTrackList';\nimport SoundBoardList from './components/SoundBoardList';\nimport TopNavBar from \"./components/nav_bar\";\nimport styled from 'styled-components';\nimport {Snackbar, IconButton} from '@material-ui/core';\nimport {Alert} from '@material-ui/lab';\nimport CachedIcon from '@material-ui/icons/Cached';\nimport './App.css';\nimport url from 'url';\n\n//let socket = new WebSocket(\"ws://192.168.1.200:7000/ws\");\n\n// localStorage.clear();\n\nconst ThemedJSONViewer = styled(ReactJson)`\n  background-color: ${({ theme }) => theme.body};\n  color: ${({ theme }) => theme.text};\n`;\nconst ThemedErrorAlert = styled(Alert)`\n  background-color: ${({ theme }) => theme.black};\n  color: ${({ theme }) => theme.white};\n`;\nconst ThemedIconAlert = styled(IconButton)`\n  color: ${({ theme }) => theme.white};\n`;\n\nfunction App() {\n  const webSocket = useRef(null);\n  const [connectionError, setConnectionError] = useState(false);\n  const [connectionErrorMsg, setConnectionErrorMsg] = useState(\"\");\n  const [socketData, setSocketData] = useState({});\n\n  const [theme, themeToggler] = UseDarkMode();\n  const lightThemeData = {\n    base00: 'rgba(0, 0, 0, 0)',\n    base01: 'rgb(245, 245, 245)',\n    base02: '#2e2e2e',\n    base03: '#93a1a1',\n    base04: 'rgba(0, 0, 0, 0.3)',\n    base05: '#586e75',\n    base06: '#073642',\n    base07: '#002b36',\n    base08: '#d33682',\n    base09: '#cb4b16',\n    base0A: '#dc322f',\n    base0B: '#859900',\n    base0C: '#6c71c4',\n    base0D: '#586e75',\n    base0E: '#2aa198',\n    base0F: '#268bd2'\n  }\n  const darkThemeData = {\n    base00: \"rgba (0, 0, 0, 0)\",\n    base01: \"#202020\",\n    base02: \"#c2c2c2\",\n    base03: \"#505050\",\n    base04: \"#b0b0b0\",\n    base05: \"#d0d0d0\",\n    base06: \"#e0e0e0\",\n    base07: \"#ffffff\",\n    base08: \"#eb008a\",\n    base09: \"#f29333\",\n    base0A: \"#f8ca12\",\n    base0B: \"#37b349\",\n    base0C: \"#00aabb\",\n    base0D: \"#0e5a94\",\n    base0E: \"#b31e8d\",\n    base0F: \"#7a2d00\"\n  }\n  const themeMode = theme === 'light' ? lightTheme : darkTheme;\n  const themeText = theme === 'light' ? 'Light Mode' : 'Dark Mode';\n  const themeToggle = <Toggle theme={theme} themeText={themeText} toggleTheme={themeToggler} />;\n\n  const getSocketData = () => {\n    webSocket.current.onmessage = (msg) => {\n      setSocketData(JSON.parse(msg.data));\n    };\n  };\n\n  useEffect(() => {\n    webSocket.current = new WebSocket(\n      url.format({\n        protocol: window.location.protocol === 'https:' ? 'wss' : 'ws',\n        hostname: window.location.hostname,\n        port: window.location.port || 7000,\n        pathname: '/ws',\n        slashes: true,\n      })\n    );\n    webSocket.current.onerror = () => {\n      setConnectionError(true);\n      setConnectionErrorMsg(`There was an error connecting to the web socket endpoint!`);\n    };\n  }, []);\n\n  useEffect(() => {\n    getSocketData();\n  }, [socketData]);\n\n  const reloadPage = () => {\n    window.location.reload(false);\n  }\n\n  return (\n    <ThemeProvider theme={themeMode}>\n      <SetTitle />\n      <GlobalStyles />\n      <Snackbar \n        anchorOrigin={{vertical: 'top', horizontal: 'center'}}\n        open={connectionError}>\n          <ThemedErrorAlert \n            severity=\"error\"\n            action={\n              <ThemedIconAlert component=\"span\" size=\"small\" onClick={reloadPage}>\n                <CachedIcon/>\n              </ThemedIconAlert>\n            }>\n            {connectionErrorMsg}\n          </ThemedErrorAlert>\n      </Snackbar>\n\n      <TopNavBar\n        themeToggle={themeToggle}\n      tabs={\n        [\n          {\n            \"name\": \"Commands\",\n            \"items\": [\n              <CommandFormGrid key=\"main-cmd-form-key\"/>, \n              <LatestCommand socketData={socketData} key=\"latest-cmd-key\"/>,\n              <CommandHistory socketData={socketData} key=\"cmd-history-key\"/>,\n              <OnlineUsers socketData={socketData} key=\"online-users-key\"/>,\n              <PluginsList key=\"plugins-list-key\" theme={theme === 'light' ? lightThemeData : darkThemeData}/>\n            ]\n          },\n          {\n            \"name\": \"Audio\",\n            \"items\": [\n              <AudioTrackList socketData={socketData} useDividers={true} key=\"audio-track-list-key\"/>\n            ]\n          },\n          {\n            \"name\": \"Sound Board\",\n            \"items\": [\n              <SoundBoardList key=\"sound-board-list-key\"/>\n            ]\n          },\n          {\n            \"name\": \"Debug\",\n            \"items\": [\n              <ThemedJSONViewer key=\"json-viewer\" src={socketData} iconStyle=\"square\" collapsed={2} displayDataTypes={false} \n                theme={theme === 'light' ? lightThemeData : darkThemeData}/>\n            ]\n          }\n        ]\n        }\n      />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { useEffect, useState } from 'react';\r\nexport const UseDarkMode = () => {\r\n    const [theme, setTheme] = useState('light');\r\n\r\n    const setMode = mode => {\r\n        window.localStorage.setItem('theme', mode)\r\n        setTheme(mode)\r\n    };\r\n\r\n    const themeToggler = () => {\r\n        theme === 'light' ? setMode('dark') : setMode('light')\r\n    };\r\n\r\n    useEffect(() => {\r\n        const localTheme = window.localStorage.getItem('theme');\r\n        localTheme && setTheme(localTheme)\r\n    }, []);\r\n    return [theme, themeToggler]\r\n};\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}