{"version":3,"sources":["components/theme_selectors/GlobalStyles.js","components/theme_selectors/Themes.js","components/set_title.js","components/theme_selectors/ThemeToggler.js","components/CommandInputGrid.js","components/CommandHistory.js","components/LatestCommand.js","components/NestedList.js","components/OnlineUsers.js","components/plugins_list.js","components/AudioTrackItem.js","components/AudioCurrentTrack.js","components/AudioTrackList.js","components/SoundBoardItem.js","components/SoundBoardList.js","components/nav_bar.js","App.js","components/theme_selectors/UseDarkMode.js","reportWebVitals.js","index.js"],"names":["GlobalStyles","createGlobalStyle","theme","body","text","lightTheme","accent_primary","accent_secondary","contrast","contrast2","toggleForeground","toggleBackground","black","white","darkTheme","SetTitle","getBotName","fetch","headers","then","res","ok","Promise","reject","json","json_data","document","title","data","name","catch","e","console","trace","this","React","Component","Toggle","toggleTheme","themeText","FormGroup","FormControlLabel","control","Switch","checked","onChange","label","ThemedTextField","styled","TextField","ThemedSubmitButton","Button","ThemedIconButton","IconButton","ThemedPaper","Paper","CommandFormGrid","props","refreshBotDetails","setState","botName","botCommandToken","command_token","log","updateCommandText","evt","commandText","target","value","cmdIsValid","sendCommand","preventDefault","sentCmd","state","method","JSON","stringify","status","length","charAt","cmdInvalid","invalidCmdText","bind","url","Grid","item","xs","elevation","onSubmit","autoComplete","InputLabelProps","className","variant","type","fullWidth","placeholder","error","InputProps","endAdornment","component","disabled","onClick","endIcon","style","width","height","RefreshButton","ThemedTable","Table","ThemedTableCell","TableCell","ThemedAlert","Alert","CommandHistory","getCommandHistory","useAlert","cmd_history","showAlert","alertMsg","alertSeverity","closeAlert","prev_props","prev_state","socketData","last_cmd_output","alert","onClose","severity","sm","Collapse","in","TableContainer","TableHead","TableRow","Typography","id","size","TableBody","map","index","scope","LatestCommand","last_cmd_type","last_cmd","Object","keys","Parser","ThemedTreeItem","TreeItem","NestedList","collapseIcon","expandIcon","users","items","nodeId","node_id","item_label","user","user_index","gutterBottom","noWrap","icon","bot_name","subitem","subitem_index","subchannels","channel_name","OnlineUsers","useStyles","makeStyles","root","flexGrow","maxWidth","refreshBotName","max_expand","Array","from","_","i","list_hash","list_items","classes","server_hierarchy","hierarchy","hash","TreeView","defaultExpanded","PluginsList","refreshPlugins","plugins","ThemedDeleteIcon","DeleteRoundedIcon","ThemedSkipIcon","SkipNextRoundedIcon","ThemedMusicIcon","MusicNoteRoundedIcon","ThemedTypography","AudioTrackItem","removeTrack","indexText","skipToTrack","ListItem","useIcon","ListItemIcon","ListItemText","primary","primaryText","secondary","secondaryText","href","rel","useButtons","ListItemSecondaryAction","Tooltip","aria-label","edge","ThemedCard","Card","DetailsDiv","div","ControlsDiv","ThemedCardMedia","CardMedia","ThemedCardContent","CardContent","LoopIconActive","LoopIcon","LoopIconInactive","AudioCurrentTrack","stopTrack","nextTrack","togglePause","toggleLoop","shuffleQueue","increaseVolume","decreaseVolume","audio_track","img_src","track_hash","volume","looping","audio_data","track","loop","img_uri_formatted","arial-label","paddingTop","image","ThemedList","List","AudioTrackList","track_list","queue","display","justifyContent","Divider","track_index","alt_uri","useDividers","ThemedActionArea","CardActionArea","SoundBoardItem","playClip","clipName","SoundBoardList","getSBClips","clips","playRandomClip","lastClipSection","toLowerCase","toUpperCase","ThemedTabs","Tabs","ThemedToolbar","Toolbar","TabPanel","children","other","role","hidden","aria-labelledby","Box","p","TopNavBar","newVal","AppBar","position","handleChange","tabs","Tab","tabProps","themeToggle","container","spacing","direction","alignItems","ThemedJSONViewer","ReactJson","ThemedErrorAlert","ThemedIconAlert","App","webSocket","useRef","useState","connectionError","setConnectionError","connectionErrorMsg","setConnectionErrorMsg","setSocketData","setTheme","setMode","mode","window","localStorage","setItem","useEffect","localTheme","getItem","UseDarkMode","themeToggler","themeMode","current","WebSocket","format","protocol","location","hostname","port","pathname","slashes","onerror","onmessage","msg","parse","Snackbar","anchorOrigin","vertical","horizontal","open","action","reload","src","iconStyle","collapsed","displayDataTypes","base00","base01","base02","base03","base04","base05","base06","base07","base08","base09","base0A","base0B","base0C","base0D","base0E","base0F","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.138693df.chunk.js","sourcesContent":["import { createGlobalStyle} from \"styled-components\"\r\nexport const GlobalStyles = createGlobalStyle`\r\n  body {\r\n    background: ${({ theme }) => theme.body};\r\n    color: ${({ theme }) => theme.text};\r\n    font-family: Tahoma, Helvetica, Arial, Roboto, sans-serif;\r\n    transition: all 0.25s ease;\r\n  }\r\n  `","export const lightTheme = {\r\n    body: '#FFF',\r\n    text: '#363537',\r\n    accent_primary: '#00c9bc',\r\n    accent_secondary: '#c9005e',\r\n    contrast: \"#fff\",\r\n    contrast2: \"#9F9F9F\",\r\n    toggleForeground: '#fff',\r\n    toggleBackground: '#363537',\r\n    black: \"#000\",\r\n    white: \"#fff\"\r\n}\r\nexport const darkTheme = {\r\n    body: '#363537',\r\n    text: '#FAFAFA',\r\n    accent_primary: '#00c9bc',\r\n    accent_secondary: '#c9005e',\r\n    contrast: \"#202021\",\r\n    contrast2: \"#000\",\r\n    toggleForeground: '#fff',\r\n    toggleBackground: '#363537',\r\n    black: \"#000\",\r\n    white: \"#fff\"\r\n}\r\n","import React from 'react';\r\n\r\nclass SetTitle extends React.Component {\r\n    componentDidMount() {\r\n        this.getBotName();\r\n    }\r\n\r\n    getBotName = () => {\r\n        fetch('/api/general/name', {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n              }\r\n        })\r\n        .then(res => (res.ok ? res : Promise.reject(res)))\r\n        .then(res => res.json())\r\n        .then(json_data => document.title = `${json_data.data.name} Dashboard`)\r\n        .catch(e => {\r\n            console.trace(e);\r\n            document.title = `JJMumbleBot Dashboard`;\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return(<div/>);\r\n    }\r\n}\r\n\r\nexport default SetTitle;","import React from 'react';\r\nimport { func, string } from 'prop-types';\r\nimport {Switch, FormGroup, FormControlLabel} from '@material-ui/core';\r\n\r\n\r\nconst Toggle = ({theme, themeText, toggleTheme }) => {\r\n\r\n    return (\r\n      <FormGroup>\r\n        <FormControlLabel control={<Switch\r\n            checked={theme === 'dark' ? true : false}\r\n            onChange={toggleTheme} \r\n            name=\"darkModeChecked\" \r\n          />} label=\"Dark Mode\">\r\n        </FormControlLabel>\r\n      </FormGroup>\r\n    );\r\n};\r\nToggle.propTypes = {\r\n    theme: string.isRequired,\r\n    themeText: string.isRequired,\r\n    toggleTheme: func.isRequired,\r\n}\r\nexport default Toggle;","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport KeyboardReturnIcon from '@material-ui/icons/KeyboardReturn'; \r\nimport {TextField, IconButton, Grid, Paper} from '@material-ui/core';\r\nimport styled from \"styled-components\"\r\n\r\n\r\nconst ThemedTextField = styled(TextField)`\r\n    & label {\r\n        color: ${({ theme }) => theme.text};\r\n    }\r\n    & input {\r\n        color: ${({ theme }) => theme.text};\r\n        width: 100%;\r\n    }\r\n`;\r\nconst ThemedSubmitButton = styled(Button)`\r\n    background-color: ${({ theme }) => theme.contrast};\r\n    color: ${({ theme }) => theme.text};\r\n    &:hover {\r\n        background-color: ${({ theme }) => theme.accent_secondary};\r\n        color: ${({ theme }) => theme.white};\r\n    }\r\n`;\r\nconst ThemedIconButton = styled(IconButton)`\r\n    color: ${({ theme }) => theme.text};\r\n    &:hover {\r\n        color: ${({ theme }) => theme.text};\r\n    }\r\n`;\r\n\r\nconst ThemedPaper = styled(Paper)`\r\n    display: 'block';\r\n    padding: 0.2em;\r\n    background-color: ${({ theme }) => theme.body};\r\n`;\r\n\r\n\r\nclass CommandFormGrid extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            botName: '',\r\n            botCommandToken: '',\r\n            commandText: '',\r\n            cmdInvalid: true,\r\n            invalidCmdText: '',\r\n            sentCmd: ''\r\n        }\r\n        this.updateCommandText = this.updateCommandText.bind(this);\r\n        this.sendCommand = this.sendCommand.bind(this);\r\n    }\r\n\r\n    refreshBotDetails = () => {\r\n        fetch('/api/general', {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n              }\r\n        })\r\n        .then(res => (res.ok ? res : Promise.reject(res)))\r\n        .then(res => res.json())\r\n        .then(json_data => {\r\n            this.setState({botName: json_data.data.name});\r\n            this.setState({botCommandToken: json_data.data.command_token});\r\n        }).catch(e => {\r\n            console.log(e);\r\n            this.setState({botName: 'N/A'});\r\n            this.setState({botCommandToken: '!'});\r\n        });\r\n    };\r\n\r\n    updateCommandText = (evt) => {\r\n        this.setState({commandText: evt.target.value})\r\n        if (this.cmdIsValid()) {\r\n            this.setState({cmdIsValid: true});\r\n        }\r\n        else {\r\n            this.setState({cmdIsValid: false});\r\n        }\r\n    }\r\n\r\n    sendCommand = (evt) => {\r\n        evt.preventDefault();\r\n        if (this.cmdIsValid()) {\r\n            this.setState({sentCmd: this.state.commandText});\r\n\r\n            fetch(`/api/command`, {\r\n                method: 'POST',\r\n                body: JSON.stringify({\"text\": this.state.commandText})\r\n            })\r\n            .then(res => (res.ok ? res : Promise.reject(res)))\r\n            .then(res => res.json())\r\n            .then(json_data => {\r\n                console.log(json_data.status);\r\n            })\r\n            .catch(e => console.log(e));\r\n            this.setState({commandText: ''});\r\n        }\r\n        else {\r\n            this.setState({commandText: ''});\r\n        }\r\n        this.setState({cmdIsValid: false});\r\n    }\r\n\r\n    cmdIsValid = () => {\r\n        if (this.state.commandText.length > 0 && this.state.commandText.charAt(0) === this.state.botCommandToken) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshBotDetails(this.props.url);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Grid item xs={12}>\r\n                <ThemedPaper elevation={3}>\r\n                <form onSubmit={this.sendCommand} autoComplete=\"off\">\r\n                    <ThemedTextField\r\n                        InputLabelProps={{className: \"label-field\"}}\r\n                        variant=\"outlined\"\r\n                        value={this.state.commandText}\r\n                        type=\"text\"\r\n                        fullWidth={true}\r\n                        onChange={this.updateCommandText}\r\n                        placeholder={`${this.state.botCommandToken}command ...`}\r\n                        label={(!this.cmdIsValid() && this.state.commandText.length > 0) ? `Invalid command! Format: ${this.state.botCommandToken}command ...` : `Send commands to ${this.state.botName} from here...`}\r\n                        error={this.state.commandText.charAt(0) !== this.state.botCommandToken && this.state.commandText.length > 0}\r\n                        InputProps={\r\n                            {endAdornment: \r\n                                this.props.type === 'compact' ? \r\n                                <ThemedIconButton component=\"span\"\r\n                                type=\"submit\"\r\n                                disabled={!this.cmdIsValid}\r\n                                onClick={this.sendCommand}>\r\n                                    <KeyboardReturnIcon/>\r\n                                </ThemedIconButton> :\r\n                                <ThemedSubmitButton component=\"span\"\r\n                                    endIcon={<KeyboardReturnIcon />}\r\n                                    type=\"submit\" \r\n                                    variant=\"contained\" \r\n                                    style={{width: '150px', height:'40px'}}\r\n                                    disabled={!this.cmdIsValid}\r\n                                    onClick={this.sendCommand}>\r\n                                    Send\r\n                                </ThemedSubmitButton>\r\n                            }\r\n                        }\r\n                    />                        \r\n                </form>\r\n                </ThemedPaper>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CommandFormGrid;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Collapse, Grid, Typography} from '@material-ui/core';\r\nimport LoopIcon from '@material-ui/icons/Loop';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport {Alert} from '@material-ui/lab';\r\n\r\n\r\nconst RefreshButton = styled(IconButton)`\r\n    background-color: rgb(0,0,0,0);\r\n    color: ${({ theme }) => theme.text};\r\n    &:hover {\r\n        background-color: ${({ theme }) => theme.accent_secondary};\r\n        color: ${({ theme }) => theme.white};\r\n    }\r\n`;\r\nconst ThemedTable = styled(Table)`\r\n    .tableHead {\r\n        background: ${({ theme }) => theme.contrast2};\r\n    }\r\n`;\r\nconst ThemedTableCell = styled(TableCell)`\r\n    background-color: ${({ theme }) => theme.contrast};\r\n    color: ${({ theme }) => theme.text};   \r\n`;\r\nconst ThemedAlert = styled(Alert)`\r\n    background-color: ${({ theme }) => theme.body};\r\n    color: ${({ theme }) => theme.text};\r\n`;\r\n\r\nclass CommandHistory extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showAlert: false,\r\n            alertMsg: \"\",\r\n            alertSeverity: \"\",\r\n            cmd_history: []\r\n        };\r\n    }\r\n\r\n    getCommandHistory = (useAlert) => {\r\n        fetch('/api/cmdhistory', {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        .then(res => (res.ok ? res : Promise.reject(res)))\r\n        .then(res => res.json())\r\n        .then(json_data => {\r\n            this.setState({cmd_history: json_data.data.cmd_history});\r\n            if (useAlert) {\r\n                this.setState({showAlert: true, alertMsg: \"Successfully refreshed the command history list!\", alertSeverity: \"success\"});\r\n            }\r\n        }).catch(e => {\r\n            console.log(e);\r\n            this.setState({cmd_history: []});\r\n            this.setState({showAlert: true, alertMsg: \"Error retrieving the command history list!\", alertSeverity: \"error\"});\r\n        });\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.getCommandHistory(false);\r\n    }\r\n\r\n    componentDidUpdate(prev_props, prev_state) {\r\n        if (prev_props.socketData.last_cmd_output !== this.props.socketData.last_cmd_output) {\r\n            this.getCommandHistory(false);\r\n        }\r\n    }\r\n\r\n    closeAlert = () => {\r\n        this.setState({showAlert: false, alertMsg: \"\", alertSeverity: \"\"});\r\n    }\r\n\r\n    render() {\r\n        let alert = this.state.showAlert ? <ThemedAlert onClose={this.closeAlert} severity={this.state.alertSeverity}>{this.state.alertMsg}</ThemedAlert> : \"\";\r\n        return (\r\n            <Grid item xs={12} sm={4}>\r\n                <Collapse in={this.state.showAlert}>\r\n                    {alert}\r\n                </Collapse>\r\n                <TableContainer component=\"span\">\r\n                    <Paper elevation={3}>\r\n                    <ThemedTable className=\"cmdTable\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <ThemedTableCell className=\"tableHead\">\r\n                                    <Typography variant=\"body2\"><b>Command History</b>\r\n                                    <RefreshButton \r\n                                    id=\"refreshCmdHistoryButton\" \r\n                                    onClick={() => this.getCommandHistory(true)}\r\n                                    size=\"small\"\r\n                                    >\r\n                                        <LoopIcon />\r\n                                    </RefreshButton>\r\n                                    </Typography>\r\n                                </ThemedTableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody className=\"tableBody\">\r\n                            {\r\n                                this.state.cmd_history.map((item, index) => \r\n                                (\r\n                                    <TableRow key={item+index}>\r\n                                        <ThemedTableCell component=\"td\" scope=\"row\" className=\"cmdHistoryCmdCell\">\r\n                                        {item}\r\n                                        </ThemedTableCell>\r\n                                    </TableRow>\r\n                                ))\r\n                            }\r\n                        </TableBody>\r\n                    </ThemedTable>\r\n                    </Paper>\r\n                </TableContainer>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CommandHistory;","import React from 'react';\r\nimport {Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Grid, Typography} from '@material-ui/core';\r\nimport styled from 'styled-components';\r\nimport Parser from 'html-react-parser';\r\n\r\n\r\nconst ThemedTable = styled(Table)`\r\n    .tableHead {\r\n        background: ${({ theme }) => theme.contrast2};\r\n    }\r\n    .outTableBody {\r\n        height: 100px;\r\n        overflow: hide;\r\n    }\r\n`;\r\nconst ThemedTableCell = styled(TableCell)`\r\n    background-color: ${({ theme }) => theme.contrast};\r\n    color: ${({ theme }) => theme.text};   \r\n`;\r\n\r\nclass LatestCommand extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            last_cmd_type: \"\",\r\n            last_cmd: \"\"\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (Object.keys(this.props.socketData).length !== 0) {\r\n            this.setState({\r\n                last_cmd: this.props.socketData.last_cmd_output,\r\n                last_cmd_type: this.props.socketData.last_cmd_type,\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prev_props, prev_state) {\r\n        if (prev_props.socketData.last_cmd_output !== this.props.socketData.last_cmd_output) {\r\n            this.setState({\r\n                last_cmd: this.props.socketData.last_cmd_output,\r\n                last_cmd_type: this.props.socketData.last_cmd_type,\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Grid item xs={12} sm={4}>\r\n                <TableContainer component=\"span\">\r\n                    <Paper elevation={3}>\r\n                    <ThemedTable className=\"cmdTable\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <ThemedTableCell className=\"tableHead\">\r\n                                    <Typography variant=\"body2\"><b>Latest Command Output {this.state.last_cmd_type}</b></Typography>\r\n                                </ThemedTableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody className=\"tableBody\">\r\n                            <TableRow>\r\n                                <ThemedTableCell className=\"recentCmdCell\">\r\n                                    {Parser(this.state.last_cmd)}\r\n                                </ThemedTableCell>\r\n                            </TableRow>\r\n                        </TableBody>\r\n                    </ThemedTable>\r\n                    </Paper>\r\n                </TableContainer>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LatestCommand;","import React from 'react';\r\nimport ExpandMoreRoundedIcon from '@material-ui/icons/ExpandMoreRounded';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport TreeItem from '@material-ui/lab/TreeItem';\r\nimport {Typography} from '@material-ui/core';\r\nimport AccountBoxRoundedIcon from '@material-ui/icons/AccountBoxRounded';\r\nimport DesktopWindowsRoundedIcon from '@material-ui/icons/DesktopWindowsRounded';\r\nimport RemoveRoundedIcon from '@material-ui/icons/RemoveRounded';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst ThemedTreeItem = styled(TreeItem)`\r\n    background-color: ${({ theme }) => theme.contrast};\r\n    color: ${({ theme }) => theme.text};\r\n    user-select: none;\r\n`;\r\n\r\nexport default class NestedList extends React.Component {\r\n    render() {\r\n        let collapseIcon = <ExpandMoreRoundedIcon />;\r\n        let expandIcon = <ChevronRightIcon/>;\r\n        if (this.props.users && this.props.items) {\r\n            expandIcon = this.props.users.length > 0 || this.props.items.length > 0 ? <ChevronRightIcon /> : <RemoveRoundedIcon/>;\r\n            collapseIcon = this.props.users.length > 0 || this.props.items.length > 0 ? <ExpandMoreRoundedIcon /> : <RemoveRoundedIcon/>;\r\n        }\r\n        return (\r\n                <ThemedTreeItem key={`${this.props.node_id}-key`} nodeId={this.props.node_id+\"\"} label={this.props.item_label} expandIcon={expandIcon} collapseIcon={collapseIcon}>\r\n                    {\r\n                        this.props.users ?\r\n                        this.props.users.map((user, user_index) => (\r\n                            <ThemedTreeItem key={`${this.props.node_id+user_index}-key`} nodeId={this.props.node_id+user_index+\"\"} label={<Typography variant=\"subtitle2\" gutterBottom={true} noWrap>{user}</Typography>} icon={this.props.bot_name === user ? <DesktopWindowsRoundedIcon/> : <AccountBoxRoundedIcon/>}/>\r\n                        )) : \"\"\r\n                    }\r\n                    { \r\n                        this.props.items.map((subitem, subitem_index) => (\r\n                            <NestedList \r\n                                key={`${(subitem_index+this.props.node_id+1)}-key`}\r\n                                node_id={(subitem_index+this.props.node_id+1) + \"\"} \r\n                                items={subitem.subchannels}\r\n                                users={subitem.users}\r\n                                bot_name={this.props.bot_name}\r\n                                item_label={<Typography variant=\"body2\" gutterBottom={true} noWrap>{subitem.channel_name}</Typography>}>\r\n                            </NestedList>\r\n                        ))\r\n                    }\r\n                </ThemedTreeItem>\r\n        );\r\n    }\r\n\r\n}","import React from 'react';\r\nimport {Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Grid, Typography, Paper} from '@material-ui/core';\r\nimport AccountTreeRoundedIcon from '@material-ui/icons/AccountTreeRounded';\r\nimport TreeView from '@material-ui/lab/TreeView';\r\nimport styled from 'styled-components';\r\nimport NestedList from './NestedList.js';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst ThemedTable = styled(Table)`\r\n    background: ${({ theme }) => theme.contrast};\r\n    padding: 5em;\r\n    .tableHead {\r\n        background: ${({ theme }) => theme.contrast2};\r\n    }\r\n`;\r\nconst ThemedTableCell = styled(TableCell)`\r\n    background-color: ${({ theme }) => theme.contrast};\r\n    color: ${({ theme }) => theme.text};   \r\n`;\r\n\r\n\r\nclass OnlineUsers extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.max_expand = Array.from({length: 256}, (_, i) => i+1+\"\")\r\n        this.state = {\r\n            botName: \"\",\r\n            list_hash: \"\",\r\n            list_items: []\r\n        };\r\n        this.classes = this.useStyles()\r\n    }\r\n\r\n    useStyles = () => makeStyles({\r\n        root: {\r\n          height: 500,\r\n          flexGrow: 1,\r\n          maxWidth: 400,\r\n        },\r\n      });\r\n\r\n    refreshBotName = () => {\r\n        fetch('/api/general/name', {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n              }\r\n        })\r\n        .then(res => (res.ok ? res : Promise.reject(res)))\r\n        .then(res => res.json())\r\n        .then(json_data => {\r\n            this.setState({botName: json_data.data.name});\r\n        }).catch(e => {\r\n            console.log(e);\r\n            this.setState({botName: 'N/A'});\r\n        });\r\n    };\r\n\r\n    componentDidMount() {\r\n        if (Object.keys(this.props.socketData).length > 0) {\r\n            this.setState({\r\n                list_items: this.props.socketData.server_hierarchy.hierarchy,\r\n                list_hash: this.props.socketData.server_hierarchy.hash\r\n            })\r\n        }\r\n        this.refreshBotName();\r\n    }\r\n\r\n    componentDidUpdate(prev_props, prev_state) {\r\n        if (Object.keys(this.props.socketData).length > 0) {\r\n            if (prev_props.socketData.server_hierarchy) {\r\n                if (this.state.list_hash !== this.props.socketData.server_hierarchy.hash) {\r\n                    this.setState({\r\n                        list_items: this.props.socketData.server_hierarchy.hierarchy,\r\n                        list_hash: this.props.socketData.server_hierarchy.hash\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Grid item xs={12} sm={4}>\r\n                <TableContainer component=\"span\">\r\n                    <Paper elevation={3}>\r\n                    <ThemedTable className=\"cmdTable\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <ThemedTableCell className=\"tableHead\">\r\n                                    <Typography variant=\"body2\"><b>Channels</b> <AccountTreeRoundedIcon/></Typography>\r\n                                </ThemedTableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody className=\"tableBody\">\r\n                            <TreeView\r\n                                defaultExpanded={this.max_expand}>\r\n                                    <NestedList\r\n                                    key=\"online-users-hierarchy-key\"\r\n                                    bot_name={this.state.botName}\r\n                                    items={this.state.list_items} \r\n                                    item_label={<Typography variant=\"body2\" gutterBottom={true} noWrap>All Channels</Typography>}\r\n                                    node_id={1}/>\r\n                            </TreeView>\r\n                        </TableBody>\r\n                    </ThemedTable>\r\n                    </Paper>\r\n                </TableContainer>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nexport default OnlineUsers;","import React from 'react';\r\nimport styled from \"styled-components\"\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport LoopIcon from '@material-ui/icons/Loop';\r\nimport {Alert} from '@material-ui/lab';\r\nimport {Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Collapse, Grid} from '@material-ui/core';\r\n\r\n\r\nconst RefreshButton = styled(IconButton)`\r\n    background-color: rgb(0,0,0,0);\r\n    color: ${({ theme }) => theme.text};\r\n    &:hover {\r\n        background-color: ${({ theme }) => theme.accent_secondary};\r\n        color: ${({ theme }) => theme.white};\r\n    }\r\n`;\r\n\r\nconst ThemedAlert = styled(Alert)`\r\n    background-color: ${({ theme }) => theme.body};\r\n    color: ${({ theme }) => theme.text};\r\n`;\r\n\r\nconst ThemedTable = styled(Table)`\r\n    background-color: ${({ theme }) => theme.body};\r\n    color: ${({ theme }) => theme.text};\r\n    th {\r\n        background: ${({ theme }) => theme.contrast2};\r\n    }\r\n`;\r\nconst ThemedTableCell = styled(TableCell)`\r\n    background-color: ${({ theme }) => theme.contrast};\r\n    color: ${({ theme }) => theme.text};\r\n`;\r\n\r\nclass PluginsList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showAlert: false,\r\n            alertMsg: \"\",\r\n            alertSeverity: \"\",\r\n            items: []\r\n        }\r\n    }\r\n\r\n    refreshPlugins = (url, useAlert) => {\r\n        fetch(url, {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n              }\r\n        })\r\n        .then(res => (res.ok ? res : Promise.reject(res)))\r\n        .then(res => res.json())\r\n        .then(json_data => {\r\n            this.setState({items: json_data.data.plugins});\r\n            if (useAlert) {\r\n                this.setState({showAlert: true, alertMsg: \"Successfully refreshed the plugins list!\", alertSeverity: \"success\"});\r\n            }\r\n        }).catch(e => {\r\n            console.log(e);\r\n            this.setState({showAlert: true, alertMsg: \"Error retrieving the plugins list!\", alertSeverity: \"error\"});\r\n        });\r\n    };\r\n\r\n    closeAlert = () => {\r\n        this.setState({showAlert: false, alertMsg: \"\", alertSeverity: \"\"});\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshPlugins('/api/plugins', false);\r\n    }\r\n\r\n    render() {\r\n        let alert = this.state.showAlert ? <ThemedAlert onClose={this.closeAlert} severity={this.state.alertSeverity}>{this.state.alertMsg}</ThemedAlert> : \"\";\r\n        return (\r\n            <Grid item xs={12}>\r\n                <Collapse in={this.state.showAlert}>\r\n                    {alert}\r\n                </Collapse>\r\n                <TableContainer component={Paper}>\r\n                    <ThemedTable>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <ThemedTableCell component=\"th\">\r\n                                    <b>Active Plugins:</b>  \r\n                                    <RefreshButton \r\n                                    id=\"refreshButton\" \r\n                                    onClick={() => this.refreshPlugins('/api/plugins', true)}\r\n                                    size=\"small\"\r\n                                    >\r\n                                        <LoopIcon />\r\n                                    </RefreshButton>\r\n                                </ThemedTableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {\r\n                                this.state.items.map(item => \r\n                                (\r\n                                    <TableRow key={item}>\r\n                                        <ThemedTableCell component=\"td\" scope=\"row\">\r\n                                        {item}\r\n                                        </ThemedTableCell>\r\n                                    </TableRow>\r\n                                ))\r\n                            }\r\n                        </TableBody>\r\n                    </ThemedTable>\r\n                </TableContainer>\r\n            </Grid>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nexport default PluginsList;","import React from 'react';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport MusicNoteRoundedIcon from '@material-ui/icons/MusicNoteRounded';\r\nimport DeleteRoundedIcon from '@material-ui/icons/DeleteRounded';\r\nimport SkipNextRoundedIcon from '@material-ui/icons/SkipNextRounded';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst ThemedDeleteIcon = styled(DeleteRoundedIcon)`\r\n    color: ${({ theme }) => theme.accent_secondary};\r\n`;\r\nconst ThemedSkipIcon = styled(SkipNextRoundedIcon)`\r\n    color: ${({ theme }) => theme.text};\r\n`;\r\nconst ThemedMusicIcon = styled(MusicNoteRoundedIcon)`\r\n    color: ${({ theme }) => theme.text};\r\n`;\r\nconst ThemedTypography = styled(Typography)`\r\n    color: ${({ theme }) => theme.text};\r\n`;\r\n\r\nexport default class AudioTrackItem extends React.Component {\r\n    removeTrack = () => {\r\n        fetch(`/api/removetrack`, {\r\n            method: 'POST',\r\n            body: JSON.stringify({\"text\": `${this.props.indexText}`})\r\n        })\r\n        .then(res => (res.ok ? res : Promise.reject(res)))\r\n        .then(res => res.json())\r\n        .then(json_data => {\r\n            console.log(json_data.status);\r\n        })\r\n        .catch(e => console.log(e));\r\n    }\r\n\r\n    skipToTrack = () => {\r\n        fetch(`/api/skipto`, {\r\n            method: 'POST',\r\n            body: JSON.stringify({\"text\": `${this.props.indexText}`})\r\n        })\r\n        .then(res => (res.ok ? res : Promise.reject(res)))\r\n        .then(res => res.json())\r\n        .then(json_data => {\r\n            console.log(json_data.status);\r\n        })\r\n        .catch(e => console.log(e));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ListItem>\r\n                {\r\n                    this.props.useIcon ? \r\n                    <ListItemIcon>\r\n                        <ThemedMusicIcon/>\r\n                        {this.props.indexText ? <ThemedTypography noWrap={true}><b>{this.props.indexText}</b></ThemedTypography> : \"\"}\r\n                    </ListItemIcon> : \"\"\r\n                }\r\n                <ListItemText\r\n                    primary={this.props.primaryText ? <ThemedTypography variant=\"body1\" noWrap={true}>{this.props.primaryText}</ThemedTypography> : 'N/A'}\r\n                    secondary={this.props.secondaryText ? <ThemedTypography variant=\"caption\" noWrap={true}><a href={`${this.props.secondaryText}`} target=\"_blank\" rel=\"noopener noreferrer\">{this.props.secondaryText}</a></ThemedTypography> : null}\r\n                />                \r\n                {\r\n                    this.props.useButtons ?\r\n                    <ListItemSecondaryAction>\r\n                        <Tooltip title=\"Remove Track\" aria-label=\"delete-track-tooltip\">\r\n                            <IconButton edge=\"end\" aria-label=\"delete-track\" onClick={this.removeTrack}>\r\n                                <ThemedDeleteIcon />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        <Tooltip title=\"Skip To Track\" aria-label=\"skip-track-tooltip\">\r\n                            <IconButton edge=\"end\" aria-label=\"skip-track\" onClick={this.skipToTrack}>\r\n                                <ThemedSkipIcon />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </ListItemSecondaryAction> : \"\"            \r\n                }\r\n            </ListItem>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport StopIcon from '@material-ui/icons/Stop';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\r\nimport LoopIcon from '@material-ui/icons/Loop';\r\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\r\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst ThemedCard = styled(Card)`\r\n    background-color: ${({ theme }) => theme.contrast};\r\n    color: ${({ theme }) => theme.text};\r\n    display: block;\r\n    width: 500px;\r\n`;\r\nconst ThemedIconButton = styled(IconButton)`\r\n    color: ${({ theme }) => theme.text};\r\n`;\r\nconst DetailsDiv = styled.div`\r\n    display: block;\r\n    text-align: center;\r\n`;\r\nconst ControlsDiv = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    paddingLeft: 1em;\r\n    paddingBottom: 1em;\r\n`;\r\nconst ThemedCardMedia = styled(CardMedia)`\r\n    \r\n`;\r\nconst ThemedCardContent = styled(CardContent)`\r\n    flex: 1 0 auto;\r\n`;\r\nconst LoopIconActive = styled(LoopIcon)`\r\n    color: ${({ theme }) => theme.accent_secondary};\r\n`;\r\nconst LoopIconInactive = styled(LoopIcon)`\r\n    color: ${({ theme }) => theme.text};\r\n`;\r\n\r\nexport default class AudioCurrentTrack extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            audio_track: {},\r\n            img_src: \"\",\r\n            track_hash: \"\",\r\n            status: \"\",\r\n            volume: 0,\r\n            looping: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (Object.keys(this.props.socketData).length > 0) {\r\n            if (this.props.socketData.audio_data) {\r\n                this.setState({\r\n                    audio_track: this.props.socketData.audio_data.track,\r\n                    volume: this.props.socketData.audio_data.volume,\r\n                    status: this.props.socketData.audio_data.status,\r\n                    looping: this.props.socketData.audio_data.loop,\r\n                    img_src: this.props.socketData.audio_data.img_uri_formatted,\r\n                    track_hash: this.props.socketData.audio_data.hash\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    stopTrack = () => {\r\n        fetch(`/api/stop`, {\r\n            method: 'POST'\r\n        })\r\n        .then(res => (res.ok ? res : Promise.reject(res)))\r\n        .then(res => res.json())\r\n        .then(json_data => {\r\n            console.log(json_data.status);\r\n        })\r\n        .catch(e => console.log(e));\r\n    }\r\n\r\n    nextTrack = () => {\r\n        fetch(`/api/nexttrack`, {\r\n            method: 'POST'\r\n        })\r\n        .then(res => (res.ok ? res : Promise.reject(res)))\r\n        .then(res => res.json())\r\n        .then(json_data => {\r\n            console.log(json_data.status);\r\n        })\r\n        .catch(e => console.log(e));\r\n    }\r\n\r\n    togglePause = () => {\r\n        if (this.state.status === \"Paused\") { \r\n            fetch(`/api/resume`, {\r\n                method: 'POST'\r\n            })\r\n            .then(res => (res.ok ? res : Promise.reject(res)))\r\n            .then(res => res.json())\r\n            .then(json_data => {\r\n                console.log(json_data.status);\r\n            })\r\n            .catch(e => console.log(e));\r\n        }\r\n        else if (this.state.status === \"Playing\") {\r\n            fetch(`/api/pause`, {\r\n                method: 'POST'\r\n            })\r\n            .then(res => (res.ok ? res : Promise.reject(res)))\r\n            .then(res => res.json())\r\n            .then(json_data => {\r\n                console.log(json_data.status);\r\n            })\r\n            .catch(e => console.log(e));\r\n        }\r\n    }\r\n\r\n    toggleLoop = () => {\r\n        fetch(`/api/loop`, {\r\n            method: 'POST'\r\n        })\r\n        .then(res => (res.ok ? res : Promise.reject(res)))\r\n        .then(res => res.json())\r\n        .then(json_data => {\r\n            console.log(json_data.status);\r\n        })\r\n        .catch(e => console.log(e));\r\n    }\r\n\r\n    shuffleQueue = () => {\r\n        fetch(`/api/shuffle`, {\r\n            method: 'POST'\r\n        })\r\n        .then(res => (res.ok ? res : Promise.reject(res)))\r\n        .then(res => res.json())\r\n        .then(json_data => {\r\n            console.log(json_data.status);\r\n        })\r\n        .catch(e => console.log(e));\r\n    }\r\n\r\n    increaseVolume = () => {\r\n        fetch(`/api/increasevolume`, {\r\n            method: 'POST'\r\n        })\r\n        .then(res => (res.ok ? res : Promise.reject(res)))\r\n        .then(res => res.json())\r\n        .then(json_data => {\r\n            console.log(json_data.status);\r\n        })\r\n        .catch(e => console.log(e));\r\n    }\r\n\r\n    decreaseVolume = () => {\r\n        fetch(`/api/decreasevolume`, {\r\n            method: 'POST'\r\n        })\r\n        .then(res => (res.ok ? res : Promise.reject(res)))\r\n        .then(res => res.json())\r\n        .then(json_data => {\r\n            console.log(json_data.status);\r\n        })\r\n        .catch(e => console.log(e));\r\n    }\r\n\r\n    componentDidUpdate(prev_props, prev_state) {\r\n        if (Object.keys(this.props.socketData).length > 0) {\r\n            if (prev_props.socketData.audio_data.track) {\r\n                if (this.state.track_hash !== this.props.socketData.audio_data.hash) {\r\n                    this.setState({\r\n                        audio_track: this.props.socketData.audio_data.track,\r\n                        status: this.props.socketData.audio_data.status,\r\n                        looping: this.props.socketData.audio_data.loop,\r\n                        volume: this.props.socketData.audio_data.volume,\r\n                        img_src: this.props.socketData.audio_data.img_uri_formatted,\r\n                        track_hash: this.props.socketData.audio_data.hash\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <ThemedCard>\r\n            <DetailsDiv>\r\n                    <ThemedCardContent>\r\n                        <Typography component=\"h5\" variant=\"h5\" noWrap={true}>\r\n                            {this.state.audio_track.name || \"No Track Available\"}\r\n                        </Typography>\r\n                        <Typography component=\"h5\" variant=\"subtitle1\" noWrap={true}>\r\n                            {this.state.status === \"Paused\" ? \"[PAUSED]\" : \"\"}\r\n                        </Typography>\r\n                    </ThemedCardContent>\r\n                    <ControlsDiv>\r\n                        <Tooltip title=\"Stop and Clear Queue\" aria-label=\"stop-tooltip\">\r\n                            <ThemedIconButton aria-label=\"stop\" onClick={this.stopTrack}>\r\n                                <StopIcon/>\r\n                            </ThemedIconButton>\r\n                        </Tooltip>\r\n                        <Tooltip title={`${this.state.status === \"Paused\" ? \"Play\" : \"Pause\"}`} aria-label=\"play-tooltip\">\r\n                            <ThemedIconButton aria-label=\"play/pause\" onClick={this.togglePause}>\r\n                                {\r\n                                    this.state.status === \"Paused\" ? <PlayArrowIcon/> : <PauseIcon/>\r\n                                }\r\n                            </ThemedIconButton>\r\n                        </Tooltip>\r\n                        <Tooltip title=\"Next Track\" aria-label=\"next-tooltip\">\r\n                            <ThemedIconButton aria-label=\"next\" onClick={this.nextTrack}>\r\n                                <SkipNextIcon />\r\n                            </ThemedIconButton>\r\n                        </Tooltip>\r\n                        <Tooltip title={`${this.state.looping ? \"Disable\" : \"Enable\"} Looping`} arial-label=\"loop-tooltip\">\r\n                            <ThemedIconButton aria-label=\"loop\" onClick={this.toggleLoop}>\r\n                                {\r\n                                    this.state.looping ?\r\n                                    <LoopIconActive/> : <LoopIconInactive/>\r\n                                }\r\n                            </ThemedIconButton>\r\n                        </Tooltip>\r\n                        <Tooltip title=\"Shuffle Queue\" aria-label=\"shuffle-tooltip\">\r\n                            <ThemedIconButton aria-label=\"shuffle\" onClick={this.shuffleQueue}>\r\n                                <ShuffleIcon/>\r\n                            </ThemedIconButton>\r\n                        </Tooltip>\r\n                    </ControlsDiv>\r\n                    <DetailsDiv>\r\n                        <Typography variant=\"subtitle2\">Volume: {this.state.volume}</Typography>\r\n                        <ControlsDiv>\r\n                        <Tooltip title=\"Decrease Volume\" aria-label=\"volume-down-tooltip\">\r\n                            <ThemedIconButton aria-label=\"volume-down\" onClick={this.decreaseVolume}>\r\n                                <VolumeDownIcon/>\r\n                            </ThemedIconButton>\r\n                        </Tooltip>\r\n                        <Tooltip title=\"Increase Volume\" aria-label=\"volume-up-tooltip\">\r\n                            <ThemedIconButton aria-label=\"volume-up\" onClick={this.increaseVolume}>\r\n                                <VolumeUpIcon/>\r\n                            </ThemedIconButton>\r\n                        </Tooltip>\r\n                        </ControlsDiv>\r\n                    </DetailsDiv>\r\n            </DetailsDiv>\r\n            <ThemedCardMedia\r\n                style = {{height: 0, paddingTop: '56%'}}\r\n                image={this.state.img_src || \"...\"}\r\n            />\r\n        </ThemedCard>\r\n        );\r\n    }\r\n}","import React, {Fragment} from 'react';\r\nimport {List, ListItem, ListItemIcon, Paper, ListItemText, ListItemSecondaryAction, Typography, Grid, Divider} from '@material-ui/core';\r\nimport AudioTrackItem from './AudioTrackItem';\r\nimport styled from 'styled-components';\r\nimport AudioCurrentTrack from './AudioCurrentTrack';\r\n\r\nconst ThemedList = styled(List)`\r\n    background-color: ${({ theme }) => theme.contrast};\r\n    color: ${({ theme }) => theme.text};\r\n`;\r\nconst ThemedTypography = styled(Typography)`\r\n    color: ${({ theme }) => theme.text};\r\n`;\r\n\r\nexport default class AudioTrackList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            list_hash: \"\",\r\n            track_list: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (Object.keys(this.props.socketData).length > 0) {\r\n            if (this.props.socketData.audio_data.queue) {\r\n                this.setState({\r\n                    track_list: this.props.socketData.audio_data.queue,\r\n                    list_hash: this.props.socketData.audio_data.hash,\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prev_props, prev_state) {\r\n        if (Object.keys(this.props.socketData).length > 0) {\r\n            if (prev_props.socketData.audio_data) {\r\n                if (this.state.list_hash !== this.props.socketData.audio_data.hash) {\r\n                    this.setState({\r\n                        track_list: this.props.socketData.audio_data.queue,\r\n                        list_hash: this.props.socketData.audio_data.hash,\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Grid item xs={12}>\r\n                <ThemedList component={Paper}>\r\n                    <ListItem style={{display: 'flex', justifyContent: 'center'}}>\r\n                        <AudioCurrentTrack socketData={this.props.socketData}/>\r\n                    </ListItem>\r\n                    <ListItem>\r\n                        <ListItemIcon>\r\n                            <ThemedTypography noWrap={true}><b>#</b></ThemedTypography>\r\n                        </ListItemIcon>      \r\n                        <ListItemText\r\n                            primary={<ThemedTypography variant=\"body1\"><b>Track Name</b></ThemedTypography>}\r\n                            secondary={<ThemedTypography variant=\"caption\"><b>Track URL</b></ThemedTypography>}\r\n                        />\r\n                        <ListItemSecondaryAction>\r\n                            <ThemedTypography><b>Actions</b></ThemedTypography>\r\n                        </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                    <Divider/>\r\n                    {\r\n                        this.state.track_list.map((track, track_index) => (\r\n                            <Fragment>\r\n                                <AudioTrackItem indexText={track_index+\"\"} primaryText={track.name} secondaryText={track.alt_uri} useButtons={true} useIcon={true}/>\r\n                                {this.props.useDividers ? <Divider /> : \"\"}\r\n                            </Fragment>\r\n                        ))\r\n                    }\r\n                </ThemedList>\r\n            </Grid>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport styled from 'styled-components';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n\r\nconst ThemedCard = styled(Card)`\r\n    background-color: ${({ theme }) => theme.contrast};\r\n    color: ${({ theme }) => theme.text};\r\n    display: inline-block;\r\n    text-align: center;\r\n    width: 200px;\r\n    height: 50px;\r\n`;\r\n\r\nconst ThemedActionArea = styled(CardActionArea)`\r\n    height: 100%;\r\n    width: 100%;\r\n`;\r\n\r\nexport default class SoundBoardItem extends React.Component {\r\n\r\n    playClip = () => {\r\n        fetch(`/api/soundboard-play`, {\r\n            method: 'POST',\r\n            body: JSON.stringify({\"text\": `${this.props.clipName}`})\r\n        })\r\n        .then(res => (res.ok ? res : Promise.reject(res)))\r\n        .then(res => res.json())\r\n        .then(json_data => {\r\n            console.log(json_data.status);\r\n        })\r\n        .catch(e => console.log(e));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ThemedCard component={Paper}>\r\n                <Tooltip title={this.props.clipName}>\r\n                    <ThemedActionArea onClick={this.playClip}>\r\n                        <Typography variant=\"body1\" noWrap={true}>{this.props.clipName}</Typography>\r\n                    </ThemedActionArea>\r\n                </Tooltip>\r\n            </ThemedCard>\r\n        );\r\n    }\r\n}\r\n\r\n","import React, { Fragment } from 'react';\r\nimport SoundBoardItem from './SoundBoardItem';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport styled from 'styled-components';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Card from '@material-ui/core/Card';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n\r\nconst ThemedTypography = styled(Typography)`\r\n    color: ${({ theme }) => theme.text};\r\n`;\r\nconst ThemedCard = styled(Card)`\r\n    background-color: ${({ theme }) => theme.contrast};\r\n    color: ${({ theme }) => theme.text};\r\n    display: inline-block;\r\n    text-align: center;\r\n    width: 200px;\r\n    height: 50px;\r\n`;\r\nconst ThemedActionArea = styled(CardActionArea)`\r\n    height: 100%;\r\n    width: 100%;\r\n`;\r\n\r\nexport default class SoundBoardList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            clips: []\r\n        }\r\n    }\r\n\r\n    getSBClips = () => {\r\n        fetch(`/api/soundboardclips`, {\r\n            method: 'GET'\r\n        })\r\n        .then(res => (res.ok ? res : Promise.reject(res)))\r\n        .then(res => res.json())\r\n        .then(json_data => {\r\n            this.setState({clips: json_data.data.clips})\r\n        })\r\n        .catch(e => console.log(e));\r\n    }\r\n\r\n    playRandomClip = () => {\r\n        fetch(`/api/soundboard-random`, {\r\n            method: 'POST'\r\n        })\r\n        .then(res => (res.ok ? res : Promise.reject(res)))\r\n        .then(res => res.json())\r\n        .then(json_data => {\r\n            console.log(json_data.status);\r\n        })\r\n        .catch(e => console.log(e));\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getSBClips();\r\n    }\r\n\r\n    render() {\r\n        let lastClipSection = \"Misc\";\r\n        return (\r\n            <div>\r\n                {\r\n                    <Fragment>\r\n                        <ThemedCard component={Paper}>\r\n                            <Tooltip title={\"Play Random Clip\"}>\r\n                                <ThemedActionArea onClick={this.playRandomClip}>\r\n                                    <Typography variant=\"body1\" noWrap={true}>{\"Random Clip\"}</Typography>\r\n                                </ThemedActionArea>\r\n                            </Tooltip>\r\n                        </ThemedCard>\r\n                        {\r\n                            this.state.clips.map((item, index) => (\r\n                            <Fragment key={`frag-${item}-${index}`}>\r\n                                {\r\n                                    item.charAt(0).toLowerCase() !== lastClipSection.charAt(0).toLowerCase() ? <div>\r\n                                        <br/>\r\n                                        {\r\n                                            <ThemedTypography variant=\"h5\">{lastClipSection = item.charAt(0).toLowerCase() !== item.charAt(0).toUpperCase() ? item.charAt(0).toUpperCase() : \"Misc\"}</ThemedTypography>\r\n                                        }\r\n                                        <hr/>\r\n                                    </div>: \"\"\r\n                                }\r\n                            \r\n                                <SoundBoardItem clipName={item} key={`${item}-${index}`}/>\r\n                            </Fragment>\r\n                            ))\r\n                        }\r\n                    </Fragment>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n}","import React from 'react';\r\nimport {AppBar, Tabs, Tab, Box, Typography, Toolbar, Grid} from '@material-ui/core';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst ThemedTabs = styled(Tabs)`\r\n    background-color: ${({ theme }) => theme.body};\r\n    color: ${({ theme }) => theme.text};\r\n`;\r\n\r\nconst ThemedToolbar = styled(Toolbar)`\r\n    background-color: ${({ theme }) => theme.body};\r\n    color: ${({ theme }) => theme.text};\r\n    display: flex;\r\n    justify-content: space-between;\r\n    *:focus {\r\n        outline: 0 !important;\r\n    }\r\n`;\r\n\r\nconst TabPanel = (props) => {\r\n    const { children, value, index, ...other } = props;\r\n    return (\r\n        <div\r\n        role=\"tabpanel\"\r\n        hidden={value !== index}\r\n        id={`simple-tabpanel-${index}`}\r\n        aria-labelledby={`simple-tab-${index}`}\r\n        {...other}\r\n        >\r\n        {value === index && (\r\n            <Box p={3}>\r\n            <Typography component={'span'}>{children}</Typography>\r\n            </Box>\r\n        )}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst tabProps = (index) => {\r\n    return {\r\n        id: `simple-tab-${index}`,\r\n        'aria-controls': `simple-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nclass TopNavBar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: 0,\r\n            title: \"JJMumbleBot Dashboard\"\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getBotName();\r\n    }\r\n\r\n    getBotName = () => {\r\n        fetch('/api/general/name', {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n              }\r\n        })\r\n        .then(res => (res.ok ? res : Promise.reject(res)))\r\n        .then(res => res.json())\r\n        .then(json_data => this.setState({title: `${json_data.data.name} Dashboard`}))\r\n        .catch(e => {\r\n            console.trace(e);\r\n            this.setState({title: 'JJMumbleBot Dashboard'});\r\n        });\r\n    };\r\n\r\n    handleChange(evt, newVal) {\r\n        this.setState({value: newVal});\r\n    }\r\n    //<img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n    render() {\r\n        return (\r\n            <div className=\"top-nav-bar\" key=\"top-nav-bar-key\">\r\n                <AppBar position=\"static\" key=\"app-bar-key\">\r\n                    <ThemedToolbar key=\"tool-bar-key\">\r\n                        <Typography key=\"app-bar-text-key\" variant=\"h6\">{this.state.title}</Typography>\r\n                        <ThemedTabs key=\"app-bar-tabs-key\" value={this.state.value} onChange={this.handleChange.bind(this)}>\r\n                            {\r\n                                this.props.tabs.map((item, index) => \r\n                                    <Tab key={`tab-${item.name}-${index}`} label={`${item.name}`} {...tabProps(index)} />\r\n                                )\r\n                            }\r\n                        </ThemedTabs>\r\n                        {this.props.themeToggle} \r\n                    </ThemedToolbar>\r\n                </AppBar>\r\n                {\r\n                    this.props.tabs.map((item, index) => (\r\n                        <TabPanel value={this.state.value} index={index} key={`${index}-panel`} hidden={this.state.value !== index}>\r\n                            <Grid container spacing={3}\r\n                                direction=\"row\"\r\n                                alignItems=\"flex-start\" key={`${index}-grid`}>\r\n                            {item.items.map(subitem => subitem)}\r\n                            </Grid>\r\n                        </TabPanel>\r\n                    ))\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TopNavBar;","import React, {useEffect, useState, useRef} from \"react\";\nimport { ThemeProvider } from \"styled-components\";\nimport { GlobalStyles } from \"./components/theme_selectors/GlobalStyles\";\nimport { lightTheme, darkTheme } from \"./components/theme_selectors/Themes\";\nimport { UseDarkMode } from \"./components/theme_selectors/UseDarkMode\";\nimport SetTitle from \"./components/set_title\";\nimport Toggle from \"./components/theme_selectors/ThemeToggler\";\nimport CommandFormGrid from './components/CommandInputGrid';\nimport CommandHistory from './components/CommandHistory';\nimport LatestCommand from './components/LatestCommand';\nimport OnlineUsers from './components/OnlineUsers';\nimport ReactJson from 'react-json-view';\nimport PluginsList from './components/plugins_list';\nimport AudioTrackList from './components/AudioTrackList';\nimport SoundBoardList from './components/SoundBoardList';\nimport TopNavBar from \"./components/nav_bar\";\nimport styled from 'styled-components';\nimport {Snackbar, IconButton} from '@material-ui/core';\nimport {Alert} from '@material-ui/lab';\nimport CachedIcon from '@material-ui/icons/Cached';\nimport './App.css';\nimport url from 'url';\n\n//let socket = new WebSocket(\"ws://192.168.1.200:7000/ws\");\n\n// localStorage.clear();\n\nconst ThemedJSONViewer = styled(ReactJson)`\n  background-color: ${({ theme }) => theme.body};\n  color: ${({ theme }) => theme.text};\n`;\nconst ThemedErrorAlert = styled(Alert)`\n  background-color: ${({ theme }) => theme.black};\n  color: ${({ theme }) => theme.white};\n`;\nconst ThemedIconAlert = styled(IconButton)`\n  color: ${({ theme }) => theme.white};\n`;\n\nfunction App() {\n  const webSocket = useRef(null);\n  const [connectionError, setConnectionError] = useState(false);\n  const [connectionErrorMsg, setConnectionErrorMsg] = useState(\"\");\n  const [socketData, setSocketData] = useState({});\n\n  const [theme, themeToggler] = UseDarkMode();\n  const lightThemeData = {\n    base00: 'rgba(0, 0, 0, 0)',\n    base01: 'rgb(245, 245, 245)',\n    base02: '#2e2e2e',\n    base03: '#93a1a1',\n    base04: 'rgba(0, 0, 0, 0.3)',\n    base05: '#586e75',\n    base06: '#073642',\n    base07: '#002b36',\n    base08: '#d33682',\n    base09: '#cb4b16',\n    base0A: '#dc322f',\n    base0B: '#859900',\n    base0C: '#6c71c4',\n    base0D: '#586e75',\n    base0E: '#2aa198',\n    base0F: '#268bd2'\n  }\n  const darkThemeData = {\n    base00: \"rgba (0, 0, 0, 0)\",\n    base01: \"#202020\",\n    base02: \"#c2c2c2\",\n    base03: \"#505050\",\n    base04: \"#b0b0b0\",\n    base05: \"#d0d0d0\",\n    base06: \"#e0e0e0\",\n    base07: \"#ffffff\",\n    base08: \"#eb008a\",\n    base09: \"#f29333\",\n    base0A: \"#f8ca12\",\n    base0B: \"#37b349\",\n    base0C: \"#00aabb\",\n    base0D: \"#0e5a94\",\n    base0E: \"#b31e8d\",\n    base0F: \"#7a2d00\"\n  }\n  const themeMode = theme === 'light' ? lightTheme : darkTheme;\n  const themeText = theme === 'light' ? 'Light Mode' : 'Dark Mode';\n  const themeToggle = <Toggle theme={theme} themeText={themeText} toggleTheme={themeToggler} />;\n\n  const getSocketData = () => {\n    webSocket.current.onmessage = (msg) => {\n      setSocketData(JSON.parse(msg.data));\n    };\n  };\n\n  useEffect(() => {\n    webSocket.current = new WebSocket(\n      url.format({\n        protocol: window.location.protocol === 'https:' ? 'wss' : 'ws',\n        hostname: window.location.hostname,\n        port: window.location.port || 7000,\n        pathname: '/ws',\n        slashes: true,\n      })\n    );\n    webSocket.current.onerror = () => {\n      setConnectionError(true);\n      setConnectionErrorMsg(`There was an error connecting to the web socket endpoint!`);\n    };\n  }, []);\n\n  useEffect(() => {\n    getSocketData();\n  }, [socketData]);\n\n  const reloadPage = () => {\n    window.location.reload(false);\n  }\n\n  return (\n    <ThemeProvider theme={themeMode}>\n      <SetTitle />\n      <GlobalStyles />\n      <Snackbar \n        anchorOrigin={{vertical: 'top', horizontal: 'center'}}\n        open={connectionError}>\n          <ThemedErrorAlert \n            severity=\"error\"\n            action={\n              <ThemedIconAlert component=\"span\" size=\"small\" onClick={reloadPage}>\n                <CachedIcon/>\n              </ThemedIconAlert>\n            }>\n            {connectionErrorMsg}\n          </ThemedErrorAlert>\n      </Snackbar>\n\n      <TopNavBar\n        themeToggle={themeToggle}\n      tabs={\n        [\n          {\n            \"name\": \"Commands\",\n            \"items\": [\n              <CommandFormGrid key=\"main-cmd-form-key\"/>, \n              <LatestCommand socketData={socketData} key=\"latest-cmd-key\"/>,\n              <CommandHistory socketData={socketData} key=\"cmd-history-key\"/>,\n              <OnlineUsers socketData={socketData} key=\"online-users-key\"/>,\n              <PluginsList key=\"plugins-list-key\"/>\n            ]\n          },\n          {\n            \"name\": \"Audio\",\n            \"items\": [\n              <AudioTrackList socketData={socketData} useDividers={true} key=\"audio-track-list-key\"/>\n            ]\n          },\n          {\n            \"name\": \"Sound Board\",\n            \"items\": [\n              <SoundBoardList key=\"sound-board-list-key\"/>\n            ]\n          },\n          {\n            \"name\": \"Debug\",\n            \"items\": [\n              <ThemedJSONViewer key=\"json-viewer\" src={socketData} iconStyle=\"square\" collapsed={2} displayDataTypes={false} \n                theme={theme === 'light' ? lightThemeData : darkThemeData}/>\n            ]\n          }\n        ]\n        }\n      />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { useEffect, useState } from 'react';\r\nexport const UseDarkMode = () => {\r\n    const [theme, setTheme] = useState('light');\r\n\r\n    const setMode = mode => {\r\n        window.localStorage.setItem('theme', mode)\r\n        setTheme(mode)\r\n    };\r\n\r\n    const themeToggler = () => {\r\n        theme === 'light' ? setMode('dark') : setMode('light')\r\n    };\r\n\r\n    useEffect(() => {\r\n        const localTheme = window.localStorage.getItem('theme');\r\n        localTheme && setTheme(localTheme)\r\n    }, []);\r\n    return [theme, themeToggler]\r\n};\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}